/*! For license information please see tsf.js.LICENSE.txt */
(()=>{var e,t,n,r,a={112:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({relu_:function(e){const t={x:(0,s.YT)(e,"x","relu")};return r.T2.runKernel(a.fUj,t)}})},125:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({clone_:function(e){const t={x:(0,s.YT)(e,"x","clone","string_or_numeric")};return r.T2.runKernel(a.lzr,t)}})},178:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198),u=n(9809);const l=(0,n(929).op)({maximum_:function(e,t){let n=(0,i.YT)(e,"a","maximum"),l=(0,i.YT)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.w)(n,"int32"),l=(0,u.w)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.T2.runKernel(a.LDN,c)}})},252:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var r=n(1585),a=n(5441),s=n(5119),i=n(7195),o=n(929),u=n(2302);const l=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,l,c="NHWC",d){s.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,u.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.vA(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),s.vA(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.vA(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?h[3]:h[1],g="NHWC"===c?p.shape[3]:p.shape[1];s.vA(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),s.vA(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.s_("conv2dDerInput",l,d);const b={dy:p,filter:n},y={strides:o,pad:l,dataFormat:c,dimRoundingMode:d,inputShape:h},x=r.T2.runKernel(a.jfg,b,y);return f?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},259:(e,t,n)=>{"use strict";n.d(t,{qY:()=>y,yl:()=>d,rT:()=>w,tp:()=>x,B4:()=>b,Q5:()=>g,qP:()=>m});var r=n(1743),a=n(5119);function s(e,t,n,r){const s=(0,a.Ur)(t),o=function(e,t,n,r){const s=(0,a.Ze)(t),o=r[r.length-1],u=new Array(o).fill(0),c=t.length,d="complex64"===n?l(e):e;if(c>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(d[t+e],0,n).length)}return u}(e,t,n,s),c=t.length,d=u(e,t,n,s,o),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${c}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.Kg)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,a.av)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const c="complex64"===n?2:1,d=t[0],h=t.length;if(0===h)return"complex64"===n?[i(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===h){if(d>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*c,d*c));return"complex64"===n&&(r=l(r),s=l(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),p,n,f,a,!1))}g.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),p,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),p,n,f,a,t===d-1))}const b=2===h?",":"";g[0]="["+(d>0?g[0]+b:"");for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+b;let y=",\n";for(let e=2;e<h;e++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":y),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(3879);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.Ze(e),null!=n){const e=n.length;a.vA(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.Ab(t,this.size),this.strides=(0,a.Ur)(e)}set(e,...t){0===t.length&&(t=[0]),a.vA(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(e){h=e}function g(e){p=e}function b(e){f=e}class y{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.Ze(e),this.strides=(0,a.Ur)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function x(){return(0,r.m)("Tensor",(()=>y))}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class w extends y{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.r1(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(w,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},551:()=>{},565:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>l,isTensorInList:()=>u,makeTypesMatch:()=>i});var r=n(259),a=n(2046),s=n(5119);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,s.vA)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.qY)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),c(r,t,n))}}},676:(e,t,n)=>{"use strict";n.d(t,{G:()=>c});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(7195),u=n(929),l=n(2302);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",d=[1,1],h){const p=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.vA(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const b="NHWC"===c?m.shape[3]:m.shape[1];i.vA(b===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${b}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.s_("depthwiseConv2d",u,h);const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h},w=r.T2.runKernel(a.tGH,y,x);return g?(0,l.t)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},700:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({step_:function(e,t=0){const n={x:(0,s.YT)(e,"x","step")},i={alpha:t};return r.T2.runKernel(a.pnw,n,i)}})},897:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({argMax_:function(e,t=0){const n={x:(0,s.YT)(e,"x","argMax")},i={axis:t};return r.T2.runKernel(a.Jp_,n,i)}})},929:(e,t,n)=>{"use strict";n.d(t,{op:()=>i});var r=n(1585),a=n(5119);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.T2.startScope(n);try{const t=i(...e);return(0,a.yL)(t)&&console.error("Cannot return a Promise inside of tidy."),r.T2.endScope(t),t}catch(e){throw r.T2.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},1078:(e,t,n)=>{"use strict";n.d(t,{Em:()=>l,SM:()=>o,WC:()=>u,WH:()=>a,aF:()=>s,fK:()=>d,gx:()=>c,lb:()=>i});var r=n(5119);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.vA(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},1106:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(8189),a=n(252);const s=(0,n(929).op)({conv2dTranspose_:function(e,t,n,s,i,o){const u=(0,r.YT)(e,"x","conv2dTranspose"),l=(0,r.YT)(t,"filter","conv2dTranspose");return(0,a.v)(n,u,l,s,i,"NHWC",o)}})},1234:()=>{},1303:(e,t,n)=>{"use strict";n.d(t,{M:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({less_:function(e,t){let n=(0,i.YT)(e,"a","less","string_or_numeric"),u=(0,i.YT)(t,"b","less","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.mIA,l)}})},1329:(e,t,n)=>{"use strict";n.a(e,(async(e,t)=>{try{n(9160);var r=n(4373);(0,n(6554).zj)("./"),await r.jh6("wasm"),await r.Gc4();const e=r.KtR([[1,2],[3,4]]),a=r.KtR([[5,6],[7,8]]);e.matMul(a).print(),t()}catch(e){t(e)}}),1)},1361:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(1585),a=n(5441),s=n(5119);const i=(0,n(929).op)({fft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(a.rGP,t)}})},1411:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(1585),a=n(5119),s=n(7148),i=n(2855);function o(e,t="float32"){if((0,a.SA)(e),"complex64"===t){const t=o(e,"float32"),n=(0,i.U)(e,"float32");return(0,s.f)(t,n)}const n=(0,a.FZ)((0,a.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},1585:(e,t,n)=>{"use strict";n.d(t,{T2:()=>w,Ye:()=>x});var r=n(5149),a=n(6574),s=n(1743),i=n(5441),o=n(7074),u=n(3673),l=n(3879),c=n(5119);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,a._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?c.av(`${r}ms`,9):r.error,o=c.av(e,25),u=t.rank,l=t.size,d=c.av(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(259),m=n(565);function g(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,o.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.uI||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.i(`Initialization of backend ${e} failed`),u.i(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.i(`Initialization of backend ${e} failed`),u.i(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=w.runKernel(i.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return w.runKernel(i.KXH,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o._5)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,o._5)(t,this.backendName);c.vA(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.vQ)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.Kg(e[0])&&(a=e.map((e=>l.encodeString(e))));const s=r.write(a,t,n),i=new f.qY(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.SL)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.qY(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,o.vQ)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.Ty(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.vA(a instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,c.FZ)((0,c.Ze)(e),"float32");return w.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!c.r1(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.vA(c.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.vA(t.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.vA(n.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.vA(c.Tn(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.vA(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.vA(s.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,s.L)();if(null==e._tfengine){const t=new a.OH(e);e._tfengine=new y(t)}return(0,a.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const w=x();function v(e,t){const n={a:e,b:t};return w.runKernel(i.OMN,n)}},1743:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{L:()=>a,m:()=>s})},1760:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({oneHot_:function(e,t,n=1,i=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,s.YT)(e,"indices","oneHot","int32")},l={dtype:o,depth:t,onValue:n,offValue:i};return r.T2.runKernel(a.urI,u,l)}})},1830:(e,t,n)=>{"use strict";n.d(t,{_X:()=>o,y7:()=>i});var r=n(1585),a=n(259),s=n(5119);function i(e,t){s.vA(s.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),s.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof a.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.T2.registeredVariables)t.push(r.T2.registeredVariables[e])}const i=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),s.vA(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.T2.gradients(e,t,null,!0);s.vA(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.vA(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=i&&i.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function o(e){return r.T2.customGrad(e)}},1890:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var r=n(1585),a=n(5441),s=n(929),i=n(2302);const o=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:c,dy:d},p={strides:s,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return r.T2.runKernel(a.X$8,h,p)}})},1895:(e,t,n)=>{"use strict";n.d(t,{c:()=>u});var r=n(1585),a=n(5441),s=n(5119),i=n(929),o=n(2302);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){s.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=c.shape[4];s.vA(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),s.vA(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),s.vA(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.vA(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),s.vA(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=r.T2.runKernel(a.gC7,f,m);return d?(0,o.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},1902:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({real_:function(e){const t={input:(0,s.YT)(e,"input","real")};return r.T2.runKernel(a.LRy,t)}})},1938:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({max_:function(e,t=null,n=!1){const i={x:(0,s.YT)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.T2.runKernel(a.VAI,i,o)}})},2015:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({log1p_:function(e){const t={x:(0,s.YT)(e,"x","log1p")};return r.T2.runKernel(a.Cg$,t)}})},2046:(e,t,n)=>{"use strict";var r,a,s,i,o;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>l,ch:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}function d(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},2058:(e,t,n)=>{"use strict";n.d(t,{r:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({greater_:function(e,t){let n=(0,i.YT)(e,"a","greater","string_or_numeric"),u=(0,i.YT)(t,"b","greater","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.XhZ,l)}})},2118:(e,t,n)=>{"use strict";n.d(t,{E:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({notEqual_:function(e,t){let n=(0,i.YT)(e,"a","notEqual","string_or_numeric"),u=(0,i.YT)(t,"b","notEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.ylV,l)}})},2151:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(1585),a=n(5441),s=n(8189),i=n(3567),o=n(2198);const u=(0,n(929).op)({where_:function(e,t,n){const u=(0,s.YT)(t,"a","where"),l=(0,s.YT)(n,"b","where"),c=(0,s.YT)(e,"condition","where","bool"),d=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),h={condition:(0,i.h)(c,d),t:(0,i.h)(u,d),e:(0,i.h)(l,d)};return r.T2.runKernel(a.l6P,h)}})},2198:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-a-1]=s}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>r,getReductionAxes:()=>a})},2292:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var r=n(7148),a=n(5030),s=n(5040),i=n(9258),o=n(929),u=n(1902),l=n(2302),c=n(3262),d=n(5702),h=n(7986),p=n(3108);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.t)(e,[n,t]);o=(0,p.K)(r)}else{const f=[n,2*(t-1)],m=(0,l.t)((0,u.x)(e),[n,t]),g=(0,l.t)((0,s.n)(e),[n,t]),b=(0,c.B)((0,h.d)(m,[0,1],[n,t-2]),1),y=(0,i.l)((0,c.B)((0,h.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),x=(0,a.x)([m,b],1),w=(0,a.x)([g,y],1),v=(0,l.t)((0,r.f)(x,w),[f[0],f[1]]);o=(0,p.K)(v)}if(o=(0,u.x)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.t)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},2302:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({reshape_:function(e,t){const n={x:(0,s.YT)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.T2.runKernel(a.R23,n,i)}})},2307:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({all_:function(e,t=null,n=!1){const i={x:(0,s.YT)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.T2.runKernel(a.u8Z,i,o)}})},2596:(e,t,n)=>{"use strict";n.d(t,{x:()=>b});var r=n(8189),a=n(5119),s=n(4888),i=n(1078),o=n(1938),u=n(7436),l=n(929),c=n(8990),d=n(2302),h=n(5702),p=n(9348),f=n(5793),m=n(3791);function g(e,t,n=null){if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,s.t)(e),n);if(t===1/0)return(0,o.T)((0,s.t)(e),n);if(t===-1/0)return(0,u.j)((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,m.c)((0,c.n)((0,s.t)(e),(0,h.d)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.T)((0,m.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.T)((0,m.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return(0,u.j)((0,m.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,m.c)((0,f.E)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const b=(0,l.op)({norm_:function(e,t="euclidean",n=null,s=!1){const o=g(e=(0,r.YT)(e,"x","norm"),t,n);let u=o.shape;if(s){const t=(0,a.Y6)(n,e.shape);u=i.SM(o.shape,t)}return(0,d.t)(o,u)}})},2610:(e,t,n)=>{"use strict";n.d(t,{q:()=>a});var r=n(3347);function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.ZSL.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),i=r.ZSL.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}},2611:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({mean_:function(e,t=null,n=!1){const i={x:(0,s.YT)(e,"x","mean")},o={axis:t,keepDims:n};return r.T2.runKernel(a.g5A,i,o)}})},2644:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198),u=n(9809);const l=(0,n(929).op)({minimum_:function(e,t){let n=(0,i.YT)(e,"a","minimum"),l=(0,i.YT)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.w)(n,"int32"),l=(0,u.w)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.T2.runKernel(a.LG0,c)}})},2750:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(3347);function a(e,t,n,a){const s=r.ZSL.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const o=new Map,u=new Int32Array(n[s]),l=new r.ylz(i,a,e),c=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=o.get(n);if(null!=r)u[t]=r;else{const e=o.size;o.set(n,e),u[t]=e,c.push(t)}}const h=i.slice();h[1]=o.size;const p=new r.ylz(h,a);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:u}}},2855:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(1585),a=n(5119),s=n(7148);function i(e,t="float32"){if((0,a.SA)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,s.f)(t,n)}const n=(0,a.Ty)((0,a.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},2948:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(3347);function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function s(e,t,n){const s=e.length,i=[];let o=0,u=0;const l=new Array(s);for(let r=0;r<s;++r){const s=i.length;a(e[r],t,n,i);const c=i.length-s;l[r]=c,o+=c,u=Math.max(u,c)}const c=r.ZSL.getArrayFromDType("int32",2*o),d=new Array(o),h=[s,u];let p=0;for(let e=0;e<s;++e)for(let t=0;t<l[e];++t)c[2*p]=e,c[2*p+1]=t,d[p]=i[p],++p;return[c,d,h]}},2954:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(929),u=n(2302);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,s.YT)(e,"images","resizeNearestNeighbor");i.vA(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.vA(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.vA("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.vA(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,d=!1;3===l.rank&&(d=!0,c=(0,u.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.T2.runKernel(a.jOE,h,p);return d?(0,u.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3020:(e,t,n)=>{"use strict";n.d(t,{L:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({equal_:function(e,t){let n=(0,i.YT)(e,"a","equal","string_or_numeric"),u=(0,i.YT)(t,"b","equal","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.BRl,l)}})},3031:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},3108:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(1585),a=n(5441),s=n(5119);const i=(0,n(929).op)({ifft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(a.OAQ,t)}})},3134:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(1585),a=n(5441),s=n(929),i=n(2302);const o=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],l){let c=t,d=!1;3===t.rank&&(d=!0,c=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:c,filter:n},p={strides:s,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=r.T2.runKernel(a.nVu,h,p);return d?(0,i.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3181:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},3262:(e,t,n)=>{"use strict";n.d(t,{B:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({reverse_:function(e,t){const n={x:(0,s.YT)(e,"x","reverse")},i={dims:t};return r.T2.runKernel(a.D7i,n,i)}})},3330:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var r=n(8189),a=n(5119),s=n(7523),i=n(1078),o=n(8631),u=n(4010),l=n(1938),c=n(929),d=n(2302),h=n(7126),p=n(3791);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r.YT)(e,"x","logSumExp"),f=(0,a.Y6)(t,c.shape),m=(0,l.T)(c,f,!0),g=(0,h.j)(c,m),b=(0,o.o)(g),y=(0,p.c)(b,f),x=(0,u.R)(y),w=(0,s.W)((0,d.t)(m,x.shape),x);if(n){const e=(0,i.SM)(w.shape,f);return(0,d.t)(w,e)}return w}})},3337:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({greaterEqual_:function(e,t){let n=(0,i.YT)(e,"a","greaterEqual","string_or_numeric"),u=(0,i.YT)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.lLS,l)}})},3347:(e,t,n)=>{"use strict";n.d(t,{ljI:()=>ut.ljI,Vvy:()=>ut.Vvy,PH8:()=>ut.PH8,OMN:()=>ut.OMN,EkD:()=>ut.EkD,u8Z:()=>ut.u8Z,FSt:()=>ut.FSt,Jp_:()=>ut.Jp_,p_m:()=>ut.p_m,QKF:()=>ut.QKF,epO:()=>ut.epO,TyE:()=>ut.TyE,lxb:()=>ut.lxb,zP9:()=>ut.zP9,ho8:()=>ut.ho8,cS:()=>ut.cS,wwC:()=>ut.wwC,VCH:()=>ut.VCH,jAQ:()=>ut.jAQ,Ik2:()=>ut.Ik2,N4F:()=>ut.N4F,HNs:()=>ut.HNs,vj7:()=>ut.vj7,KXH:()=>ut.KXH,QDP:()=>ut.QDP,vaV:()=>ut.vaV,pr3:()=>ut.pr3,$zE:()=>ut.$zE,$dB:()=>ut.$dB,p2J:()=>ut.p2J,rFm:()=>ut.rFm,jfg:()=>ut.jfg,A1h:()=>ut.A1h,iGz:()=>ut.iGz,gC7:()=>ut.gC7,Mn0:()=>ut.Mn0,MnK:()=>ut.MnK,MRQ:()=>ut.MRQ,jj_:()=>ut.jj_,nY8:()=>ut.nY8,GJx:()=>ks.GJ,wNW:()=>ut.wNW,TMz:()=>ut.TMz,tGH:()=>ut.tGH,X$8:()=>ut.X$8,nVu:()=>ut.nVu,ORI:()=>ut.ORI,jxD:()=>ut.jxD,pk0:()=>ut.pk0,bP9:()=>ut.bP9,XmO:()=>ut.XmO,Qgm:()=>ut.Qgm,Pah:()=>ut.Pah,rsH:()=>ut.rsH,BRl:()=>ut.BRl,_s9:()=>ut._s9,ox3:()=>ut.ox3,ybN:()=>ut.ybN,ybj:()=>ut.ybj,rGP:()=>ut.rGP,SQl:()=>ut.SQl,BxF:()=>ut.BxF,ZgB:()=>ut.ZgB,ElG:()=>ut.ElG,awo:()=>ut.awo,i5R:()=>ut.i5R,aAr:()=>ut.aAr,T7M:()=>ut.T7M,O4G:()=>ut.O4G,mxL:()=>ut.mxL,XhZ:()=>ut.XhZ,lLS:()=>ut.lLS,OAQ:()=>ut.OAQ,lzr:()=>ut.lzr,dv8:()=>ut.dv8,gIW:()=>ut.gIW,E3$:()=>ut.E3$,iPs:()=>ut.iPs,uI_:()=>ks.uI,jM4:()=>ut.jM4,ToN:()=>ut.ToN,X0$:()=>ut.X0$,mIA:()=>ut.mIA,CwD:()=>ut.CwD,mnI:()=>ut.mnI,tG8:()=>ut.tG8,Cg$:()=>ut.Cg$,RUm:()=>ut.RUm,nZd:()=>ut.nZd,LXA:()=>ut.LXA,RW8:()=>ut.RW8,VAI:()=>ut.VAI,t3d:()=>ut.t3d,ySp:()=>ut.ySp,cHb:()=>ut.cHb,RXX:()=>ut.RXX,TL8:()=>ut.TL8,LDN:()=>ut.LDN,g5A:()=>ut.g5A,lNG:()=>ut.lNG,LG0:()=>ut.LG0,x7F:()=>ut.x7F,BLA:()=>ut.BLA,WT3:()=>ut.WT3,xu7:()=>ut.xu7,l0G:()=>ut.l0G,SDM:()=>ut.SDM,Zl4:()=>ut.Zl4,e0f:()=>ut.e0f,ylV:()=>ut.ylV,urI:()=>ut.urI,LWX:()=>ut.LWX,ELo:()=>Ce,mM$:()=>ut.mM$,ODT:()=>ut.ODT,pyJ:()=>ut.pyJ,Ncv:()=>ut.Ncv,kdj:()=>ut.kdj,oJ2:()=>ut.oJ2,CQC:()=>ut.CQC,mH5:()=>ut.mH5,Q6t:()=>ut.Q6t,LRy:()=>ut.LRy,sDr:()=>ut.sDr,huO:()=>ut.huO,fUj:()=>ut.fUj,P_L:()=>ut.P_L,R23:()=>ut.R23,hgw:()=>ut.hgw,FCQ:()=>ut.FCQ,jOE:()=>ut.jOE,XQy:()=>ut.XQy,D7i:()=>ut.D7i,BK4:()=>ut.BK4,hVg:()=>ut.hVg,TOR:()=>ut.TOR,pJc:()=>ut.pJc,uWl:()=>ut.uWl,l6P:()=>ut.l6P,u$b:()=>ut.u$b,vI1:()=>ut.vI1,YVe:()=>ut.YVe,hql:()=>ut.hql,J3C:()=>ut.J3C,JiE:()=>ut.JiE,rFG:()=>ut.rFG,Fin:()=>ut.Fin,A8B:()=>ut.A8B,C8s:()=>ut.C8s,BoJ:()=>ut.BoJ,L6G:()=>ut.L6G,DvZ:()=>ut.DvZ,jgd:()=>ut.jgd,Blb:()=>ut.Blb,dFH:()=>ut.dFH,M6A:()=>ut.M6A,Ddj:()=>ut.Ddj,GZp:()=>ut.GZp,pnw:()=>ut.pnw,UcO:()=>ut.UcO,YAb:()=>ut.YAb,iW0:()=>ut.iW0,$jE:()=>ut.$jE,PbM:()=>ut.PbM,WuN:()=>ut.WuN,oFs:()=>ut.oFs,iuW:()=>ut.iuW,qYS:()=>ie.qY,ylz:()=>ie.yl,X4r:()=>ut.X4r,FAs:()=>ut.FAs,TBb:()=>ut.TBb,dLy:()=>ut.dLy,wx0:()=>ut.wx0,EwU:()=>ut.EwU,dXR:()=>ut.dXR,pPe:()=>ut.pPe,xJ3:()=>ut.xJ3,Dr:()=>ut.Dr,tnl:()=>Fe.t,WQq:()=>he.W,Q7R:()=>_t.Q,bzn:()=>Et.b,FLi:()=>Rt.F,$jT:()=>Ft.$,sub:()=>Mt,Hs:()=>de.Hs,C0T:()=>d,BFc:()=>zt,kSi:()=>Pt,T5N:()=>Wt,hOW:()=>Bt.h,ZEY:()=>ot,TaL:()=>i,ra8:()=>oe,wgE:()=>ue.w,zQh:()=>Ut.z,o8B:()=>le.o,xWs:()=>Vt.x,I1m:()=>Gt,RPU:()=>Zt,O5O:()=>Ht,P1l:()=>Kt,kA9:()=>jt.k,Xtf:()=>qt.X,wX9:()=>Qt.w,IPL:()=>Yt,jIJ:()=>Jt,aOp:()=>en,Gl3:()=>tn.G,eMq:()=>r,ASo:()=>de.AS,y4m:()=>pe.y,EZY:()=>fr,Pqc:()=>nn.P,Hi9:()=>de.Hi,_K2:()=>y._K,LCg:()=>rn.L,Y12:()=>an.Y,oNF:()=>sn.o,UG6:()=>on.U,y5U:()=>ln,GSj:()=>Ae.G,RIf:()=>cn.R,cZk:()=>l,kgh:()=>dn.k,FJy:()=>o,rhj:()=>hn.r,DQN:()=>pn.D,Slp:()=>da,io:()=>s,aCs:()=>de.aC,kpo:()=>h,H8d:()=>fn.H,mPL:()=>ha,Rm2:()=>mn.R,Kko:()=>gn.K,HPB:()=>bn.H,VZ:()=>yn.V,n76:()=>xn.n,NoW:()=>wn.N,T9B:()=>vn.T,jgi:()=>kn.j,NYV:()=>Sn,PhQ:()=>De.P,i2o:()=>In.i,m1Z:()=>de.m1,jkA:()=>Tn.j,BpO:()=>Cn.B,Clk:()=>An,lKK:()=>fe.l,HZy:()=>$n.H,dA1:()=>ma,Ec:()=>_n.E,Mw0:()=>En.M,SaS:()=>Rn.S,P61:()=>Fn.P,eVF:()=>Dn.e,n7C:()=>_e.n,NsG:()=>Ln.N,FE$:()=>Pn,YeY:()=>Wn,y17:()=>Bn,Gc4:()=>de.Gc,gJX:()=>de.gJ,tAK:()=>lt.tA,VVh:()=>Un.V,tQQ:()=>Lt.t,BEg:()=>Vn.B,d_2:()=>xe.d,g23:()=>u,WfX:()=>Gn.W,wdz:()=>Zn.w,JFn:()=>a,jh6:()=>de.jh,ry7:()=>Hn.r,dik:()=>Kn.d,Q$M:()=>jn,zAd:()=>qn,wck:()=>Qn,R0O:()=>Yn,Kro:()=>Tt,Vs9:()=>Xn.V,lw0:()=>Jn.l,lDo:()=>er.l,RZD:()=>me.R,r2V:()=>tr.r,t$z:()=>nr.t,jbE:()=>Ee.j,czq:()=>rr.c,chL:()=>$t.ch,ymU:()=>ar.y,OEK:()=>sr.O,tGX:()=>ir,KtR:()=>or,d_S:()=>Ct,DZQ:()=>de.DZ,Vsq:()=>un.V,BaG:()=>pa,mgz:()=>pr.m,efE:()=>ur,K$i:()=>lr.K,TuY:()=>$t.Tu,ZSL:()=>Nt,bvq:()=>cr,bgA:()=>At,_M9:()=>dr._,Ul9:()=>hr.U,POl:()=>be.P});var r={};n.r(r),n.d(r,{isBrowser:()=>b,isMobile:()=>g,mockIsMobile:()=>m});var a={};n.r(a),n.d(a,{Serializable:()=>ke,SerializationMap:()=>Se,getRegisteredName:()=>Te,registerClass:()=>Ie});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>C.D,browserFiles:()=>Ve,browserHTTPRequest:()=>Je,concatenateArrayBuffers:()=>w.AQ,copyModel:()=>te,decodeWeights:()=>w.CY,decodeWeightsStream:()=>w.s5,encodeWeights:()=>w.aG,fromMemory:()=>rt,fromMemorySync:()=>at,getLoadHandlers:()=>T,getModelArtifactsForJSON:()=>w.Ej,getModelArtifactsForJSONSync:()=>w.Rl,getModelArtifactsInfoForJSON:()=>w.oR,getSaveHandlers:()=>I,getWeightSpecs:()=>w.Xf,http:()=>Xe,isHTTPScheme:()=>Qe,listModels:()=>J,loadWeights:()=>Ke,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>je,withSaveHandler:()=>st,withSaveHandlerSync:()=>it});var i={};n.r(i),n.d(i,{draw:()=>xt,fromPixels:()=>wt,fromPixelsAsync:()=>gt,toPixels:()=>yt});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>vt});var u={};n.r(u),n.d(u,{calculateShapes:()=>It,validateInput:()=>St,validateUpdateShape:()=>kt});var l={};n.r(l),n.d(l,{conv2d:()=>Nr,depthwiseConv2d:()=>_r,matMul:()=>Er});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>ys,computeOutShape:()=>bs,segOpComputeOptimalWindowSize:()=>gs});var d={};n.r(d),n.d(d,{ERF_A1:()=>Fa,ERF_A2:()=>Da,ERF_A3:()=>La,ERF_A4:()=>Ma,ERF_A5:()=>Oa,ERF_P:()=>Ra,PARALLELIZE_THRESHOLD:()=>Sa,RowPartitionType:()=>ya,SELU_SCALE:()=>Ea.X,SELU_SCALEALPHA:()=>Ea.j,applyActivation:()=>Tr,assertAndGetBroadcastShape:()=>ot.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>Nn.WC,assertParamsConsistent:()=>ga,assignToTypedArray:()=>Ga,axesAreInnerMostDims:()=>Nn.WH,calculateShapes:()=>It,checkEinsumDimSizes:()=>Ja,checkPadOnDimRoundingMode:()=>Dt.s_,combineLocations:()=>Nn.aF,combineRaggedTensorToTensorShapes:()=>xa,complexWithEvenIndex:()=>Ba,complexWithOddIndex:()=>Ua,computeConv2DInfo:()=>Dt.uf,computeConv3DInfo:()=>Dt.p$,computeDefaultPad:()=>Dt.G8,computeDilation2DInfo:()=>Dt.YQ,computeOptimalWindowSize:()=>Ia,computeOutAndReduceShapes:()=>Nn.lb,computeOutShape:()=>ba,computePool2DInfo:()=>Dt.E6,computePool3DInfo:()=>Dt.l5,convertConv2DDataFormat:()=>Dt.$Q,decodeEinsumEquation:()=>Ya,eitherStridesOrDilationsAreOne:()=>Dt.G0,expandShapeToKeepDim:()=>Nn.SM,exponent:()=>Ha,exponents:()=>Za,fromStringArrayToUint8:()=>ws,fromUint8ToStringArray:()=>xs,getAxesPermutation:()=>Nn.Em,getBroadcastDims:()=>ot.getBroadcastDims,getComplexWithIndex:()=>Va,getEinsumComputePath:()=>es,getEinsumPermutation:()=>Xa,getFusedBiasGradient:()=>Ir,getFusedDyActivation:()=>Sr,getImageCenter:()=>Ta,getInnerMostAxes:()=>Nn.fK,getPermuted:()=>Na,getRaggedRank:()=>va,getReductionAxes:()=>ot.getReductionAxes,getReshaped:()=>Ca,getReshapedPermuted:()=>Aa,getRowPartitionTypesHelper:()=>wa,getSliceBeginCoords:()=>$a,getSliceSize:()=>_a,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>as,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>ss,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>is,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ls,getSparseReshapeInputOutputMismatchErrorMessage:()=>ds,getSparseReshapeInputOutputMultipleErrorMessage:()=>cs,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>os,getSparseReshapeNegativeOutputDimErrorMessage:()=>us,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ms,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>hs,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ps,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>fs,getUndoAxesPermutation:()=>Nn.gx,isIdentityPermutation:()=>ts,log:()=>za.R,mergeRealAndImagArrays:()=>Pa,prepareAndValidate:()=>vt,prepareSplitSize:()=>rs,segment_util:()=>c,shouldFuse:()=>Cr,slice_util:()=>Tt,splitRealAndImagArrays:()=>Wa,stridesOrDilationsArePositive:()=>Dt.qk,tupleValuesAreOne:()=>Dt.Dh,upcastType:()=>$t.Tu,validateDefaultValueShape:()=>ka,validateInput:()=>St,validateUpdateShape:()=>kt,warn:()=>za.i});var h={};n.r(h),n.d(h,{c7:()=>Ur,ZS:()=>Vr,ut:()=>Gr,YO:()=>vs});var p=n(1585);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var y=n(6574);const x=(0,y._K)();x.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),x.registerFlag("IS_BROWSER",(()=>b())),x.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),x.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),x.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),x.registerFlag("PROD",(()=>!1)),x.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>x.getBool("DEBUG"))),x.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),x.registerFlag("IS_TEST",(()=>!1)),x.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>x.getBool("DEBUG"))),x.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),x.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),x.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var w=n(7084);class v{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==v.instance&&(v.instance=new v),v.instance}static registerSaveRouter(e){v.getInstance().saveRouters.push(e)}static registerLoadRouter(e){v.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return v.getHandlers(e,"save")}static getLoadHandlers(e,t){return v.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?v.getInstance().loadRouters:v.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const k=e=>v.registerSaveRouter(e),S=e=>v.registerLoadRouter(e),I=e=>v.getSaveHandlers(e),T=(e,t)=>v.getLoadHandlers(e,t);var C=n(6734);const N="tensorflowjs",A="models_store",$="model_info_store";function _(){if(!(0,y._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function E(e){const t=e.result;t.createObjectStore(A,{keyPath:"modelPath"}),t.createObjectStore($,{keyPath:"modelPath"})}class R{constructor(e){if(this.indexedDB=_(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(N,1);r.onupgradeneeded=()=>E(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(A,"readonly"),r=t.objectStore(A).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=C.D.join(t.weightData);const r=(0,w.oR)(t),s=a.transaction($,"readwrite");let i,o,u=s.objectStore($);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=a.transaction(A,"readwrite");const i=o.objectStore(A);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=s.objectStore($);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==o?a.close():o.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}R.URL_SCHEME="indexeddb://";const F=e=>{return(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(R.URL_SCHEME)?(t=e.slice(R.URL_SCHEME.length),new R(t)):null;var t};v.registerSaveRouter(F),v.registerLoadRouter(F);class D{constructor(){this.indexedDB=_()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(N,1);n.onupgradeneeded=()=>E(n),n.onsuccess=()=>{const r=n.result,a=r.transaction($,"readonly"),s=a.objectStore($).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(R.URL_SCHEME)?t.slice(R.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(N,1);r.onupgradeneeded=()=>E(r),r.onsuccess=()=>{const a=r.result,s=a.transaction($,"readwrite"),i=s.objectStore($),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(A,"readwrite");const r=u.objectStore(A).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var L=n(5119);const M="/",O="tensorflowjs_models",z="info",P="model_topology",W="weight_specs",B="weight_data",U="model_metadata";function V(e){return{info:[O,e,z].join(M),topology:[O,e,P].join(M),weightSpecs:[O,e,W].join(M),weightData:[O,e,B].join(M),modelMetadata:[O,e,U].join(M)}}function G(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Z(e){const t=e.split(M);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(M)}class H{constructor(e){if(!(0,y._K)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=V(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=(0,w.oR)(e),a=C.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,(0,w.l3)(a));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw G(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,w.jf)(s),t}}H.URL_SCHEME="localstorage://";const K=e=>{return(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(H.URL_SCHEME)?(t=e.slice(H.URL_SCHEME.length),new H(t)):null;var t};v.registerSaveRouter(K),v.registerLoadRouter(K);class j{constructor(){(0,L.vA)((0,y._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,L.vA)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=O+M,n=M+z;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Z(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=V(e=(t=e).startsWith(H.URL_SCHEME)?t.slice(H.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return G(n),r}}const q="://";class Q{constructor(){this.managers={}}static getInstance(){return null==Q.instance&&(Q.instance=new Q),Q.instance}static registerManager(e,t){(0,L.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(q)&&(e=e.slice(0,e.indexOf(q))),(0,L.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=Q.getInstance();(0,L.vA)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Q.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Q.getInstance().managers)}}function Y(e){if(-1===e.indexOf(q))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Q.getSchemes().join(",")}`);return{scheme:e.split(q)[0],path:e.split(q)[1]}}async function X(e,t,n=!1){(0,L.vA)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=v.getLoadHandlers(e);(0,L.vA)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,L.vA)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=v.getSaveHandlers(t);(0,L.vA)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,L.vA)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=Y(e).scheme,u=Y(e).path,l=o===Y(e).scheme,c=await a.load();n&&l&&await Q.getManager(o).removeModel(u);const d=await i.save(c);return n&&!l&&await Q.getManager(o).removeModel(u),d.modelArtifactsInfo}async function J(){const e=Q.getSchemes(),t={};for(const n of e){const e=await Q.getManager(n).listModels();for(const r in e)t[n+q+r]=e[r]}return t}async function ee(e){const t=Y(e);return Q.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return X(e,t,!1)}async function ne(e,t){return X(e,t,!0)}var re=n(6448);class ae{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&(0,y._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,re.Y)(e)}}if((0,y._K)().get("IS_BROWSER")){(0,y._K)().setPlatform("browser",new ae);try{Q.registerManager(H.URL_SCHEME,new j)}catch(e){}try{Q.registerManager(R.URL_SCHEME,new D)}catch(e){}}let se;(0,y._K)().get("IS_NODE")&&!(0,y._K)().get("IS_BROWSER")&&(0,y._K)().setPlatform("node",new class{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,y._K)().global.fetch?(0,y._K)().global.fetch(e,t):(null==se&&(se=n(5817)),se(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var ie=n(259);function oe(e,t="float32",n){return t=t||"float32",L.SA(e),new ie.yl(e,t,n)}var ue=n(9809),le=n(125);(0,p.Ye)();const ce={buffer:oe,cast:ue.w,clone:le.o,print:function(e,t=!1){console.log(e.toString(t))}};(0,ie.Q5)(ce);var de=n(5287),he=n(7523),pe=n(9359),fe=n(9258),me=n(9348),ge=n(5793),be=n(5537),ye=n(1830),xe=n(5702);const we=new Map,ve=new Map;class ke{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Se{constructor(){this.classNameMap={}}static getMap(){return null==Se.instance&&(Se.instance=new Se),Se.instance}static register(e){Se.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ie(e,t,n){(0,L.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,L.vA)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,L.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Se.register(e),we.set(r,e),ve.set(e,r),e}function Te(e){return ve.has(e)?ve.get(e):e.className}class Ce extends ke{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,de.AS)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,ye.y7)(e,t)}dispose(){null!=this.iterations_&&(0,de.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,xe.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ce,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ne extends Ce{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,de.DZ)((()=>(0,be.P)(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,de.DZ)((()=>(0,be.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,de.DZ)((()=>{const e=(0,he.W)((0,fe.l)(i,this.rho),(0,fe.l)((0,ge.E)(s),1-this.rho)),t=(0,fe.l)((0,pe.y)((0,me.R)((0,he.W)(o,this.epsilon)),(0,me.R)((0,he.W)(i,this.epsilon))),s),n=(0,he.W)((0,fe.l)(o,this.rho),(0,fe.l)((0,ge.E)(t),1-this.rho));i.assign(e),o.assign(n);const a=(0,he.W)((0,fe.l)(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,de.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,de.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Ae=n(6111);class $e extends Ce{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,de.DZ)((()=>(0,Ae.G)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,de.DZ)((()=>{const e=(0,he.W)(s,(0,ge.E)(a));s.assign(e);const t=(0,he.W)((0,fe.l)((0,pe.y)(a,(0,me.R)((0,he.W)(e,p.T2.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,de.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var _e=n(8990),Ee=n(7126);class Re extends Ce{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,de.DZ)((()=>{this.accBeta1=(0,xe.d)(t).variable(),this.accBeta2=(0,xe.d)(n).variable()})),null==r&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,de.DZ)((()=>{const n=(0,Ee.j)(1,this.accBeta1),r=(0,Ee.j)(1,this.accBeta2);t.forEach(((t,a)=>{const s=p.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,de.DZ)((()=>(0,be.P)(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,de.DZ)((()=>(0,be.P)(s).variable(i)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,c=(0,he.W)((0,fe.l)(u,this.beta1),(0,fe.l)(o,1-this.beta1)),d=(0,he.W)((0,fe.l)(l,this.beta2),(0,fe.l)((0,ge.E)(o),1-this.beta2)),h=(0,pe.y)(c,n),f=(0,pe.y)(d,r);u.assign(c),l.assign(d);const m=(0,he.W)((0,fe.l)((0,pe.y)(h,(0,he.W)((0,me.R)(f),this.epsilon)),-this.learningRate),s);s.assign(m)})),this.accBeta1.assign((0,fe.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,fe.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,de.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,de.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,de.DZ)((()=>{this.accBeta1.assign((0,_e.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,_e.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Fe=n(4888),De=n(178);class Le extends Ce{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,de.DZ)((()=>{this.iteration=(0,xe.d)(0).variable(),this.accBeta1=(0,xe.d)(t).variable()})),null==r&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,de.DZ)((()=>{const n=(0,Ee.j)(1,this.accBeta1),r=(0,pe.y)(-this.learningRate,(0,he.W)((0,fe.l)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=p.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,be.P)(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,be.P)(s).variable(i)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,c=(0,he.W)((0,fe.l)(u,this.beta1),(0,fe.l)(o,1-this.beta1)),d=(0,fe.l)(l,this.beta2),h=(0,Fe.t)(o),f=(0,De.P)(d,h);u.assign(c),l.assign(f);const m=(0,he.W)((0,fe.l)((0,pe.y)(r,n),(0,pe.y)(c,(0,he.W)(f,this.epsilon))),s);s.assign(m)})),this.iteration.assign((0,he.W)(this.iteration,1)),this.accBeta1.assign((0,fe.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,de.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,de.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Me extends Ce{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=p.T2.registeredVariables[t];(0,de.DZ)((()=>{const e=(0,he.W)((0,fe.l)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,de.aC)((0,xe.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Oe extends Me{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,xe.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,de.DZ)((()=>(0,be.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,de.DZ)((()=>{let e;const t=(0,he.W)((0,fe.l)(this.m,a),s);e=this.useNesterov?(0,he.W)((0,fe.l)(this.c,(0,he.W)(s,(0,fe.l)(t,this.m))),r):(0,he.W)((0,fe.l)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,de.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ze extends Ce{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=p.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,de.DZ)((()=>(0,be.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,de.DZ)((()=>(0,be.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,de.DZ)((()=>(0,be.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,de.DZ)((()=>{const e=(0,he.W)((0,fe.l)(i,this.decay),(0,fe.l)((0,ge.E)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,he.W)((0,fe.l)(t,this.decay),(0,fe.l)(s,1-this.decay)),u=(0,pe.y)((0,fe.l)(s,this.learningRate),(0,me.R)((0,Ee.j)(e,(0,he.W)((0,ge.E)(a),this.epsilon)))),l=(0,he.W)((0,fe.l)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=(0,Ee.j)(r,l);r.assign(c)}else{const e=(0,he.W)((0,fe.l)(i,this.decay),(0,fe.l)((0,ge.E)(s),1-this.decay)),t=(0,he.W)((0,fe.l)(o,this.momentum),(0,pe.y)((0,fe.l)(s,this.learningRate),(0,me.R)((0,he.W)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Ee.j)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,de.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,de.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,de.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Pe=[Ne,$e,Re,Le,Oe,ze,Me];function We(e){return new Promise((e=>setTimeout(e))).then(e)}class Be{constructor(e){if(!(0,y._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Be.URL_SCHEME)&&(e=e.slice(Be.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=C.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,w.zV)(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await We((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await We((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,w.oR)(e)}}}}Be.URL_SCHEME="downloads://";class Ue{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=(0,w.Ej)(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,w.P8)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=(0,w.P8)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Ve(e){return new Ue(e)}function Ge(e,t,n,r){!function(e){(0,L.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,L.vA)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,L.vA)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,L.vA)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}v.registerSaveRouter((e=>(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Be.URL_SCHEME)?function(e="model"){return new Be(e)}(e.slice(Be.URL_SCHEME.length)):null));var Ze=n(5685);async function He(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,y._K)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ge(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ge(a,t.onProgress,.5,1)}async function Ke(e,t="",n,r){return je((e=>He(e,{requestInit:r})))(e,t,n)}function je(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Ze.i[u]*L.Ze(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),d={};let h=0;return u.forEach((e=>{const n=t[e].paths.length,r=new C.D(c.slice(h,h+n));s[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,w.CY)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]})),h+=n})),d}}class qe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,L.vA)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,y._K)().platform.fetch,(0,L.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,L.vA)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,w.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=C.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:(0,w.oR)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,w.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,w.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?(0,y._K)().platform.fetch:t.fetchFunc;let a,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){if(!a){const n=(await r(e[s],t.requestInit,{isBinary:!0})).body;a=n.getReader()}const{done:o,value:u}=await a.read();if(!o)return void n.enqueue(u);s++,a=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,w.Xf)(e),await He(t,this.loadOptions)]}}function Qe(e){return null!=e.match(qe.URL_SCHEME_REGEX)}qe.URL_SCHEME_REGEX=/^https?:\/\//;const Ye=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Qe(e))):Qe(e),n)return Xe(e,t)}return null};function Xe(e,t){return new qe(e,t)}function Je(e,t){return Xe(e,t)}v.registerSaveRouter(Ye),v.registerLoadRouter(Ye);class et{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class tt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class nt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function rt(e,t,n,r){return new nt(at(...arguments))}function at(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new et(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new et({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new et({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function st(e){return new tt(e)}function it(e){return new tt(e)}var ot=n(2198),ut=n(5441),lt=n(7074),ct=n(8189),dt=n(929),ht=n(9171);let pt,ft=!1;function mt(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,lt._5)(ut.awo,p.T2.backendName)){const n={pixels:e},r={numChannels:t};return p.T2.runKernel(ut.awo,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||o){if(null==pt)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");pt=new OffscreenCanvas(1,1).getContext("2d")}else pt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});pt.canvas.width=u,pt.canvas.height=l,pt.drawImage(e,0,0,u,l),c=pt.getImageData(0,0,u,l).data}if(4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return function(e,t,n){if((0,L.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,ct.MZ)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,ht.Q)(e,t,r,n)}(d,[l,u,t],"int32")}async function gt(e,t=3){let n=null;if((0,y._K)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return mt(n,t)}function bt(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function yt(e,t){let n=(0,ct.YT)(e,"img","toPixels");if(!(e instanceof ie.qY)){const e=n;n=(0,ue.w)(e,"int32"),e.dispose()}bt(n);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){ft||null!=(0,lt._5)(ut.XmO,p.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ft=!0),t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function xt(e,t,n){let r=(0,ct.YT)(e,"img","draw");if(!(e instanceof ie.qY)){const e=r;r=(0,ue.w)(e,"int32"),e.dispose()}bt(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const a={image:r},s={canvas:t,options:n};p.T2.runKernel(ut.XmO,a,s)}const wt=(0,dt.op)({fromPixels_:mt});function vt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,L.Ze)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,L.Ur)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}function kt(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function St(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}kt(n,t,e)}function It(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:(0,L.Ze)(t.shape)/o,sliceSize:i,strides:[...(0,L.Ur)(n.slice(0,a)),1],outputSize:(0,L.Ze)(n)}}var Tt=n(4969),Ct=n(565),Nt=n(3879);const At="4.22.0";var $t=n(2046),_t=n(2307),Et=n(9326),Rt=n(897),Ft=n(3909),Dt=n(7195),Lt=n(2302);const Mt=(0,dt.op)({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=(0,ct.YT)(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=(0,Lt.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),L.vA(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),L.vA("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),L.vA("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,Dt.s_)("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=p.T2.runKernel(ut.cS,l,c);return d=(0,ue.w)(d,o.dtype),u?(0,Lt.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Ot=n(6779);const zt=(0,dt.op)({batchNorm2d_:function(e,t,n,r,a,s){const i=(0,ct.YT)(e,"x","batchNorm"),o=(0,ct.YT)(t,"mean","batchNorm"),u=(0,ct.YT)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,ct.YT)(a,"scale","batchNorm")),null!=r&&(c=(0,ct.YT)(r,"offset","batchNorm")),L.vA(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),L.vA(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),L.vA(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&L.vA(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&L.vA(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,Ot.$)(i,o,u,c,l,s)}}),Pt=(0,dt.op)({batchNorm3d_:function(e,t,n,r,a,s){const i=(0,ct.YT)(e,"x","batchNorm"),o=(0,ct.YT)(t,"mean","batchNorm"),u=(0,ct.YT)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,ct.YT)(a,"scale","batchNorm")),null!=r&&(c=(0,ct.YT)(r,"offset","batchNorm")),L.vA(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),L.vA(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),L.vA(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&L.vA(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&L.vA(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,Ot.$)(i,o,u,c,l,s)}}),Wt=(0,dt.op)({batchNorm4d_:function(e,t,n,r,a,s){const i=(0,ct.YT)(e,"x","batchNorm"),o=(0,ct.YT)(t,"mean","batchNorm"),u=(0,ct.YT)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,ct.YT)(a,"scale","batchNorm")),null!=r&&(c=(0,ct.YT)(r,"offset","batchNorm")),L.vA(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),L.vA(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),L.vA(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&L.vA(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&L.vA(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,Ot.$)(i,o,u,c,l,s)}});var Bt=n(3567),Ut=n(6928),Vt=n(5030);const Gt=(0,dt.op)({concat1d_:function(e){return(0,Vt.x)(e,0)}}),Zt=(0,dt.op)({concat2d_:function(e,t){return(0,Vt.x)(e,t)}}),Ht=(0,dt.op)({concat3d_:function(e,t){return(0,Vt.x)(e,t)}}),Kt=(0,dt.op)({concat4d_:function(e,t){return(0,Vt.x)(e,t)}});var jt=n(3701),qt=n(8794),Qt=n(1106);const Yt=(0,dt.op)({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=(0,ct.YT)(e,"x","conv3d"),o=(0,ct.YT)(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=(0,Lt.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),L.vA(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),L.vA(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),L.vA(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),L.vA((0,Dt.G0)(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),L.vA("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),L.vA((0,Dt.qk)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),L.vA((0,Dt.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=p.T2.runKernel(ut.A1h,c,d);return l?(0,Lt.t)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Xt=n(1895);const Jt=(0,dt.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,ct.YT)(e,"x","conv3dTranspose"),i=(0,ct.YT)(t,"filter","conv3dTranspose");return(0,Xt.c)(n,s,i,r,a)}}),en=(0,dt.op)({denseBincount_:function(e,t,n,r=!1){const a=(0,ct.YT)(e,"x","denseBincount"),s=(0,ct.YT)(t,"weights","denseBincount");L.vA("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),L.vA(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),L.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),L.vA(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return p.T2.runKernel(ut.wNW,i,o)}});var tn=n(676),nn=n(3416),rn=n(3020),an=n(5207),sn=n(8631),on=n(8710),un=n(4826);const ln=(0,dt.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=oe([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=(0,Lt.t)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,un.V)((0,on.U)(i,0),[n[0],1,1]);if(2===n.length)return(0,un.V)((0,on.U)((0,on.U)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,un.V)((0,on.U)((0,on.U)((0,on.U)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var cn=n(5606),dn=n(8229),hn=n(2058),pn=n(3337),fn=n(6919),mn=n(4010),gn=n(2015),bn=n(7991),yn=n(3330),xn=n(3789),wn=n(5703),vn=n(1938),kn=n(6999);const Sn=(0,dt.op)({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=(0,ct.YT)(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=(0,Lt.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),L.vA(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),L.vA("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),(0,Dt.s_)("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=p.T2.runKernel(ut.ySp,l,c);return u?(0,Lt.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var In=n(2611),Tn=n(7436),Cn=n(2644),Nn=n(1078);const An=(0,dt.op)({moments_:function(e,t=null,n=!1){e=(0,ct.YT)(e,"x","moments");const r=(0,L.Y6)(t,e.shape),a=(0,In.i)(e,r,n);let s=a.shape;n||(s=(0,Nn.SM)(a.shape,r));const i=(0,ge.E)((0,Ee.j)((0,ue.w)(e,"float32"),(0,Lt.t)(a,s)));return{mean:a,variance:(0,In.i)(i,r,n)}}});var $n=n(6522),_n=n(2118),En=n(1760),Rn=n(1411),Fn=n(9885),Dn=n(5661),Ln=n(4394),Mn=n(7391);class On{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Mn.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class zn{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Mn.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Pn=(0,dt.op)({randomNormal_:function(e,t=0,n=1,r,a){if((0,L.SA)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new On(t,n,r,!1,a),i=oe(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Wn=(0,dt.op)({randomUniform_:function(e,t=0,n=1,r="float32",a){(0,L.SA)(e);const s=oe(e,r),i=new zn(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Bn(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return p.T2.runKernel(ut.Q6t,{},a)}var Un=n(112),Vn=n(3262),Gn=n(6325),Zn=n(9986),Hn=n(8968),Kn=n(7986);const jn=(0,dt.op)({slice1d_:function(e,t,n){const r=(0,ct.YT)(e,"x","slice1d");return L.vA(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,Kn.d)(r,[t],[n])}}),qn=(0,dt.op)({slice2d_:function(e,t,n){const r=(0,ct.YT)(e,"x","slice2d");return L.vA(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,Kn.d)(r,t,n)}}),Qn=(0,dt.op)({slice3d_:function(e,t,n){const r=(0,ct.YT)(e,"x","slice3d");return L.vA(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,Kn.d)(r,t,n)}}),Yn=(0,dt.op)({slice4d_:function(e,t,n){const r=(0,ct.YT)(e,"x","slice4d");return L.vA(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,Kn.d)(r,t,n)}});var Xn=n(6346),Jn=n(6030),er=n(6512),tr=n(5932),nr=n(4268),rr=n(3791),ar=n(7311),sr=n(4027);function ir(e,t){(0,L.HO)(e);const n=(0,ct.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,ht.Q)(e,null,n,t)}function or(e,t,n){if((0,L.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,ct.MZ)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,ht.Q)(e,t,r,n)}const ur=(0,dt.op)({truncatedNormal_:function(e,t=0,n=1,r,a){if((0,L.SA)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new On(t,n,r,!0,a),i=oe(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var lr=n(7261);function cr(e,t=!0,n,r){return p.T2.makeVariable(e,t,n,r)}var dr=n(2151),hr=n(2855),pr=n(7703);const fr=(0,dt.op)({dropout_:function(e,t,n,r){const a=(0,ct.YT)(e,"x","dropout");if(L.vA("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),L.vA(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ie.qY?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(L.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=(0,pe.y)((0,cn.R)((0,he.W)(Wn(s,0,1,"float32",r),i)),i);return(0,fe.l)(a,o)}});var mr=n(8775),gr=n(1361),br=n(3108),yr=n(2292),xr=n(5248),wr=n(252),vr=n(3732),kr=n(700);function Sr(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,fe.l)(e,(0,kr.P)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ir(e,t){let n=t;const r=ot.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,rr.c)(n,r)),(0,Lt.t)(n,e.shape)}function Tr(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,Un.V)(e);if("elu"===t)return(0,nn.P)(e);if("relu6"===t)return(0,vr.j)(e);if("prelu"===t)return(0,Ln.N)(e,n);if("leakyrelu"===t)return(0,fn.H)(e,r);if("sigmoid"===t)return(0,Hn.r)(e);throw new Error(`Unknown fused activation ${t}.`)}const Cr=(e,t)=>!(e>0)||"linear"===t,Nr=(0,dt.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Cr(p.T2.state.gradientDepth,u)){L.vA("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=(0,qt.X)(e,t,n,r,a,s,i);return null!=o&&(d=(0,he.W)(d,o)),Tr(d,u,l,c)}const d=(0,ct.YT)(e,"x","conv2d","float32"),h=(0,ct.YT)(t,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=(0,Lt.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),L.vA(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),L.vA(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),Dt.s_("fused conv2d",r,i);const g="NHWC"===a?f.shape[3]:f.shape[1];L.vA(h.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${h.shape[2]}.`)),L.vA(Dt.G0(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const b=Dt.uf(f.shape,h.shape,n,s,r,i);let y,x;if(null!=o&&(y=(0,ct.YT)(o,"bias","fused conv2d"),[y]=(0,Ct.makeTypesMatch)(y,d),"NHWC"===a?ot.assertAndGetBroadcastShape(b.outShape,y.shape):(L.vA(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),L.vA(0===y.shape.length||y.shape[0]===b.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=l){const e=l.shape;if(L.vA(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)L.vA(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{ot.assertAndGetBroadcastShape(e,b.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}x=(0,ct.YT)(l,"prelu weights","fused conv2d")}const w=(e,t)=>{L.vA("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[i,o,l,c]=t,d=Sr(e,l,u);L.vA(Dt.Dh(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[(0,wr.v)(o.shape,d,i,n,r),(0,xr.H)(o,d,i.shape,n,r)];if(null!=c){const e=Ir(c,d);h.push(e)}return h},v={x:f,filter:h,bias:y,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=(0,ye._X)(((e,t,n)=>{let r=p.T2.runKernel(ut.aAr,v,k);return n([t,e,r]),m&&(r=(0,Lt.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(f,h)}{const e=(0,ye._X)(((e,t,n,r)=>{let a=p.T2.runKernel(ut.aAr,v,k);return r([t,e,a,n]),m&&(a=(0,Lt.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}));return e(f,h,y)}}});var Ar=n(1890),$r=n(3134);const _r=(0,dt.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Cr(p.T2.state.gradientDepth,u)){let d=(0,tn.G)(e,t,n,r,a,s,i);return null!=o&&(d=(0,he.W)(d,o)),Tr(d,u,l,c)}const d=(0,ct.YT)(e,"x","depthwiseConv2d","float32"),h=(0,ct.YT)(t,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=(0,Lt.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),L.vA(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),L.vA(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),L.vA(f.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==s&&(s=[1,1]),L.vA(Dt.G0(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Dt.s_("fused depthwiseConv2d",r,i);const g=Dt.uf(f.shape,h.shape,n,s,r,i,!0);let b,y;null!=o&&(b=(0,ct.YT)(o,"bias","fused conv2d"),[b]=(0,Ct.makeTypesMatch)(b,d),ot.assertAndGetBroadcastShape(g.outShape,b.shape)),null!=l&&(y=(0,ct.YT)(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{L.vA(Dt.Dh(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,d=Sr(e,l,u),h=(0,$r.l)(o.shape,d,a,n,r,s,i),p=(0,Ar.x)(o,d,a.shape,n,r,s,i);return null!=c?[h,p,Ir(b,d)]:[h,p]},w={x:f,filter:h,bias:b,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=(0,ye._X)(((e,t,n)=>{let r=p.T2.runKernel(ut.T7M,w,v);return n([t,e,r]),m&&(r=(0,Lt.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,h)}{const e=(0,ye._X)(((e,t,n,r)=>{let a=p.T2.runKernel(ut.T7M,w,v);return r([t,e,a,n]),m&&(a=(0,Lt.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,h,b)}}}),Er=(0,dt.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Cr(p.T2.state.gradientDepth,s)){let u=(0,wn.N)(e,t,n,r);return null!=a&&(u=(0,he.W)(u,a)),Tr(u,s,i,o)}let u=(0,ct.YT)(e,"a","fused matMul"),l=(0,ct.YT)(t,"b","fused matMul");[u,l]=(0,Ct.makeTypesMatch)(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),g=l.shape.slice(0,-2),b=L.Ze(m),y=L.Ze(g);L.vA(c===d,(()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=ot.assertAndGetBroadcastShape(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([h,f]),w=n?(0,Lt.t)(u,[b,c,h]):(0,Lt.t)(u,[b,h,c]),v=r?(0,Lt.t)(l,[y,f,d]):(0,Lt.t)(l,[y,d,f]);let k,S;null!=a&&(k=(0,ct.YT)(a,"bias","fused matMul"),[k]=(0,Ct.makeTypesMatch)(k,u),ot.assertAndGetBroadcastShape(x,k.shape)),null!=i&&(S=(0,ct.YT)(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=Sr((0,Lt.t)(e,u.shape),u,s);let d,h;return n||r?!n&&r?(d=(0,wn.N)(c,o,!1,!1),h=(0,wn.N)(c,i,!0,!1)):n&&!r?(d=(0,wn.N)(o,c,!1,!0),h=(0,wn.N)(i,c,!1,!1)):(d=(0,wn.N)(o,c,!0,!0),h=(0,wn.N)(c,i,!0,!0)):(d=(0,wn.N)(c,o,!1,!0),h=(0,wn.N)(i,c,!0,!1)),null!=a?[d,h,Ir(l,c)]:[d,h]},T={a:w,b:v,bias:k,preluActivationWeights:S},C={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=(0,ye._X)(((e,t,n)=>{const r=p.T2.runKernel(ut.Dr,T,C);return n([e,t,r]),{value:(0,Lt.t)(r,x),gradFunc:I}}));return e(w,v)}{const e=(0,ye._X)(((e,t,n,r)=>{const a=p.T2.runKernel(ut.Dr,T,C);return r([e,t,a,n]),{value:(0,Lt.t)(a,x),gradFunc:I}}));return e(w,v,k)}}}),Rr=(0,dt.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=(0,ct.YT)(e,"image","cropAndResize"),o=(0,ct.YT)(t,"boxes","cropAndResize","float32"),u=(0,ct.YT)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];L.vA(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),L.vA(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),L.vA(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),L.vA(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),L.vA(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),L.vA("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return p.T2.runKernel(ut.MRQ,c,d)}}),Fr=(0,dt.op)({flipLeftRight_:function(e){const t=(0,ct.YT)(e,"image","flipLeftRight","float32");L.vA(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return p.T2.runKernel(ut.BxF,n,{})}}),Dr=(0,dt.op)({grayscaleToRGB_:function(e){const t=(0,ct.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];L.vA(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),L.vA(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,(0,un.V)(t,a)}}),Lr=(0,dt.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,ct.YT)(e,`tensors${t}`,"einsum"))),r={equation:e};return p.T2.runKernel(ut.Qgm,n,r)}}),Mr=(0,dt.op)({rgbToGrayscale_:function(e){const t=(0,ct.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];L.vA(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),L.vA(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,s=(0,ue.w)(t,"float32"),i=ir([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Lr("ij,j->i",s,i);break;case 3:o=Lr("ijk,k->ij",s,i);break;case 4:o=Lr("ijkl,l->ijk",s,i);break;case 5:o=Lr("ijklm,m->ijkl",s,i);break;case 6:o=Lr("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=(0,on.U)(o,-1),(0,ue.w)(o,a)}}),Or=(0,dt.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,ct.YT)(e,"image","rotateWithOffset","float32");L.vA(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return p.T2.runKernel(ut.BK4,s,i)}});function zr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),L.vA(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),L.vA(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),L.vA(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),L.vA(1===t.rank,(()=>"scores must be a 1D tensor")),L.vA(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),L.vA(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Pr=(0,dt.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,ct.YT)(e,"boxes","nonMaxSuppression","float32"),i=(0,ct.YT)(t,"scores","nonMaxSuppression","float32"),o=zr(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return p.T2.runKernel(ut.SDM,{boxes:s,scores:i},u)}});function Wr(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Br)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Br(e,t){return e>t?1:e<t?-1:0}function Ur(e,t,n,r,a){return Zr(e,t,n,r,a,0)}function Vr(e,t,n,r,a,s){return Zr(e,t,n,r,a,0,!1,s,!0)}function Gr(e,t,n,r,a,s){return Zr(e,t,n,r,a,s,!0)}function Zr(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(jr);const c=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=Hr(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*Kr(r,c,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&Wr(l,t,jr))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function Hr(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),b=Math.min(o,d),y=Math.min(u,h),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function Kr(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function jr(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const qr=(0,dt.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,ct.YT)(e,"boxes","nonMaxSuppression"),o=(0,ct.YT)(t,"scores","nonMaxSuppression"),u=zr(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=p.T2.runKernel(ut.e0f,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),Qr=(0,dt.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,ct.YT)(e,"boxes","nonMaxSuppression"),o=(0,ct.YT)(t,"scores","nonMaxSuppression"),u=zr(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=p.T2.runKernel(ut.Zl4,l,c);return{selectedIndices:d[0],validOutputs:d[1]}}});var Yr=n(4711),Xr=n(2954);const Jr=(0,dt.op)({bincount_:function(e,t,n){const r=(0,ct.YT)(e,"x","bincount"),a=(0,ct.YT)(t,"weights","bincount");L.vA("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),L.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),L.vA(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return p.T2.runKernel(ut.N4F,s,i)}});var ea=n(6508),ta=n(5912);const na=(0,dt.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,ct.YT)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=(0,fe.l)(ir([r]),255);if(L.vA(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),L.vA(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),L.vA("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),L.vA("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=(0,er.l)(a,[1,1,1],-1);const e=(0,fe.l)(i,.2989),t=(0,fe.l)(o,.587),n=(0,fe.l)(u,.114);l=(0,he.W)((0,he.W)(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=ir([-1]),l=ir([0]),c=ir([0]);for(let d=0;d<e.size-1;d++){n=(0,Kn.d)(e,0,d+1),r=(0,Kn.d)(e,d+1),i=(0,pe.y)((0,rr.c)(n),t),o=(0,pe.y)((0,rr.c)(r),t);const h=(0,rr.c)((0,fe.l)(n,Bn(0,n.size)));a=(0,pe.y)(h,(0,rr.c)(n));const p=(0,Ae.G)(r.shape,n.size),f=(0,he.W)(Bn(0,r.size),p),m=(0,fe.l)(r,f);s=(0,pe.y)((0,rr.c)(m),(0,rr.c)(r));const g=(0,Ee.j)(a,s),b=(0,Ee.j)(a,s),y=(0,fe.l)(i,o);c=(0,fe.l)((0,fe.l)(y,g),b);const x=(0,hn.r)(c,l);l=(0,dr._)(x,c,l),u=(0,dr._)(x,ir([d]),u)}return u}(Jr((0,ue.w)((0,ta.L)(l),"int32"),(0,sr.O)([]),256),s));const d=n?(0,ea.I)(l,c):(0,hn.r)(l,c);return(0,ue.w)((0,fe.l)(d,255),"int32")}}),ra=(0,dt.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=(0,ct.YT)(e,"image","transform","float32"),o=(0,ct.YT)(t,"transforms","transform","float32");L.vA(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),L.vA(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),L.vA(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return p.T2.runKernel(ut.dLy,u,l)}});var aa=n(1303);const sa=(0,dt.op)({bandPart_:function(e,t,n){const r=(0,ct.YT)(e,"a","bandPart");(0,L.vA)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);let o,u;"number"==typeof t?((0,L.vA)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,L.vA)(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),o=(0,ct.YT)(t<0?s:t,"numLower","bandPart")):((0,L.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=(0,dr._)((0,aa.M)(t,0),s,(0,Cn.B)(t,s))),"number"==typeof n?((0,L.vA)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,L.vA)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),u=(0,ct.YT)(n<0?i:n,"numUpper","bandPart")):((0,L.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=(0,dr._)((0,aa.M)(n,0),i,(0,Cn.B)(n,i)));const l=(0,Lt.t)(Bn(0,s,1,"int32"),[-1,1]),c=Bn(0,i,1,"int32"),d=(0,Ee.j)(l,c),h=(0,xn.n)((0,ea.I)(d,o),(0,pn.D)(d,(0,$n.H)(u))),p=(0,hr.U)([s,i],r.dtype);return(0,Lt.t)((0,nr.t)((0,lr.K)((0,Lt.t)(r,[-1,s,i])).map((e=>(0,dr._)(h,e,p)))),a)}});var ia=n(2596);const oa=(0,dt.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,L.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,L.vA)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,er.l)(e,e.shape[0],0).map((e=>(0,tr.r)(e,[0])));(0,L.vA)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(p.T2.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,fe.l)((0,rr.c)((0,fe.l)(n[r],e)),n[r]);e=(0,Ee.j)(e,t)}return(0,pe.y)(e,(0,ia.x)(e,"euclidean"))})));return t?(0,nr.t)(n,0):n}});function ua(e,t=!1){return p.T2.tidy((()=>{(0,L.vA)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=ln(n),s=(0,le.o)(e);const i=or([[1]],[1,1]);let o=(0,le.o)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=p.T2.tidy((()=>{const t=(0,Kn.d)(s,[e,e],[n-e,1]),u=(0,ia.x)(t),l=(0,Kn.d)(s,[e,e],[1,1]),c=(0,dr._)((0,hn.r)(l,0),or([[-1]]),or([[1]])),d=(0,Ee.j)(l,(0,fe.l)(c,u)),h=(0,pe.y)(t,d);o=1===h.shape[0]?(0,le.o)(i):(0,Vt.x)([i,(0,Kn.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,$n.H)((0,pe.y)((0,wn.N)(c,d),u)),f=(0,Kn.d)(s,[e,0],[n-e,r]),m=(0,fe.l)(p,o),g=(0,pr.m)(o);if(0===e)s=(0,Ee.j)(f,(0,wn.N)(m,(0,wn.N)(g,f)));else{const t=(0,Ee.j)(f,(0,wn.N)(m,(0,wn.N)(g,f)));s=(0,Vt.x)([(0,Kn.d)(s,[0,0],[e,r]),t],0)}const b=(0,pr.m)(m),y=(0,Kn.d)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,Ee.j)(y,(0,wn.N)((0,wn.N)(y,o),b));else{const t=(0,Ee.j)(y,(0,wn.N)((0,wn.N)(y,o),b));a=(0,Vt.x)([(0,Kn.d)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),(0,de.AS)([t,u,l])}return!t&&n>r&&(a=(0,Kn.d)(a,[0,0],[n,r]),s=(0,Kn.d)(s,[0,0],[r,r])),[a,s]}))}const la=(0,dt.op)({qr_:function(e,t=!1){if((0,L.vA)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ua(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,lr.K)((0,Lt.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ua(e,t);a.push(n),s.push(r)})),[(0,Lt.t)((0,nr.t)(a,0),e.shape),(0,Lt.t)((0,nr.t)(s,0),e.shape)]}}});var ca;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ca||(ca={})),n(3427),gr.h,br.K,mr.z,yr.g;const da={flipLeftRight:Fr,grayscaleToRGB:Dr,resizeNearestNeighbor:Xr.b,resizeBilinear:Yr.v,rgbToGrayscale:Mr,rotateWithOffset:Or,cropAndResize:Rr,nonMaxSuppression:Pr,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,ct.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,ct.YT)(t,"scores","nonMaxSuppressionAsync"),o=zr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=Ur(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ir(d,"int32")},nonMaxSuppressionWithScore:qr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,ct.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,ct.YT)(t,"scores","nonMaxSuppressionAsync"),u=zr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=Gr(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ir(h,"int32"),selectedScores:ir(p)}},nonMaxSuppressionPadded:Qr,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,ct.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,ct.YT)(t,"scores","nonMaxSuppressionAsync"),u=zr(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Vr(h,p,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ir(f,"int32"),validOutputs:(0,xe.d)(m,"int32")}},threshold:na,transform:ra},ha={bandPart:sa,gramSchmidt:oa,qr:la},pa=class{static sgd(e){return new Me(e)}static momentum(e,t,n=!1){return new Oe(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new ze(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Re(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ne(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Le(e,t,n,r,a)}static adagrad(e,t=.1){return new $e(e,t)}},fa="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function ma(){return new Promise((e=>fa((()=>e()))))}function ga(e,t){const n=e[0].length;e.forEach(((e,t)=>{L.vA(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),L.vA(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)L.vA(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function ba(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var ya;function xa(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function wa(e){const t={FIRST_DIM_SIZE:ya.FIRST_DIM_SIZE,VALUE_ROWIDS:ya.VALUE_ROWIDS,ROW_LENGTHS:ya.ROW_LENGTHS,ROW_SPLITS:ya.ROW_SPLITS,ROW_LIMITS:ya.ROW_LIMITS,ROW_STARTS:ya.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function va(e){return 0===e.length?0:e[0]===ya.FIRST_DIM_SIZE?e.length-1:e.length}function ka(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(ya||(ya={}));const Sa=30;function Ia(e){return e<=Sa?e:(0,L.lK)(e,Math.floor(Math.sqrt(e)))}function Ta(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ca(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Na(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Aa(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function $a(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function _a(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Ea=n(8576);const Ra=.3275911,Fa=.254829592,Da=-.284496736,La=1.421413741,Ma=-1.453152027,Oa=1.061405429;var za=n(3673);function Pa(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Wa(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ba(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ua(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Va(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ga(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Za(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Ha(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Ka="->",ja=/->/g,qa=",",Qa="...";function Ya(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(ja,"").length)/Ka.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Ka}").`);const[r,a]=e.split(Ka);(0,L.vA)(-1===r.indexOf(Qa),(()=>`The ellipsis notation ("${Qa}") is not supported yet.`));const s=r.split(qa),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==qa&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Xa(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Ja(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,L.vA)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function es(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=ns(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function ts(e){return e.every(((e,t)=>e===t))}function ns(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function rs(e,t,n=0){let r=[];if("number"==typeof t)(0,L.vA)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,L.vA)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,L.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function as(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function ss(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function is(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function os(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function us(e,t){return`size ${e} must be non-negative, not ${t}`}function ls(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cs(e,t){return`Input to reshape is a SparseTensor with ${(0,L.Ze)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,L.Ze)(t)}. inputShape=${e} outputShape= ${t}`}function ds(e,t){return`Input to reshape is a tensor with ${(0,L.Ze)(e)} dense values, but the requested shape has ${(0,L.Ze)(t)}. inputShape=${e} outputShape=${t}`}function hs(){return"segment ids must be >= 0"}function ps(){return"segment ids are not increasing"}function fs(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ms(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function gs(e,t){let n,r=!1;for(e<=Sa?(n=e,r=!0):n=(0,L.lK)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,L.lK)(e,n+1);return n}function bs(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function ys(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function xs(e){try{return e.map((e=>(0,Nt.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ws(e){return e.map((e=>(0,Nt.encodeString)(e)))}function vs(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=oe(e,"int32"),a=oe([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var ks=n(5149);!function(){for(const e of Pe)Ie(e)}()},3416:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({elu_:function(e){const t={x:(0,s.YT)(e,"x","elu","float32")};return r.T2.runKernel(a.Pah,t)}})},3427:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({squaredDifference_:function(e,t){let n=(0,i.YT)(e,"a","squaredDifference"),u=(0,i.YT)(t,"b","squaredDifference");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.Ddj,l,{})}})},3514:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var r=n(3347);class a{constructor(e,t,n,a,s,i){this.separator=r.ZSL.encodeString(e),this.nGramWidths=t,this.leftPad=r.ZSL.encodeString(n),this.rightPad=r.ZSL.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),d=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=l*this.rightPad.length,h+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=r.ZSL.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const o=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u})),this.preserveShort&&a===i[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,i]}}function s(e,t,n,r,s,i,o,u){return new a(n,r,s,i,o,u).compute(e,t)}},3556:()=>{},3567:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(125),u=n(929),l=n(2302);const c=(0,u.op)({broadcastTo_:function(e,t){let n=(0,s.YT)(e,"broadcastTo","x");const u=n.shape;if((0,i.SA)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.t)(n,e)}const c=n.shape,d=Array.from(t);for(let e=t.length-1;e>=0;e--)if(c[e]===t[e])d[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${u}] cannot be broadcast to [${t}].`);if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.o)(n);const h={x:n},p={reps:d};return r.T2.runKernel(a.FAs,h,p)}})},3673:(e,t,n)=>{"use strict";n.d(t,{R:()=>s,i:()=>a});var r=n(6574);function a(...e){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.warn(...e)}function s(...e){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.log(...e)}},3701:(e,t,n)=>{"use strict";n.d(t,{k:()=>l});var r=n(8189),a=n(5119),s=n(8794),i=n(7195),o=n(929),u=n(2302);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,d){const h=(0,r.YT)(e,"x","conv1d"),p=(0,r.YT)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,u.t)(h,[1,h.shape[0],h.shape[1]])),a.vA(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.vA(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),i.s_("conv1d",o,d),a.vA(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),a.vA(i.G0(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.vA(i.qk(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),a.vA(i.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),a.vA("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),b=(0,u.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,c],w=(0,s.X)(b,g,y,o,"NHWC",x,d);return m?(0,u.t)(w,[w.shape[2],w.shape[3]]):(0,u.t)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},3717:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},3732:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({relu6_:function(e){const t={x:(0,s.YT)(e,"x","relu6")};return r.T2.runKernel(a.P_L,t)}})},3789:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(2198);const o=(0,n(929).op)({logicalAnd_:function(e,t){const n=(0,s.YT)(e,"a","logicalAnd","bool"),o=(0,s.YT)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const u={a:n,b:o};return r.T2.runKernel(a.RUm,u)}})},3791:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(9809);const o=(0,n(929).op)({sum_:function(e,t=null,n=!1){let o=(0,s.YT)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.T2.runKernel(a.WuN,u,l)}})},3805:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,a,s,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var o,u,l,c=Object.assign({},i),d=[],h="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";if(f){var g=n(9893),b=n(5281);m=p?b.dirname(m)+"/":"//",o=(e,t)=>(e=W(e)?new URL(e):b.normalize(e),g.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=o(e,!0);return t.buffer||(t=new Uint8Array(t)),t},u=(e,t,n)=>{e=W(e)?new URL(e):b.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof U))throw e})),process.on("unhandledRejection",(function(e){throw e})),i.inspect=function(){return"[Emscripten Module object]"}}else(h||p)&&(p?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),r&&(m=r),m=0!==m.indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),u=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,x,w=i.print||console.log.bind(console),v=i.printErr||console.warn.bind(console);Object.assign(i,c),c=null,i.arguments&&(d=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(y=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&z("no native wasm support detected");var k,S,I,T,C=!1,N="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function A(e,t,n){for(var r=(t>>>=0)+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&N)return N.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function $(e){k=e,i.HEAP8=S=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=new Int32Array(e),i.HEAPU8=I=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=T=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var _,E,R=[],F=[],D=[],L=0,M=null,O=null;function z(e){i.onAbort&&i.onAbort(e),v(e="Aborted("+e+")"),C=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function P(e){return e.startsWith("data:application/octet-stream;base64,")}function W(e){return e.startsWith("file://")}function B(e){try{if(e==_&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){z(e)}}function U(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function V(e){for(;e.length>0;)e.shift()(i)}function G(e){try{return x.grow(e-k.byteLength+65535>>>16),$(x.buffer),1}catch(e){}}P(_="tfjs-backend-wasm.wasm")||(E=_,_=i.locateFile?i.locateFile(E,m):m+E);var Z=[null,[],[]];function H(e,t){var n=Z[e];0===t||10===t?((1===e?w:v)(A(n,0)),n.length=0):n.push(t)}function K(e){return i["_"+e]}function j(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=(n>>>=0)+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=a)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=a)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,I,t,n)}(e,t=te(n),n)}return t},array:e=>{var t=te(e.length);return function(e,t){S.set(e,t>>>0)}(e,t),t}},i=K(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=J()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return function(e){return 0!==u&&ee(u),function(e){return"string"===t?(n=e,(n>>>=0)?A(I,n,r):""):"boolean"===t?Boolean(e):e;var n,r}(e)}(d)}var q,Q,Y,X={abort:function(){z("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){I.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n=I.length,r=4294901760;if((e>>>=0)>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),G(Math.min(r,(t=Math.max(e,s))+(65536-t%65536)%65536)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,r,a){return 70},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=T[t>>>2],o=T[t+4>>>2];t+=8;for(var u=0;u<o;u++)H(e,I[i+u>>>0]);a+=o}return T[r>>>2]=a,0}},J=(function(){var e={env:X,wasi_snapshot_preview1:X};function t(e,t){var n,r=e.exports;i.asm=r,$((x=i.asm.memory).buffer),i.asm.__indirect_function_table,n=i.asm.__wasm_call_ctors,F.unshift(n),function(){if(L--,i.monitorRunDependencies&&i.monitorRunDependencies(L),0==L&&(null!==M&&(clearInterval(M),M=null),O)){var e=O;O=null,e()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!y&&(h||p)){if("function"==typeof fetch&&!W(_))return fetch(_,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+_+"'";return e.arrayBuffer()})).catch((function(){return B(_)}));if(u)return new Promise((function(e,t){u(_,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return B(_)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),z(e)}))}if(L++,i.monitorRunDependencies&&i.monitorRunDependencies(L),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){v("Module.instantiateWasm callback failed with error: "+e),a(e)}(y||"function"!=typeof WebAssembly.instantiateStreaming||P(_)||W(_)||f||"function"!=typeof fetch?r(n):fetch(_,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)},i._init=function(){return(i._init=i.asm.init).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.init_with_threads_count).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.get_threads_count).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.register_tensor).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.dispose_data).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.dispose).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.Abs).apply(null,arguments)},i._Acos=function(){return(i._Acos=i.asm.Acos).apply(null,arguments)},i._Acosh=function(){return(i._Acosh=i.asm.Acosh).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.Add).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.AddN).apply(null,arguments)},i._All=function(){return(i._All=i.asm.All).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.Any).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.ArgMax).apply(null,arguments)},i._ArgMin=function(){return(i._ArgMin=i.asm.ArgMin).apply(null,arguments)},i._Asin=function(){return(i._Asin=i.asm.Asin).apply(null,arguments)},i._Asinh=function(){return(i._Asinh=i.asm.Asinh).apply(null,arguments)},i._Atan=function(){return(i._Atan=i.asm.Atan).apply(null,arguments)},i._Atan2=function(){return(i._Atan2=i.asm.Atan2).apply(null,arguments)},i._Atanh=function(){return(i._Atanh=i.asm.Atanh).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.AvgPool).apply(null,arguments)},i._AvgPool3D=function(){return(i._AvgPool3D=i.asm.AvgPool3D).apply(null,arguments)},i._AvgPool3DGrad=function(){return(i._AvgPool3DGrad=i.asm.AvgPool3DGrad).apply(null,arguments)},i._AvgPoolGrad=function(){return(i._AvgPoolGrad=i.asm.AvgPoolGrad).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.BatchMatMul).apply(null,arguments)},i._Bincount=function(){return(i._Bincount=i.asm.Bincount).apply(null,arguments)},i._BitwiseAnd=function(){return(i._BitwiseAnd=i.asm.BitwiseAnd).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.Ceil).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.ClipByValue).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.Conv2D).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.Conv2DBackpropInput).apply(null,arguments)},i._Conv3D=function(){return(i._Conv3D=i.asm.Conv3D).apply(null,arguments)},i._Conv3DBackpropFilterV2=function(){return(i._Conv3DBackpropFilterV2=i.asm.Conv3DBackpropFilterV2).apply(null,arguments)},i._Conv3DBackpropInputV2=function(){return(i._Conv3DBackpropInputV2=i.asm.Conv3DBackpropInputV2).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.Cos).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.Cosh).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.CropAndResize).apply(null,arguments)},i._Cumprod=function(){return(i._Cumprod=i.asm.Cumprod).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.Cumsum).apply(null,arguments)},i._DenseBincount=function(){return(i._DenseBincount=i.asm.DenseBincount).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.DepthToSpace).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.DepthwiseConv2dNative).apply(null,arguments)},i._Diag=function(){return(i._Diag=i.asm.Diag).apply(null,arguments)},i._Dilation2D=function(){return(i._Dilation2D=i.asm.Dilation2D).apply(null,arguments)},i._Dilation2DBackpropFilter=function(){return(i._Dilation2DBackpropFilter=i.asm.Dilation2DBackpropFilter).apply(null,arguments)},i._Dilation2DBackpropInput=function(){return(i._Dilation2DBackpropInput=i.asm.Dilation2DBackpropInput).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.Elu).apply(null,arguments)},i._EluGrad=function(){return(i._EluGrad=i.asm.EluGrad).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.Equal).apply(null,arguments)},i._Erf=function(){return(i._Erf=i.asm.Erf).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.Exp).apply(null,arguments)},i._Expm1=function(){return(i._Expm1=i.asm.Expm1).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.FlipLeftRight).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.Floor).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.FloorDiv).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.FusedBatchNorm).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.FusedConv2D).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.FusedDepthwiseConv2D).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Gather).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.GatherNd).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.Greater).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.GreaterEqual).apply(null,arguments)},i._IsFinite=function(){return(i._IsFinite=i.asm.IsFinite).apply(null,arguments)},i._IsInf=function(){return(i._IsInf=i.asm.IsInf).apply(null,arguments)},i._IsNan=function(){return(i._IsNan=i.asm.IsNan).apply(null,arguments)},i._LRN=function(){return(i._LRN=i.asm.LRN).apply(null,arguments)},i._LRNGrad=function(){return(i._LRNGrad=i.asm.LRNGrad).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.LeakyRelu).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Less).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.LessEqual).apply(null,arguments)},i._LinSpace=function(){return(i._LinSpace=i.asm.LinSpace).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.Log).apply(null,arguments)},i._Log1p=function(){return(i._Log1p=i.asm.Log1p).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.LogicalAnd).apply(null,arguments)},i._LogicalNot=function(){return(i._LogicalNot=i.asm.LogicalNot).apply(null,arguments)},i._LogicalOr=function(){return(i._LogicalOr=i.asm.LogicalOr).apply(null,arguments)},i._LogicalXor=function(){return(i._LogicalXor=i.asm.LogicalXor).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Max).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.MaxPool).apply(null,arguments)},i._MaxPool3D=function(){return(i._MaxPool3D=i.asm.MaxPool3D).apply(null,arguments)},i._MaxPool3DGrad=function(){return(i._MaxPool3DGrad=i.asm.MaxPool3DGrad).apply(null,arguments)},i._MaxPoolGrad=function(){return(i._MaxPoolGrad=i.asm.MaxPoolGrad).apply(null,arguments)},i._MaxPoolWithArgmax=function(){return(i._MaxPoolWithArgmax=i.asm.MaxPoolWithArgmax).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.Maximum).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.Mean).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.Min).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.Minimum).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.MirrorPad).apply(null,arguments)},i._Mod=function(){return(i._Mod=i.asm.Mod).apply(null,arguments)},i._Multinomial=function(){return(i._Multinomial=i.asm.Multinomial).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.Multiply).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.Neg).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.NonMaxSuppressionV3).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.NonMaxSuppressionV4).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.NonMaxSuppressionV5).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.NotEqual).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.OneHot).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.PadV2).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.Pow).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.Prelu).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.Prod).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.RealDiv).apply(null,arguments)},i._Reciprocal=function(){return(i._Reciprocal=i.asm.Reciprocal).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.Relu).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.Relu6).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.ResizeBilinear).apply(null,arguments)},i._ResizeBilinearGrad=function(){return(i._ResizeBilinearGrad=i.asm.ResizeBilinearGrad).apply(null,arguments)},i._ResizeNearestNeighbor=function(){return(i._ResizeNearestNeighbor=i.asm.ResizeNearestNeighbor).apply(null,arguments)},i._ResizeNearestNeighborGrad=function(){return(i._ResizeNearestNeighborGrad=i.asm.ResizeNearestNeighborGrad).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.Reverse).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.RotateWithOffset).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.Round).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.Rsqrt).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.ScatterNd).apply(null,arguments)},i._SearchSorted=function(){return(i._SearchSorted=i.asm.SearchSorted).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.SelectV2).apply(null,arguments)},i._Selu=function(){return(i._Selu=i.asm.Selu).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Sigmoid).apply(null,arguments)},i._Sign=function(){return(i._Sign=i.asm.Sign).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Sin).apply(null,arguments)},i._Sinh=function(){return(i._Sinh=i.asm.Sinh).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Softmax).apply(null,arguments)},i._Softplus=function(){return(i._Softplus=i.asm.Softplus).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.SparseFillEmptyRows).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.SparseReshape).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.SparseSegmentReduction).apply(null,arguments)},i._SparseToDense=function(){return(i._SparseToDense=i.asm.SparseToDense).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Sqrt).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Square).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.SquaredDifference).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Step).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.StridedSlice).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Sub).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Sum).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Tan).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Tanh).apply(null,arguments)},i._TensorScatterUpdate=function(){return(i._TensorScatterUpdate=i.asm.TensorScatterUpdate).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Tile).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.TopK).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Transform).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Transpose).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm._FusedMatMul).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.malloc).apply(null,arguments)},i._free=function(){return(i._free=i.asm.free).apply(null,arguments)},i.___errno_location=function(){return(i.___errno_location=i.asm.__errno_location).apply(null,arguments)},i.stackSave=function(){return(J=i.stackSave=i.asm.stackSave).apply(null,arguments)}),ee=i.stackRestore=function(){return(ee=i.stackRestore=i.asm.stackRestore).apply(null,arguments)},te=i.stackAlloc=function(){return(te=i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)};function ne(e){function n(){q||(q=!0,i.calledRun=!0,C||(V(F),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),function(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)e=i.postRun.shift(),D.unshift(e);var e;V(D)}()))}e=e||d,L>0||(function(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)e=i.preRun.shift(),R.unshift(e);var e;V(R)}(),L>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)},i.cwrap=function(e,t,n,r){var a=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&a&&!r?K(e):function(){return j(e,t,n,arguments)}},O=function e(){q||ne(),q||(O=e)},i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(ne(),s&&(Q={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Y=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Y=WasmBackendModuleThreadedSimd}if(Q){var re=Y._dispose;Y._dispose=function(){re(),Q.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Q.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},3879:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>w,createShuffledIndices:()=>s.P8,decodeString:()=>T,distSquared:()=>s.oO,encodeString:()=>I,fetch:()=>S,fingerPrint64:()=>x,flatten:()=>N,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>u,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>C,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>k,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>v});var r=n(6574),a=n(6448),s=n(5119),i=n(8570);const o=n.n(i)()||i;function u(e){return o.fromString(e,!0,16)}const l=u("c3a5c85c97cb3127"),c=u("b492b66fbe98f273"),d=u("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t,n=u("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=g(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(g(a,44)),[a.add(r),s.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function x(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=d.add(2*t),r=f(e,0).add(d),a=f(e,t-8);return b(g(a,37).mul(n).add(r),g(r,25).add(a).mul(n),n)}if(t>=4){const n=d.add(2*t);return b(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(r))).mul(d)}return d}(e,t):function(e,t=e.length){const n=d.add(2*t),r=f(e,0).mul(c),a=f(e,8),s=f(e,t-8).mul(n),i=f(e,t-16).mul(d);return b(g(r.add(a),43).add(g(s,30)).add(i),r.add(g(a.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=d.add(2*t),r=f(e,0).mul(d),a=f(e,8),s=f(e,t-8).mul(n),i=f(e,t-16).mul(d),o=g(r.add(a),43).add(g(s,30)).add(i),u=b(o,r.add(g(a.add(d),18)).add(s),n),l=f(e,16).mul(n),c=f(e,24),h=o.add(f(e,t-32)).mul(n),p=u.add(f(e,t-24)).mul(n);return b(g(l.add(c),43).add(g(h,30)).add(p),l.add(g(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(c).add(113),s=h(a.mul(d).add(113)).mul(d),i=[o.UZERO,o.UZERO],u=[o.UZERO,o.UZERO];r=r.mul(d).add(f(e,0));let p=0;const x=64*(t-1>>6),w=x+(t-1&63)-63;do{r=g(r.add(a).add(i[0]).add(f(e,p+8)),37).mul(c),a=g(a.add(i[1]).add(f(e,p+48)),42).mul(c),r=r.xor(u[1]),a=a.add(i[0]).add(f(e,p+40)),s=g(s.add(u[0]),33).mul(c),i=y(e,p,i[1].mul(c),r.add(u[0])),u=y(e,p+32,s.add(u[1]),a.add(f(e,p+16))),[s,r]=[r,s],p+=64}while(p!==x);const v=c.add(s.and(255).shl(1));return p=w,u[0]=u[0].add(t-1&63),i[0]=i[0].add(u[0]),u[0]=u[0].add(i[0]),r=g(r.add(a).add(i[0]).add(f(e,p+8)),37).mul(v),a=g(a.add(i[1]).add(f(e,p+48)),42).mul(v),r=r.xor(u[1].mul(9)),a=a.add(i[0].mul(9).add(f(e,p+40))),s=g(s.add(u[0]),33).mul(v),i=y(e,p,i[1].mul(v),r.add(u[0])),u=y(e,p+32,s.add(u[1]),a.add(f(e,p+16))),[s,r]=[r,s],b(b(i[0],u[0],v).add(h(a).mul(l)).add(s),b(i[1],u[1],v).add(r),v)}function w(e,t){return"string"===t?I(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=N(e)),(0,r._K)().getBool("DEBUG")&&s.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,r._K)().platform.now()}function S(e,t){return(0,r._K)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r._K)().platform.encode(e,t)}function T(e,t="utf-8"){return t=t||"utf-8",(0,r._K)().platform.decode(e,t)}function C(e){return null!=(0,r._K)().platform.isTypedArray?(0,r._K)().platform.isTypedArray(e):(0,a.Y)(e)}function N(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||s.yL(e)||null==e||C(e)&&n)t.push(e);else if(Array.isArray(e)||C(e))for(let r=0;r<e.length;++r)N(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)N(e[a],t,n)}return t}},3909:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(9809),u=n(7195),l=n(929),c=n(2302);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,s.YT)(e,"x","avgPool","float32");i.vA(u.G0(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.vA(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),u.s_("avgPool",l,d);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let b=r.T2.runKernel(a.ho8,m,g);return b=(0,o.w)(b,h.dtype),f?(0,c.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},4010:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({log_:function(e){const t={x:(0,s.YT)(e,"x","log","float32")};return r.T2.runKernel(a.tG8,t)}})},4027:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var r=n(8189),a=n(9171);function s(e,t,n){const s=(0,r.MZ)(e,n);return(0,a.Q)(e,t,s,n)}},4268:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(5119);const o=(0,n(929).op)({stack_:function(e,t=0){const n=(0,s.j1)(e,"tensors","stack","string_or_numeric");i.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.T2.runKernel(a.mM$,o,u)}})},4373:(e,t,n)=>{"use strict";n.d(t,{Gc4:()=>a.Gc4,jh6:()=>a.jh6,KtR:()=>a.KtR});var r={};n.r(r),n.d(r,{mx:()=>Uc,XI:()=>Rd,Nk:()=>Fd,f6:()=>Ld,ct:()=>Oc,YG:()=>Pd,hH:()=>Zd.h,z3:()=>$h,sG:()=>Wh,uM:()=>Zh,vS:()=>up,qB:()=>gp,GG:()=>yp,lg:()=>Sp,rq:()=>wp,cu:()=>Mp,WR:()=>Fp,GE:()=>Pp,px:()=>Bp,jC:()=>nf,He:()=>sf,hE:()=>gf,BF:()=>vh,Dk:()=>Cf,cl:()=>Df,_B:()=>Kf,ub:()=>Qf,_f:()=>Jf,Ku:()=>sm,qy:()=>om.q,Zy:()=>xm,bu:()=>km,zv:()=>Ac,dH:()=>Yc,HS:()=>_d.HS,yH:()=>Um,l3:()=>Gm,z9:()=>Hm,x6:()=>Ym,_m:()=>ag,eW:()=>lg,GK:()=>dg.G,SP:()=>pg.S,yr:()=>mg.f,dl:()=>Yh,Dw:()=>kg,xT:()=>Cg,_X:()=>ad,wz:()=>Fg.w});var a=n(3347),s=n(5441),i=n(9809),o=n(9258),u=n(700);const l={kernelName:s.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,u.P)((0,i.w)(n,"float32"),-1))}}};var c=n(9359),d=n(6522),h=n(5702),p=n(9348),f=n(5793),m=n(7126);const g={kernelName:s.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f.E)((0,i.w)(n,"float32")),r=(0,p.R)((0,m.j)((0,h.d)(1),t));return(0,d.H)((0,c.y)(e,r))}}}},b={kernelName:s.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,m.j)((0,f.E)((0,i.w)(n,"float32")),1));return(0,c.y)(e,t)}}}};var y=n(2198),x=n(2302),w=n(3791);const v={kernelName:s.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=y.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,w.c)(t,r)),(0,x.t)(t,n.shape)},b:()=>{let t=e;const n=y.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,w.c)(t,n)),(0,x.t)(t,r.shape)}}}},k={kernelName:s.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var S=n(5537);const I={kernelName:s.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},T={kernelName:s.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},C={kernelName:s.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,p.R)((0,m.j)((0,h.d)(1),(0,f.E)((0,i.w)(n,"float32")))))}}};var N=n(7523);const A={kernelName:s.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,N.W)((0,h.d)(1),(0,f.E)((0,i.w)(n,"float32"))));return(0,c.y)(e,t)}}}},$={kernelName:s.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,N.W)((0,f.E)(n),(0,f.E)(r));let s=(0,o.l)(e,(0,c.y)(r,t));const i=(0,y.getReductionAxes)(n.shape,a);return i.length>0&&(s=(0,w.c)(s,i)),(0,x.t)(s,n.shape)},b:()=>{const t=(0,N.W)((0,f.E)(n),(0,f.E)(r));let s=(0,d.H)((0,o.l)(e,(0,c.y)(n,t)));const i=(0,y.getReductionAxes)(r.shape,a);return i.length>0&&(s=(0,w.c)(s,i)),(0,x.t)(s,r.shape)}}}},_={kernelName:s.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,N.W)((0,f.E)((0,i.w)(n,"float32")),1))}}},E={kernelName:s.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,m.j)((0,h.d)(1),(0,f.E)((0,i.w)(n,"float32"))))}}};var R=n(1585),F=n(8189),D=n(5119),L=n(7195),M=n(929);const O=(0,M.op)({avgPool3dGrad_:function(e,t,n,r,a,i){const o=(0,F.YT)(e,"dy","avgPool3dGrad"),u=(0,F.YT)(t,"input","avgPool3dGrad");let l=o,c=u,d=!1;4===u.rank&&(d=!0,l=(0,x.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,x.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),D.vA(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),D.vA(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),(0,L.s_)("avgPool3dGrad",a,i);const h={dy:l,input:c},p={filterSize:n,strides:r,pad:a,dimRoundingMode:i},f=R.T2.runKernel(s.wwC,h,p);return d?(0,x.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),z={kernelName:s.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>O(e,r,a,s,i,o)}}},P=(0,M.op)({avgPoolGrad_:function(e,t,n,r,a){const i=(0,F.YT)(e,"dy","avgPoolGrad"),o=(0,F.YT)(t,"input","avgPoolGrad");D.vA(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let u=o,l=i,c=!1;3===o.rank&&(c=!0,u=(0,x.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=(0,x.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D.vA(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),D.vA(4===u.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${u.rank}.`));const d={dy:l,input:u},h={filterSize:n,strides:r,pad:a},p=R.T2.runKernel(s.VCH,d,h);return c?(0,x.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),W={kernelName:s.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>P(e,r,a,s,i)}}};var B=n(5703);const U={kernelName:s.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>(0,B.N)(e,a,!1,!1),b:()=>(0,B.N)(e,r,!0,!1)}:s&&!i?{a:()=>(0,B.N)(a,e,!1,!0),b:()=>(0,B.N)(r,e,!1,!1)}:{a:()=>(0,B.N)(a,e,!0,!0),b:()=>(0,B.N)(e,r,!0,!0)}:{a:()=>(0,B.N)(e,a,!1,!0),b:()=>(0,B.N)(r,e,!0,!1)}}},V=(0,M.op)({spaceToBatchND_:function(e,t,n){const r=(0,F.YT)(e,"x","spaceToBatchND");D.vA(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),D.vA(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),D.vA(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return R.T2.runKernel(s.A8B,a,i)}}),G={kernelName:s.Ik2,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>V(e,r,a)}}},Z={kernelName:s.LB5,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,w.c)(e,o,!0)}}},H={kernelName:s.KXH,gradFunc:e=>({x:()=>e.clone()})},K={kernelName:s.QDP,gradFunc:e=>({x:()=>(0,S.P)(e)})};var j=n(3337),q=n(6508),Q=n(3789),Y=n(2151);const X={kernelName:s.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>(0,Y._)((0,Q.n)((0,j.D)(r,a),(0,q.I)(r,s)),e,(0,S.P)(e))}}},J={kernelName:s.$zE,inputsToSave:["x"],gradFunc:l.gradFunc};var ee=n(6512);const te={kernelName:s.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=(0,D.Y6)(a,t[0].shape)[0],i=r.map((e=>e[s]));return(0,ee.l)(e,i,s).map((e=>()=>e))}};var ne=n(5248),re=n(252);const ae={kernelName:s.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return D.vA(L.Dh(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>(0,re.v)(r.shape,e,a,i,o,u),filter:()=>(0,ne.H)(r,e,a.shape,i,o,u)}}};var se=n(8794);const ie={kernelName:s.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,se.X)(e,a,s,i,o,1,u),filter:()=>(0,ne.H)(e,r,a.shape,s,i,o,u)}}},oe=(0,M.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let i=e;4===e.rank&&(i=(0,x.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,x.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D.vA(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),D.vA(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),D.vA(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),D.vA(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),D.vA(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const u={x:i,dy:o},l={strides:r,pad:a,filterShape:n};return R.T2.runKernel(s.iGz,u,l)}});var ue=n(1895);const le={kernelName:s.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;D.vA((0,L.Dh)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,ue.c)(i.shape,e,o,a,s),filter:()=>oe(i,e,o.shape,a,s)}}},ce=(0,M.op)({sin_:function(e){const t={x:(0,F.YT)(e,"x","sin","float32")};return R.T2.runKernel(s.hql,t)}}),de={kernelName:s.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,d.H)(ce((0,i.w)(n,"float32"))),e)}}},he=(0,M.op)({sinh_:function(e){const t={x:(0,F.YT)(e,"x","sinh")};return R.T2.runKernel(s.J3C,t)}}),pe={kernelName:s.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(he((0,i.w)(n,"float32")),e)}}};var fe=n(1078);const me=(0,M.op)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:(0,F.YT)(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return R.T2.runKernel(s.nY8,a,i)}});var ge=n(7703);const be={kernelName:s.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=(0,fe.Em)([a],r.rank);let n=me(e,a,s,!i);return null!=t&&(n=(0,ge.m)(n,t)),n}}}};var ye=n(1890),xe=n(3134);const we={kernelName:s.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;D.vA(L.Dh(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return D.vA(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),D.vA(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),D.vA(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),D.vA(L.G0(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),L.s_("depthwiseConv2d",s,i),{x:()=>(0,xe.l)(u.shape,e,l,a,s,o,i),filter:()=>(0,ye.x)(u,e,l.shape,a,s,o,i)}}},ve={kernelName:s.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>R.T2.runKernel(s.bP9,i,n),filter:()=>R.T2.runKernel(s.pk0,o,n)}}},ke={kernelName:s.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>R.T2.runKernel(s.rsH,r)}}};var Se=n(8631);const Ie={kernelName:s._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.l)((0,Se.o)((0,d.H)((0,f.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,o.l)(e,r)}}},Te={kernelName:s.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,n)}}},Ce={kernelName:s.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,x.t)(e,n.shape)}}},Ne={kernelName:s.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,Se.o)(n))}}},Ae={kernelName:s.ZgB,gradFunc:e=>({x:()=>(0,S.P)(e)})},$e={kernelName:s.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,c.y)(e,(0,i.w)(r,"float32")),s=(0,y.getReductionAxes)(n.shape,a);return s.length>0?(0,x.t)((0,w.c)(t,s),n.shape):t},b:()=>{let t=(0,o.l)(e,(0,i.w)(n,"float32"));const s=(0,y.getReductionAxes)(r.shape,a);s.length>0&&(t=(0,x.t)((0,w.c)(t,s),r.shape));const u=(0,f.E)(r);return(0,d.H)((0,c.y)(t,(0,i.w)(u,"float32")))}}}},_e=(0,M.op)({rsqrt_:function(e){const t={x:(0,F.YT)(e,"x","rsqrt","float32")};return R.T2.runKernel(s.TOR,t)}});var Ee=n(4826);const Re={kernelName:s.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,u]=t,l=null==u?(0,h.d)(1):u,c=(0,y.getReductionAxes)(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}const p=(0,m.j)(a,s),f=(0,o.l)(e,l),g=_e((0,N.W)(i,(0,h.d)(r))),b=(0,o.l)((0,o.l)((0,o.l)(g,g),g),(0,h.d)(-.5));return{x:()=>1===s.rank?(0,x.t)((0,o.l)((0,o.l)(e,(0,Ee.V)((0,x.t)(g,[1,1,1,s.shape[0]]),d)),l),a.shape):(0,x.t)((0,o.l)((0,o.l)(e,g),l),a.shape),mean:()=>{let e=(0,o.l)((0,o.l)(g,(0,h.d)(-1)),f);return 1===s.rank&&(e=(0,w.c)(e,c)),(0,x.t)(e,s.shape)},variance:()=>{let e=(0,o.l)((0,o.l)(b,p),f);return 1===s.rank&&(e=(0,w.c)(e,c)),(0,x.t)(e,s.shape)},scale:()=>{const t=(0,o.l)(p,g);let n=(0,o.l)(e,t);return 1===s.rank&&(n=(0,w.c)(n,c)),(0,x.t)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,w.c)(t,c)),(0,x.t)(t,s.shape)}}}};var Fe=n(4268);const De=(0,M.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,F.YT)(e,"x","unsortedSegmentSum"),a=(0,F.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,D.vA)((0,D.E6)(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},o={numSegments:n};return R.T2.runKernel(s.pPe,i,o)}}),Le={kernelName:s.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s,batchDims:i}=n,o=(0,D.Y6)(s,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,a=t.size,i=r.slice(0,o),u=i.length,l=r.slice(s,r.length).slice(1),c=l.length,d=Me(0,u),h=Me(u+1,u+1+c),p=Oe([i,[a],l]),f=(0,x.t)(n,p),m=(0,x.t)(t,[a]),g=Oe([[u],d,h]),b=(0,ge.m)(f,g);let y=De(b,m,e.shape[o]);const w=(0,fe.gx)(g);return y=(0,ge.m)(y,w),y};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=(0,Fe.t)(n.map(((t,n)=>u(t,a.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>a}}return{x:u(r,a,e),indices:()=>a}}};function Me(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Oe(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ze={kernelName:s.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,S.P)(n),b:()=>(0,S.P)(r)}}},Pe={kernelName:s.lzr,gradFunc:e=>({x:()=>(0,i.w)(e,"float32")})},We={kernelName:s.gIW,gradFunc:e=>({x:()=>(0,S.P)(e)})},Be={kernelName:s.E3$,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ue={kernelName:s.iPs,gradFunc:e=>({x:()=>(0,S.P)(e)})};var Ve=n(2058);const Ge={kernelName:s.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=(0,Ve.r)(r,0);return{x:()=>(0,Y._)(s,e,(0,o.l)(e,a))}}},Ze={kernelName:s.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,N.W)(n,1))}}},He={kernelName:s.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,i.w)(n,"float32"))}}},Ke={kernelName:s.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=(0,Se.o)(r);return(0,m.j)(e,(0,o.l)((0,w.c)(e,a,!0),t))}}}},je=(0,M.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,i=1,o=.5){const u={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:i,beta:o};return R.T2.runKernel(s.ToN,u,l)}}),qe={kernelName:s.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>je(r,a,e,s,i,o,u)}}};var Qe=n(3020);function Ye(e,t,n,r){return t.rank<n.rank&&(t=(0,x.t)(t,fe.SM(t.shape,r))),e.rank<n.rank&&(e=(0,x.t)(e,fe.SM(e.shape,r))),{x:()=>(0,o.l)(e,(0,i.w)((0,Qe.L)(n,t),e.dtype))}}const Xe={kernelName:s.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Ye(e,t[1],s,D.Y6(a,s.shape));return{x:()=>i.x()}}};var Je=n(1303);const et={kernelName:s.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.l)(e,(0,i.w)((0,j.D)(n,r),"float32")),b:()=>(0,o.l)(e,(0,i.w)((0,Je.M)(n,r),"float32"))}}},tt=(0,M.op)({maxPool3dGrad_:function(e,t,n,r,a,i,o){const u=(0,F.YT)(e,"dy","maxPool3dGrad"),l=(0,F.YT)(t,"input","maxPool3dGrad"),c=(0,F.YT)(n,"output","maxPool3dGrad");let d=u,h=l,p=c,f=!1;4===l.rank&&(f=!0,d=(0,x.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=(0,x.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,x.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),D.vA(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),D.vA(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),D.vA(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,L.s_)("maxPool3dGrad",i,o);const m={dy:d,input:h,output:p},g={filterSize:r,strides:a,pad:i,dimRoundingMode:o},b=R.T2.runKernel(s.cHb,m,g);return f?(0,x.t)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),nt={kernelName:s.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>tt(e,r,a,s,i,o,u)}}},rt=(0,M.op)({maxPoolGrad_:function(e,t,n,r,a,i,o){const u=(0,F.YT)(e,"dy","maxPoolGrad"),l=(0,F.YT)(t,"input","maxPoolGrad"),c=(0,F.YT)(n,"output","maxPoolGrad");D.vA(l.rank===u.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`)),D.vA(4===u.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),D.vA(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),L.s_("maxPoolGrad",i,o);const d={dy:u,input:l,output:c},h={filterSize:r,strides:a,pad:i,dimRoundingMode:o};return R.T2.runKernel(s.RXX,d,h)}}),at={kernelName:s.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>rt(e,r,a,s,i,o)}}};var st=n(1411);const it={kernelName:s.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=D.Y6(a,r.shape),i=(0,fe.lb)(r.shape,s)[1],u=D.Ze(i);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,x.t)(e,t);return(0,c.y)((0,o.l)(n,(0,st.S)(r.shape,"float32")),u)}}}},ot={kernelName:s.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Ye(e,i,s,D.Y6(a,s.shape));return{x:()=>o.x()}}},ut={kernelName:s.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.l)(e,(0,i.w)((0,q.I)(n,r),"float32")),b:()=>(0,o.l)(e,(0,i.w)((0,Ve.r)(n,r),"float32"))}}};var lt=n(7986);const ct={kernelName:s.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,lt.d)(e,s,r.shape)}}};var dt=n(5606);const ht={kernelName:s.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,y.getReductionAxes)(n.shape,a);return t.length>0?(0,x.t)((0,w.c)(e,t),n.shape):e},b:()=>{const t=(0,o.l)(e,(0,d.H)((0,dt.R)((0,c.y)(n,r)))),s=(0,y.getReductionAxes)(r.shape,a);return s.length>0?(0,x.t)((0,w.c)(t,s),r.shape):t}}}},pt={kernelName:s.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,o.l)(e,(0,i.w)(r,"float32")),s=(0,y.getReductionAxes)(n.shape,a);return s.length>0?(0,x.t)((0,w.c)(t,s),n.shape):t},b:()=>{const t=(0,o.l)(e,(0,i.w)(n,"float32")),s=(0,y.getReductionAxes)(r.shape,a);return s.length>0?(0,x.t)((0,w.c)(t,s),r.shape):t}}}},ft={kernelName:s.l0G,gradFunc:e=>({x:()=>(0,d.H)(e)})};var mt=n(2855);const gt={kernelName:s.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,mt.U)(n.shape,"float32")}}},bt={kernelName:s.LWX,gradFunc:e=>({x:()=>(0,S.P)(e)})};var yt=n(7261);const xt={kernelName:s.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,yt.K)(e,r).map((e=>()=>e))}},wt={kernelName:s.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,lt.d)(e,s,r.shape)}}};var vt=n(4010),kt=n(8990);const St={kernelName:s.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,u=r,l=y.assertAndGetBroadcastShape(s.shape,u.shape);return{a:()=>{const t=(0,i.w)(u,"float32");let n=(0,o.l)(e,(0,o.l)(t,(0,kt.n)(s,(0,m.j)(t,(0,h.d)(1)))));const r=y.getReductionAxes(s.shape,l);return r.length>0&&(n=(0,w.c)(n,r)),(0,x.t)(n,s.shape)},b:()=>{const t=(0,Ve.r)(s,0),n=(0,Y._)(t,(0,vt.R)(s),(0,S.P)(s));let r=(0,o.l)(e,(0,o.l)(a,n));const i=y.getReductionAxes(u.shape,l);return i.length>0&&(r=(0,w.c)(r,i)),(0,x.t)(r,u.shape)}}}},It={kernelName:s.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,Ve.r)(n,0);return{x:()=>(0,Y._)(a,e,(0,o.l)(e,r)),alpha:()=>{let t=(0,Y._)(a,(0,S.P)(e),(0,o.l)(e,n));const s=(0,y.getReductionAxes)(r.shape,e.shape);return s.length>0&&(t=(0,w.c)(t,s)),(0,x.t)(t,r.shape)}}}},Tt=(0,M.op)({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:(0,F.YT)(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return R.T2.runKernel(s.jj_,a,i)}});const Ct={kernelName:s.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>function(e,t,n){const r=e.shape.length,a=r-n.length,s=fe.Em(n,r);let i=e;null!=s&&(i=(0,ge.m)(e,s));const u=i.shape.slice(),l=u.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);u.push(l);let c=function(e,t,n){const r=e.shape.slice();r[n]=1;const a=(0,x.t)(t,r),s=Tt(e,n,!0,!1),i=Tt(e,n,!0,!0),u=(0,o.l)(s,i);return(0,o.l)(a,u)}(i.reshape(u),t,a);if(c=c.reshape(i.shape),null!=s){const e=fe.gx(s);c=(0,ge.m)(c,e)}return c}(r,e,s)}}},Nt={kernelName:s.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,c.y)(e,(0,i.w)(r,"float32")),s=y.getReductionAxes(n.shape,a);return s.length>0?(0,x.t)((0,w.c)(t,s),n.shape):t},b:()=>{let t=(0,o.l)(e,(0,i.w)(n,"float32"));const s=y.getReductionAxes(r.shape,a);s.length>0&&(t=(0,x.t)((0,w.c)(t,s),r.shape));const u=(0,f.E)(r);return(0,d.H)((0,c.y)(t,(0,i.w)(u,"float32")))}}}},At={kernelName:s.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,d.H)((0,f.E)(n)))}}},$t={kernelName:s.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.l)((0,q.I)(n,6),(0,u.P)(n));return{x:()=>(0,o.l)(e,(0,i.w)(r,"float32"))}}},_t={kernelName:s.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,i.w)((0,u.P)(n),"float32"))}}},Et={kernelName:s.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,x.t)(e,n.shape)}}},Rt={kernelName:s.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.T2.runKernel(s.FCQ,a,n)}}},Ft={kernelName:s.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.T2.runKernel(s.XQy,a,n)}}};var Dt=n(3262);const Lt={kernelName:s.D7i,gradFunc:(e,t,n)=>{const{dims:r}=n,a=(0,D.Y6)(r,e.shape);return{x:()=>(0,Dt.B)(e,a)}}},Mt={kernelName:s.hVg,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ot={kernelName:s.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.H)((0,c.y)(e,(0,o.l)((0,kt.n)(n,1.5),2)))}}},zt=(0,M.op)({logicalNot_:function(e){const t={x:(0,F.YT)(e,"x","logicalNot","bool")};return R.T2.runKernel(s.nZd,t)}}),Pt={kernelName:s.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,i.w)((0,S.P)(n),"float32"),t:()=>(0,o.l)(e,(0,i.w)(n,e.dtype)),e:()=>(0,o.l)(e,(0,i.w)(zt(n),e.dtype))}}};var Wt=n(8576);const Bt={kernelName:s.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ve.r)(n,(0,h.d)(0)),r=(0,h.d)(Wt.j),a=(0,h.d)(Wt.X),s=(0,o.l)(e,a),u=(0,o.l)((0,o.l)(e,r),(0,Se.o)((0,i.w)(n,"float32")));return(0,Y._)(t,s,u)}}}},Ut={kernelName:s.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,o.l)(n,(0,m.j)((0,h.d)(1),n)))}}},Vt={kernelName:s.YVe,gradFunc:e=>({x:()=>(0,S.P)(e)})},Gt=(0,M.op)({cos_:function(e){const t={x:(0,F.YT)(e,"x","cos","float32")};return R.T2.runKernel(s.Mn0,t)}}),Zt={kernelName:s.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(Gt((0,i.w)(n,"float32")),e)}}},Ht=(0,M.op)({cosh_:function(e){const t={x:(0,F.YT)(e,"x","cosh","float32")};return R.T2.runKernel(s.MnK,t)}}),Kt={kernelName:s.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(Ht((0,i.w)(n,"float32")),e)}}};var jt=n(5661),qt=n(4969);const Qt={kernelName:s.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=(0,qt.parseSliceParams)(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>(0,jt.e)(e,l)}}},Yt={kernelName:s.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=(0,o.l)(e,r);return{logits:()=>(0,m.j)(s,(0,o.l)((0,w.c)(s,[a],!0),r))}}};var Xt=n(8968);const Jt={kernelName:s.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,Xt.r)(n))}}},en=(0,M.op)({batchToSpaceND_:function(e,t,n){const r=(0,F.YT)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));D.vA(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),D.vA(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),D.vA(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},o={blockShape:t,crops:n};return R.T2.runKernel(s.Ik2,i,o)}}),tn={kernelName:s.A8B,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>en(e,r,a)}}};var nn=n(5030);const rn={kernelName:s.Blb,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,nn.x)(e,r)}}},an={kernelName:s.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,o.l)((0,p.R)((0,i.w)(n,"float32")),2))}}},sn={kernelName:s.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,o.l)((0,i.w)(n,"float32"),2))}}},on={kernelName:s.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,h.d)(2);return{a:()=>(0,o.l)(e,(0,o.l)(a,(0,m.j)(n,r))),b:()=>(0,o.l)(e,(0,o.l)(a,(0,m.j)(r,n)))}}},un={kernelName:s.pnw,gradFunc:e=>({x:()=>(0,S.P)(e)})},ln={kernelName:s.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=y.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,w.c)(t,r)),(0,x.t)(t,n.shape)},b:()=>{let t=e;const n=y.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,w.c)(t,n)),(0,x.t)((0,d.H)(t),r.shape)}}}},cn={kernelName:s.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;(0,D.Y6)(s,r.shape).forEach((e=>{a[e]=1}));const i=(0,x.t)(e,a),u=(0,o.l)(i,(0,st.S)(r.shape,"float32"));return{x:()=>u}}},dn={kernelName:s.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,f.E)(Gt(n)))}}},hn={kernelName:s.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,m.j)((0,h.d)(1),(0,f.E)(n)),e)}}},pn={kernelName:s.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=(0,S.P)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=(0,N.W)(t,(0,lt.d)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=(0,N.W)(t,(0,lt.d)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,N.W)(t,(0,lt.d)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,N.W)(t,(0,lt.d)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},fn={kernelName:s.wx0,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=fe.gx(a);return{x:()=>(0,ge.m)(e,s)}}},mn={kernelName:s.dXR,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>(0,Fe.t)(e,a)}}};var gn=n(8710),bn=n(8229),yn=n(178);const xn={kernelName:s.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,yn.P)(t,(0,S.P)(t)),r=(0,bn.k)(e,n);let a=(0,j.D)(t,(0,h.d)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=(0,gn.U)(a,e+1);a=(0,Q.n)(a,(0,st.S)(r.shape,"bool"));const i=(0,S.P)(r);return(0,Y._)(a,r,i)}(e,n)}}},wn={kernelName:s.xJ3,gradFunc:e=>({x:()=>(0,S.P)(e)})};var vn=n(7074);const kn=[l,g,b,v,k,I,T,C,A,$,_,E,z,W,U,G,Z,H,K,X,J,te,ie,ae,le,de,pe,be,we,ve,Nt,ke,Ie,Te,Ce,Ne,$e,Ae,Re,Le,ze,Pe,We,Be,Ue,Ge,Ze,He,Ke,qe,Xe,Xe,et,nt,at,it,ot,ut,ct,ht,pt,ft,gt,bt,xt,wt,wt,St,It,Ct,At,$t,_t,Et,Rt,Ft,Lt,Mt,Ot,Pt,Bt,Ut,Vt,Zt,Kt,Qt,Yt,Jt,tn,tn,rn,rn,an,on,sn,un,ln,cn,dn,hn,pn,fn,mn,xn,wn];for(const e of kn)(0,vn.kr)(e);var Sn=n(4888),In=n(259);(0,In.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,Sn.t)(this)};const Tn=(0,M.op)({acos_:function(e){const t={x:(0,F.YT)(e,"x","acos")};return R.T2.runKernel(s.Vvy,t)}});(0,In.tp)().prototype.acos=function(){return this.throwIfDisposed(),Tn(this)};const Cn=(0,M.op)({acosh_:function(e){const t={x:(0,F.YT)(e,"x","acosh")};return R.T2.runKernel(s.PH8,t)}});(0,In.tp)().prototype.acosh=function(){return this.throwIfDisposed(),Cn(this)},(0,In.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,N.W)(this,e)};var Nn=n(2307);(0,In.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Nn.Q)(this,e,t)};var An=n(9326);(0,In.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,An.b)(this,e,t)};var $n=n(897);(0,In.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,$n.F)(this,e)};const _n=(0,M.op)({argMin_:function(e,t=0){const n={x:(0,F.YT)(e,"x","argMin")},r={axis:t};return R.T2.runKernel(s.p_m,n,r)}});(0,In.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),_n(this,e)},(0,In.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,D.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.t)(this,[])},(0,In.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,i.w)(this,e)},(0,In.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.t)(this,[this.size])},(0,In.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,x.t)(this,[e,t])},(0,In.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,x.t)(this,[e,t,n])},(0,In.tp)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,x.t)(this,[e,t,n,r])},(0,In.tp)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),(0,x.t)(this,[e,t,n,r,a])};const En=(0,M.op)({asin_:function(e){const t={x:(0,F.YT)(e,"x","asin")};return R.T2.runKernel(s.QKF,t)}});(0,In.tp)().prototype.asin=function(){return this.throwIfDisposed(),En(this)};const Rn=(0,M.op)({asinh_:function(e){const t={x:(0,F.YT)(e,"x","asinh")};return R.T2.runKernel(s.epO,t)}});(0,In.tp)().prototype.asinh=function(){return this.throwIfDisposed(),Rn(this)};const Fn=(0,M.op)({atan_:function(e){const t={x:(0,F.YT)(e,"x","atan")};return R.T2.runKernel(s.TyE,t)}});(0,In.tp)().prototype.atan=function(){return this.throwIfDisposed(),Fn(this)};var Dn=n(565);const Ln=(0,M.op)({atan2_:function(e,t){let n=(0,F.YT)(e,"a","atan2"),r=(0,F.YT)(t,"b","atan2");[n,r]=(0,Dn.makeTypesMatch)(n,r);const a={a:n,b:r};return R.T2.runKernel(s.lxb,a)}});(0,In.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),Ln(this,e)};const Mn=(0,M.op)({atanh_:function(e){const t={x:(0,F.YT)(e,"x","atanh")};return R.T2.runKernel(s.zP9,t)}});(0,In.tp)().prototype.atanh=function(){return this.throwIfDisposed(),Mn(this)};var On=n(3909);(0,In.tp)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,On.$)(this,e,t,n,r)},(0,In.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),en(this,e,t)};var zn=n(6779);(0,In.tp)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),(0,zn.$)(this,e,t,n,r,a)};var Pn=n(3567);(0,In.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Pn.h)(this,e)},(0,In.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,i.w)(this,e)};const Wn=(0,M.op)({ceil_:function(e){const t={x:(0,F.YT)(e,"x","ceil","float32")};return R.T2.runKernel(s.QDP,t)}});(0,In.tp)().prototype.ceil=function(){return this.throwIfDisposed(),Wn(this)};var Bn=n(6928);(0,In.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Bn.z)(this,e,t)},(0,In.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof In.qY&&(e=[e]),(0,nn.x)([this,...e],t)};var Un=n(3701);(0,In.tp)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Un.k)(this,e,t,n,r,a,s)};var Vn=n(1106);(0,In.tp)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Vn.w)(this,e,t,n,r,a)},(0,In.tp)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,se.X)(this,e,t,n,r,a,s)},(0,In.tp)().prototype.cos=function(){return this.throwIfDisposed(),Gt(this)},(0,In.tp)().prototype.cosh=function(){return this.throwIfDisposed(),Ht(this)},(0,In.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Tt(this,e,t,n)},(0,In.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),me(this,e,t,n)};const Gn=(0,M.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,F.YT)(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];D.vA(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),D.vA(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),D.vA(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),D.vA(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const u={x:r},l={blockSize:t,dataFormat:n};return R.T2.runKernel(s.TMz,u,l)}});(0,In.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Gn(this,e,t)};var Zn=n(676);(0,In.tp)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Zn.G)(this,e,t,n,r,a,s)};const Hn=(0,M.op)({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const o=(0,F.YT)(e,"x","dilation2d"),u=(0,F.YT)(t,"filter","dilation2d");D.vA(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),D.vA(3===u.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${u.rank}.`)),D.vA("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=o,c=!1;3===o.rank&&(l=(0,x.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),D.vA(l.shape[3]===u.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${u.shape[2]}`));const d={x:l,filter:u},h={strides:n,pad:r,dilations:a},p=R.T2.runKernel(s.jxD,d,h);return c?(0,x.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});(0,In.tp)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Hn(this,e,t,n,r,a)};const Kn=(0,M.op)({divNoNan_:function(e,t){let n=(0,F.YT)(e,"a","div"),r=(0,F.YT)(t,"b","div");[n,r]=(0,Dn.makeTypesMatch)(n,r);const a=(0,c.y)(n,r),s=(0,S.P)(a),i=(0,Qe.L)(r,s);return(0,Y._)(i,s,a)}});(0,In.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Kn(this,e)},(0,In.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,c.y)(this,e)};const jn=(0,M.op)({dot_:function(e,t){const n=(0,F.YT)(e,"t1","dot"),r=(0,F.YT)(t,"t2","dot");D.vA(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(D.vA(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=(0,x.t)(n,[1,-1]),t=(0,x.t)(r,[-1,1]),a=(0,B.N)(e,t);return(0,x.t)(a,[])}if(1===n.rank&&2===r.rank){const e=(0,x.t)(n,[1,-1]),t=(0,x.t)(r,[r.shape[0],r.shape[1]]),a=(0,B.N)(e,t);return(0,x.t)(a,[a.size])}if(2===n.rank&&1===r.rank){const e=(0,x.t)(r,[-1,1]),t=(0,B.N)(n,e);return(0,x.t)(t,[t.size])}{const e=(0,x.t)(r,[r.shape[0],r.shape[1]]);return(0,B.N)(n,e)}}});(0,In.tp)().prototype.dot=function(e){return this.throwIfDisposed(),jn(this,e)};var qn=n(3416);(0,In.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,qn.P)(this)},(0,In.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Qe.L)(this,e)};var Qn=n(5207);(0,In.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Qn.Y)(this)};var Yn=n(2596);const Xn=(0,M.op)({euclideanNorm_:function(e,t=null,n=!1){return(0,Yn.x)(e,"euclidean",t,n)}});(0,In.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Xn(this,e,t)},(0,In.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,Se.o)(this)},(0,In.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,gn.U)(this,e)};const Jn=(0,M.op)({expm1_:function(e){const t={x:(0,F.YT)(e,"x","expm1")};return R.T2.runKernel(s.ybj,t)}});(0,In.tp)().prototype.expm1=function(){return this.throwIfDisposed(),Jn(this)};var er=n(1361);(0,In.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,er.h)(this)},(0,In.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.t)(this,[this.size])},(0,In.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,dt.R)(this)};var tr=n(8991);(0,In.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,tr.w)(this,e)},(0,In.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,bn.k)(this,e,t,n)},(0,In.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,j.D)(this,e)},(0,In.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ve.r)(this,e)};var nr=n(3108);(0,In.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,nr.K)(this)};var rr=n(2292);(0,In.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,rr.g)(this)};const ar=(0,M.op)({isFinite_:function(e){const t={x:(0,F.YT)(e,"x","isFinite")};return R.T2.runKernel(s.gIW,t)}});(0,In.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),ar(this)};const sr=(0,M.op)({isInf_:function(e){const t={x:(0,F.YT)(e,"x","isInf")};return R.T2.runKernel(s.E3$,t)}});(0,In.tp)().prototype.isInf=function(){return this.throwIfDisposed(),sr(this)};const ir=(0,M.op)({isNaN_:function(e){const t={x:(0,F.YT)(e,"x","isNaN")};return R.T2.runKernel(s.iPs,t)}});(0,In.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),ir(this)};var or=n(6919);(0,In.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,or.H)(this,e)},(0,In.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,q.I)(this,e)},(0,In.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,Je.M)(this,e)};const ur=(0,M.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=(0,F.YT)(e,"x","localResponseNormalization");D.vA(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),D.vA(D.E6(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=i,u=!1;3===i.rank&&(u=!0,o=(0,x.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},c={depthRadius:t,bias:n,alpha:r,beta:a},d=R.T2.runKernel(s.jM4,l,c);return u?(0,x.t)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});(0,In.tp)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ur(this,e,t,n,r)};var lr=n(1830),cr=n(6030);const dr=(0,M.op)({logSigmoid_:function(e){const t=(0,F.YT)(e,"x","logSigmoid");return(0,lr._X)((e=>({value:(0,d.H)((0,cr.l)((0,d.H)(e))),gradFunc:t=>(0,o.l)(t,(0,Xt.r)((0,d.H)(e)))})))(t)}});(0,In.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),dr(this)};var hr=n(7991);(0,In.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,hr.H)(this,e)};var pr=n(3330);(0,In.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,pr.V)(this,e,t)},(0,In.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,vt.R)(this)};var fr=n(2015);(0,In.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,fr.K)(this)},(0,In.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Q.n)(this,e)},(0,In.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),zt(this)};const mr=(0,M.op)({logicalOr_:function(e,t){const n=(0,F.YT)(e,"a","logicalOr","bool"),r=(0,F.YT)(t,"b","logicalOr","bool");(0,y.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return R.T2.runKernel(s.LXA,a)}});(0,In.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),mr(this,e)};const gr=(0,M.op)({logicalXor_:function(e,t){const n=(0,F.YT)(e,"a","logicalXor","bool"),r=(0,F.YT)(t,"b","logicalXor","bool");return(0,y.assertAndGetBroadcastShape)(n.shape,r.shape),(0,Q.n)(mr(e,t),zt((0,Q.n)(e,t)))}});(0,In.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),gr(this,e)},(0,In.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,B.N)(this,e,t,n)};var br=n(6999);(0,In.tp)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,br.j)(this,e,t,n,r)};var yr=n(1938);(0,In.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,yr.T)(this,e,t)},(0,In.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,yn.P)(this,e)};var xr=n(2611);(0,In.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,xr.i)(this,e,t)};var wr=n(7436);(0,In.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,wr.j)(this,e,t)};var vr=n(2644);(0,In.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,vr.B)(this,e)};const kr=(0,M.op)({mirrorPad_:function(e,t,n){D.vA("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,F.YT)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D.vA(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)D.vA(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),D.vA(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},o={x:r};return R.T2.runKernel(s.x7F,o,i)}});(0,In.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),kr(this,e,t)};const Sr=(0,M.op)({mod_:function(e,t){let n=(0,F.YT)(e,"a","mod"),r=(0,F.YT)(t,"b","mod");[n,r]=(0,Dn.makeTypesMatch)(n,r);const a={a:n,b:r};return R.T2.runKernel(s.BLA,a)}});(0,In.tp)().prototype.mod=function(e){return this.throwIfDisposed(),Sr(this,e)},(0,In.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,o.l)(this,e)},(0,In.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,d.H)(this)},(0,In.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Yn.x)(this,e,t,n)};var Ir=n(2118);(0,In.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Ir.E)(this,e)};var Tr=n(1760);(0,In.tp)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Tr.M)(this,e,t,n)};var Cr=n(9885);(0,In.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Cr.P)(this)},(0,In.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,jt.e)(this,e,t)};const Nr=(0,M.op)({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=(0,F.YT)(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=(0,x.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D.vA(L.G0(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=L.E6(u.shape,t,s,a,r),d=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],d,h),g=p?r:"valid",b=p?u:V(u,d,f),y=("avg"===n?()=>(0,On.$)(b,t,s,g,i):()=>(0,br.j)(b,t,s,g,i))(),w=p?y:en(y,d,m);return l?(0,x.t)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});(0,In.tp)().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Nr(this,e,t,n,r,a,s)},(0,In.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,kt.n)(this,e)};var Ar=n(4394);(0,In.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Ar.N)(this,e)};const $r=(0,M.op)({prod_:function(e,t=null,n=!1){let r=(0,F.YT)(e,"x","prod");"bool"===r.dtype&&(r=(0,i.w)(r,"int32"));const a={x:r},o={axis:t,keepDims:n};return R.T2.runKernel(s.kdj,a,o)}});(0,In.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),$r(this,e,t)};const _r=(0,M.op)({reciprocal_:function(e){const t={x:(0,F.YT)(e,"x","reciprocal")};return R.T2.runKernel(s.huO,t)}});(0,In.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),_r(this)};var Er=n(112);(0,In.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Er.V)(this)};var Rr=n(3732);(0,In.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Rr.j)(this)},(0,In.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,x.t)(this,e.shape)},(0,In.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,x.t)(this,e)};var Fr=n(4711);(0,In.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Fr.v)(this,e,t,n)};var Dr=n(2954);(0,In.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Dr.b)(this,e,t,n)},(0,In.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Dt.B)(this,e)};var Lr=n(8775);(0,In.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Lr.z)(this)};var Mr=n(5912);(0,In.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,Mr.L)(this)},(0,In.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),_e(this)};var Or=n(6325);(0,In.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Or.W)(this)};var zr=n(9986);(0,In.tp)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,zr.w)(this,e,t,n,r,a,s)},(0,In.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Xt.r)(this)};const Pr=(0,M.op)({sign_:function(e){const t={x:(0,F.YT)(e,"x","sign")};return R.T2.runKernel(s.YVe,t)}});(0,In.tp)().prototype.sign=function(){return this.throwIfDisposed(),Pr(this)},(0,In.tp)().prototype.sin=function(){return this.throwIfDisposed(),ce(this)},(0,In.tp)().prototype.sinh=function(){return this.throwIfDisposed(),he(this)},(0,In.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,lt.d)(this,e,t)};var Wr=n(6346);(0,In.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Wr.V)(this,e)},(0,In.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,cr.l)(this)},(0,In.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),V(this,e,t)},(0,In.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,ee.l)(this,e,t)},(0,In.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,p.R)(this)},(0,In.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,f.E)(this)};var Br=n(3427);(0,In.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Br.P)(this,e)};var Ur=n(5932);(0,In.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ur.r)(this,e)},(0,In.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof In.qY?[this,e]:[this,...e];return(0,Fe.t)(n,t)},(0,In.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,u.P)(this,e)};const Vr=(0,M.op)({stridedSlice_:function(e,t,n,r,a=0,i=0,o=0,u=0,l=0){const c={x:(0,F.YT)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:o,newAxisMask:u,shrinkAxisMask:l};return R.T2.runKernel(s.UcO,c,d)}});(0,In.tp)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Vr(this,e,t,n,r,a,s,i,o)},(0,In.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,m.j)(this,e)},(0,In.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,w.c)(this,e,t)};const Gr=(0,M.op)({tan_:function(e){const t={x:(0,F.YT)(e,"x","tan","float32")};return R.T2.runKernel(s.oFs,t)}});(0,In.tp)().prototype.tan=function(){return this.throwIfDisposed(),Gr(this)};var Zr=n(7311);(0,In.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Zr.y)(this)},(0,In.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Ee.V)(this,e)},(0,In.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,i.w)(this,"bool")},(0,In.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,i.w)(this,"float32")},(0,In.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,i.w)(this,"int32")};const Hr=(0,M.op)({topk_:function(e,t=1,n=!0){const r=(0,F.YT)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},o={k:t,sorted:n},[u,l]=R.T2.runKernel(s.TBb,i,o);return{values:u,indices:l}}});(0,In.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),Hr(this,e,t)},(0,In.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ge.m)(this,e)};const Kr=(0,M.op)({unique_:function(e,t=0){const n=(0,F.YT)(e,"x","unique","string_or_numeric");(0,D.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,o]=R.T2.runKernel(s.EwU,r,a);return{values:i,indices:o}}});(0,In.tp)().prototype.unique=function(e){return this.throwIfDisposed(),Kr(this,e)},(0,In.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),De(this,e,t)},(0,In.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,yt.K)(this,e)},(0,In.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Y._)(e,this,t)},(0,In.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,S.P)(this)};class jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jr.prototype)}}class qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qr.prototype)}}class Qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qr.prototype)}}class Yr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yr.prototype)}}class Xr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xr.prototype)}}Error;class Jr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function ea(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ta(e,t){if(!e)throw new Xr(t)}function na(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ra(e){return 1===e.length?e[0]:e}function aa(e){return Array.isArray(e)?e:[e]}function sa(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ia(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let oa={};function ua(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function la(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>la(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?la(t):e[n]=t.value)}}}function ca(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in oa)s=oa[a];else if(s=t[a],null==s)throw new Qr(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Qr(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in oa?[o,u]=oa.className:i in t&&([o,u]=t[i]),null==o)throw new Qr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(oa))e[t]=oa[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},oa);for(const e of Object.keys(n))oa[e]=n[e];la(s.config);const r=u(o,s.config,n,a);return oa=Object.assign({},t),r}{const e=Object.assign({},oa);for(const e of Object.keys(n))oa[e]=n[e];const t=new o(s.config);return oa=Object.assign({},e),t}}}function da(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ha(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function pa(e){if(null==e)throw new Qr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function fa(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Qr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ma(e,t,n=0,r=1/0){return ta(n>=0),ta(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ga(e,t){Array.isArray(e)?(a.ZSL.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ga(e,`element ${n+1} of ${t}`)))):a.ZSL.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ba(e)}.`))}function ba(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ba(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function ya(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let xa=0;function wa(){return xa++}const va={};function ka(e=""){return e in va||(va[e]=0),va[e]+=1,e+va[e].toString()}const Sa=["channelsFirst","channelsLast"],Ia=["nearest","bilinear"],Ta=["valid","same","causal"],Ca=["max","avg"],Na=["sum","mul","concat","ave"],Aa=new Map;function $a(e){fa(Sa,"DataFormat",e)}function _a(e){fa(Ta,"PaddingMode",e)}function Ea(e){fa(Ca,"PoolMode",e)}const Ra=[];function Fa(e,t){Ra.push(e);try{const e=t();return Ra.pop(),e}catch(e){throw Ra.pop(),e}}function Da(e){if(!Oa(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ra.length?"":Ra.join("/")+"/")+e}function La(e){if(!Oa(e))throw new Error("Not a valid tensor name: '"+e+"'");Aa.has(e)||Aa.set(e,0);const t=Aa.get(e);if(Aa.set(e,Aa.get(e)+1),t>0){const n=`${e}_${t}`;return Aa.set(n,1),n}return e}const Ma=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Oa(e){return!!e.match(Ma)}function za(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Pa(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Wa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Ba(e,t){if(t<e)throw new Qr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Ua;function Va(){return null==Ua&&(Ua=(0,a.Hs)().epsilon()),Ua}function Ga(e,t){return a.wgE(e,t)}function Za(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),a.tQQ(e,n)}function Ha(e,t,n){return(0,a.DZQ)((()=>{switch(e.rank){case 1:return a.Q$M(e,t,n);case 2:return a.zAd(e,[t,0],[n,e.shape[1]]);case 3:return a.wck(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return a.R0O(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return a.dik(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return a.dik(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Qr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ka(e,t,n){return(0,a.DZQ)((()=>{switch(e.rank){case 1:return a.Q$M(e,t,n);case 2:return a.zAd(e,[0,t],[e.shape[0],n]);case 3:return a.wck(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return a.R0O(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Qr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ja(e,t,n,r){return(0,a.DZQ)((()=>{switch(e.rank){case 1:return a.Q$M(e,t,n);case 2:switch(r){case 1:return Ha(e,t,n);case 2:return Ka(e,t,n);default:throw new Qr(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ha(e,t,n);case 2:return a.wck(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ka(e,t,n);default:throw new Qr(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ha(e,t,n);case 2:return a.R0O(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return a.R0O(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ka(e,t,n);default:throw new Qr(`The axis is not within the rank of the tensor ${r}`)}default:throw new Qr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qa(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),a.xWs(e,t)}function Qa(e,t){switch(e.rank){case 1:return a.I1m([e,t]);case 2:return a.RPU([e,t],0);case 3:return a.O5O([e,t],0);case 4:return a.P1l([e,t],0);default:throw new Qr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ya(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Qr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return a.Vsq(e,t)}function Xa(e,t=0,n=1,r,s){return a.FE$(e,t,n,r,s)}function Ja(e,t,n,r){if(e.rank<2||t.rank<2)throw new Yr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Yr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const s=!1,i=!1;return a.cZk.matMul({a:e,b:t,transposeA:s,transposeB:i,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),i=s.pop();e=a.tQQ(e,[-1,i]);const o=t.shape.slice(),u=o.pop(),l=o.pop(),c=[...o,u],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=a.tQQ(a.mgz(t,d),[l,-1]);const h=[...s,...c],p=!1,f=!1;return a.tQQ(a.cZk.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n}),h)}}function es(e,t,n){return(0,a.DZQ)((()=>(t=Array.isArray(t)?(0,a.tGX)(t,"int32"):a.wgE(t,"int32"),a.kgh(e,t,n))))}function ts(e){return a.lKK(e,e)}function ns(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Qr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?a.tQQ(t,[1,r[0],1,1,1]):a.tQQ(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?a.tQQ(t,[1,1,1,1,r[0]]):a.tQQ(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?a.tQQ(t,[1,r[0],1,1]):a.tQQ(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?a.tQQ(t,[1,1,1,r[0]]):a.tQQ(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?a.tQQ(t,[1,r[0],1]):a.tQQ(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?a.tQQ(t,[1,1,r[0]]):a.tQQ(t,[1].concat(r))}else if(e<3)return t;throw new Qr(`Unsupported input rank by biasAdd: ${t.rank}`)}function rs(e,t,n){return(0,a.DZQ)((()=>(null==n&&(n="channelsLast"),$a(n),a.WQq(e,ns(e.rank,t,n)))))}function as(e,t,n,r){return(0,a.DZQ)((()=>a.EZY(e,t,n,r)))}function ss(e,t,n=!1){return n?e():t()}const is=["fanIn","fanOut","fanAvg"],os=["normal","uniform","truncatedNormal"];class us extends a.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ls extends us{apply(e,t){return(0,a.Ul9)(e,t)}}ls.className="Zeros",a.JFn.registerClass(ls);class cs extends us{apply(e,t){return(0,a.SaS)(e,t)}}cs.className="Ones",a.JFn.registerClass(cs);class ds extends us{constructor(e){if(super(),"object"!=typeof e)throw new Qr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Qr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,a.DZQ)((()=>(0,a.lKK)((0,a.d_2)(this.value),(0,a.SaS)(e,t))))}getConfig(){return{value:this.value}}}ds.className="Constant",a.JFn.registerClass(ds);class hs extends us{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,a.YeY)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}hs.className="RandomUniform",a.JFn.registerClass(hs);class ps extends us{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Yr(`randomNormal does not support dType ${t}.`);return Xa(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ps.className="RandomNormal",a.JFn.registerClass(ps);class fs extends us{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Yr(`truncatedNormal does not support dType ${t}.`);return(0,a.efE)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fs.className="TruncatedNormal",a.JFn.registerClass(fs);class ms extends us{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,a.DZQ)((()=>{if(2!==e.length||e[0]!==e[1])throw new Qr("Identity matrix initializer can only be used for 2D square matrices.");return(0,a.lKK)(this.gain,(0,a.y5U)(e[0]))}))}getConfig(){return{gain:this.gain}}}ms.className="Identity",a.JFn.registerClass(ms);class gs extends us{constructor(e){if(super(),e.scale<0)throw new Qr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,fa(is,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){fa(os,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if($a(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=za(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=za(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=za(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Yr(`${this.getClassName()} does not support dType ${t}.`);return(0,a.efE)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return(0,a.YeY)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling",a.JFn.registerClass(gs);class bs extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}bs.className="GlorotUniform",a.JFn.registerClass(bs);class ys extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ys.className="GlorotNormal",a.JFn.registerClass(ys);class xs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}xs.className="HeNormal",a.JFn.registerClass(xs);class ws extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ws.className="HeUniform",a.JFn.registerClass(ws);class vs extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}vs.className="LeCunNormal",a.JFn.registerClass(vs);class ks extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ks.className="LeCunUniform",a.JFn.registerClass(ks);class Ss extends us{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,a.DZQ)((()=>{if(e.length<2)throw new Yr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=a.ZSL.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const i=Xa([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),o=a.mPL.qr(i,!1);let u=o[0];const l=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return u=(0,a.lKK)(u,l.sign()),n<r&&(u=u.transpose()),(0,a.lKK)((0,a.d_2)(this.gain),u.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ss.className="Orthogonal",a.JFn.registerClass(Ss);const Is={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ts(e,t={}){return ca(e,a.JFn.SerializationMap.getMap().classNameMap,t,"initializer")}function Cs(e){return ua(e)}function Ns(e){if("string"==typeof e){const t=e in Is?Is[e]:e;if("GlorotNormal"===t)return new ys;if("GlorotUniform"===t)return new bs;if("HeNormal"===t)return new xs;if("HeUniform"===t)return new ws;if("LeCunNormal"===t)return new vs;if("LeCunUniform"===t)return new ks;{const e={};return e.className=t,e.config={},Ts(e)}}return e instanceof us?e:Ts(e)}function As(e){return Array.isArray(e)&&Array.isArray(e[0])}function $s(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function _s(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Qr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Es(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Qr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Rs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Fs="Variable";class Ds{constructor(e,t="float32",n=Fs,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=wa(),n=null==n?Fs:n,this.originalName=Da(n),this.name=La(this.originalName),this.trainable_=r,this.constraint=s,this.val=a.bvq(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ls(e){return e.map((e=>e.read()))}function Ms(e){e.forEach((e=>{e[0].write(e[1])}))}class Os{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class zs{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=wa(),null!=s&&(this.originalName=Da(s),this.name=La(this.originalName)),this.rank=t.length}}let Ps=0;class Ws{constructor(e,t){this.callArgs=t,this.id=Ps++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Bs=0;class Us extends a.JFn.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Bs++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=sa(e)+"_"+ka(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new qr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Qr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ra(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ra(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new jr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new jr(`Layer ${this.name} is not connected, no input to return.`);return ra(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new jr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new jr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ra(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=aa(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=aa(this.inputSpec);if(t.length!==n.length)throw new Qr(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],a=n[e];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Qr(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Qr(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Qr(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Qr(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const n in a.axes){const r=Number(n),s=a.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Qr(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],s=r.shape[t];if(null!=n&&null!=s&&n!==s)throw new Qr(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=aa(e),r=function(e){let t=!0;for(const n of aa(e))if(!(n instanceof zs)){t=!1;break}return t}(e),a=function(e){let t=!0;for(const n of aa(e))if(n instanceof zs){t=!1;break}return t}(e);if(r===a)throw new Qr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fa(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of aa(e))t.push(n.shape);this.build(ra(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const a=aa(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=ra(s),null!=this.activityRegularizer)throw new Yr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=aa(e);const t=[];for(const n of e)t.push(n.shape);return ra(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new zs(s,n,this,aa(e),t,this.name,r))):new zs(s,r,this,aa(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Yr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new jr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new jr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rs(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ls(e?this.trainableWeights:this.weights)}setWeights(e){(0,a.DZQ)((()=>{const t=this.weights;if(t.length!==e.length)throw new Qr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ls(t);for(let s=0;s<r.length;++s){const i=r[s],o=t[s],u=e[s];if(!a.ZSL.arraysEqual(i.shape,u.shape))throw new Qr(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([o,u])}Ms(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Qr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ns("zeros"));const u=r.apply(t,n),l=new Ds(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=aa(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),a=aa(t),s=aa(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=s[e]}addInboundNode(e,t,n,r,a,s,i=null){const o=aa(e);t=aa(t),n=aa(n),r=aa(r),a=$s(a),s=$s(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Ws({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Vs(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Vs(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Gs extends Us{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ka("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Qr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Qr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Qr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new zs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Qr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Gs.className="InputLayer",a.JFn.registerClass(Gs);class Zs{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Zs)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Qr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,a.wgE)(t,e.dtype)}catch(n){throw new Qr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof zs){if(null==this.id2Value[e.id])throw new Qr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof zs){if(null==this.id2Value[e.id])throw new Qr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,a.ASo)(this.id2Mask)}}const Hs=new Jr,Ks=new Jr;function js(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],u=o.map((e=>e.name)),l=[],c=t.names();for(const e of u)-1!==c.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=u.join(",")+"|"+t.names().sort().join(",");let h,p=Hs.get(d);if(null==p){const e=function(e,t){a.ZSL.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Qs(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Qs(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:qs(r)}}(o,t);p=e.sorted,h=e.recipientCounts,Hs.put(d,p),Ks.put(d,h)}h={},s||Object.assign(h,Ks.get(d));const f=new Zs(t);for(let e=0;e<p.length;++e){if(null!=r){const e=(0,a.m1Z)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=p[e],o=i.sourceLayer;if(o instanceof Gs)continue;const c=[],d=[],m=[];let g=!1;for(const e of i.inputs){const n=f.getValue(e),r=f.getMask(e);c.push(n),d.push(r),null!=r&&(g=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==u.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=d[0]);const b=aa(o.apply(c,n));let y=null;o.supportsMasking&&(y=o.computeMask(c,d));const x=Ys(i),w=Array.isArray(x)?x:[x];for(let e=0;e<w.length;++e){f.hasKey(w[e])||f.add(w[e],b[e],Array.isArray(y)?y[0]:y);const t=u.indexOf(w[e].name);-1!==t&&(l[t]=b[e])}s||(0,a.ASo)(m)}return f.disposeMasks(),i?l:l[0]}function qs(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Qs(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Ys(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Xs(e,t){return(0,a.DZQ)((()=>a.RZD(a.czq(a.lKK(e,e),t,!0))))}(0,a._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Hs&&Hs.setMaxEntries(e),null!=Ks&&Ks.setMaxEntries(e)}));class Js extends a.JFn.Serializable{getConfig(){return{}}}class ei extends Js{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.DZQ)((()=>{const t=Xs(e,this.axis),n=a.zQh(t,0,this.maxValue);return a.lKK(e,a.y4m(n,a.WQq(Va(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ei.className="MaxNorm",a.JFn.registerClass(ei);class ti extends Js{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.DZQ)((()=>a.y4m(e,a.WQq(Va(),Xs(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ti.className="UnitNorm",a.JFn.registerClass(ti);class ni extends Js{apply(e){return a.VVh(e)}}ni.className="NonNeg",a.JFn.registerClass(ni);class ri extends Js{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.DZQ)((()=>{const t=Xs(e,this.axis),n=a.WQq(a.lKK(this.rate,a.zQh(t,this.minValue,this.maxValue)),a.lKK(1-this.rate,t));return a.lKK(e,a.y4m(n,a.WQq(Va(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ri.className="MinMaxNorm",a.JFn.registerClass(ri);const ai={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function si(e){return ua(e)}function ii(e,t={}){return ca(e,a.JFn.SerializationMap.getMap().classNameMap,t,"constraint")}function oi(e){return null==e?null:"string"==typeof e?ii({className:e in ai?ai[e]:e,config:{}}):e instanceof Js?e:ii(e)}async function ui(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];(0,a.ASo)(r)}}function li(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ci;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ci||(ci={}));class di{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class hi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class pi extends di{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=(0,a.DZQ)((()=>(0,a.WQq)(this.totals[e],(0,a.lKK)(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,a.DZQ)((()=>{const n=(0,a.lKK)((0,a.y4m)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,a.aCs)(t[e])})))}}class fi extends di{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class mi extends di{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||a.dA1,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():a.ZSL.now();return(...i)=>{const o=null!=n?n():a.ZSL.now();return o-s<t||(s=o,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await ui(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ui(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ui(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ui(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ui(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):a.ZSL.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ui(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ui(e),await this.trainEnd(e))}}function gi(e,t){return null==e&&(e={}),e instanceof di?[e]:Array.isArray(e)&&e[0]instanceof di?e:aa(e).map((e=>new mi(e,t)))}class bi{constructor(){}static registerCallbackConstructor(e,t){a.ZSL.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),bi.checkForDuplicate(t),null==bi.constructors[e]&&(bi.constructors[e]=[]),bi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bi.constructors)bi.constructors[+t].forEach((t=>{if(t===e)throw new Qr("Duplicate callback constructor.")}))}static clear(){bi.constructors={}}static createCallbacks(e){const t=[];for(const n in bi.constructors){const r=+n;e>=r&&t.push(...bi.constructors[r])}return t.map((e=>new e))}}function yi(e,t,n,r,a,s,i,o,u){const l=new fi,c=[new pi,...bi.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new hi(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function xi(e,t={},n=!1){return ca(e,a.JFn.SerializationMap.getMap().classNameMap,t,"layer",n)}function wi(e,t){return(0,a.DZQ)((()=>{"float32"!==e.dtype&&(e=a.wgE(e,"float32"));const n=a.czq(ts(e),t,!0),r=a.GSj(n.shape,Va()),s=a.RZD(a.PhQ(n,r));return a.y4m(e,s)}))}function vi(e,t){return(0,a.DZQ)((()=>a.i2o(ts(a.jbE(t,e)),-1)))}function ki(e,t){return(0,a.DZQ)((()=>a.i2o(a.tnl(a.jbE(t,e)),-1)))}function Si(e,t){return(0,a.DZQ)((()=>{const n=a.jbE(e,t),r=a.zQh(a.tnl(e),Va(),Number.MAX_VALUE),s=a.tnl(a.y4m(n,r));return a.lKK(100,a.i2o(s,-1))}))}function Ii(e,t,n=!1){return(0,a.DZQ)((()=>{if(n)t=a.Vs9(t);else{const e=a.czq(t,t.shape.length-1,!0);t=a.y4m(t,e)}return t=a.zQh(t,Va(),1-Va()),a.HZy(a.czq(a.lKK(a.wgE(e,"float32"),a.Rm2(t)),t.shape.length-1))}))}function Ti(e,t,n=!1){return(0,a.DZQ)((()=>{const r=a.wgE(a.RIf(function(e){const t=[za(e.shape)];return a.tQQ(e,t)}(e)),"int32"),s=(t=a.zQh(t,Va(),1-Va())).shape;return Ii(a.tQQ(a.Mw0(r,s[s.length-1]),s),t,n)}))}function Ci(e,t){return(0,a.DZQ)((()=>{let n;return n=a.zQh(t,Va(),1-Va()),n=a.Rm2(a.y4m(n,a.jbE(1,n))),a.i2o(function(e,t){if(!a.ZSL.arraysEqual(e.shape,t.shape))throw new Qr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,a.DZQ)((()=>{const n=a.VVh(t),r=a.HZy(a.tnl(t));return a.WQq(a.jbE(n,a.lKK(t,e)),a.Kko(a.oNF(r)))}))}(e,n),-1)}))}function Ni(e,t){return(0,a.DZQ)((()=>{const n=wi(e,-1),r=wi(t,-1),s=a.lKK(n,r);return a.HZy(a.czq(s,-1))}))}bi.constructors={};const Ai={meanSquaredError:vi,meanAbsoluteError:ki,meanAbsolutePercentageError:Si,meanSquaredLogarithmicError:function(e,t){return(0,a.DZQ)((()=>{const n=a.zQh(t,Va(),Number.MAX_VALUE),r=a.Rm2(a.WQq(1,n)),s=a.zQh(e,Va(),Number.MAX_VALUE),i=a.Rm2(a.WQq(1,s));return a.i2o(ts(a.jbE(r,i)),-1)}))},squaredHinge:function(e,t){return(0,a.DZQ)((()=>{const n=a.PhQ(0,a.jbE(1,a.lKK(e,t)));return a.i2o(ts(n),-1)}))},hinge:function(e,t){return(0,a.DZQ)((()=>{const n=a.PhQ(0,a.jbE(1,a.lKK(e,t)));return a.i2o(n,-1)}))},categoricalHinge:function(e,t){return(0,a.DZQ)((()=>{const n=a.czq(a.lKK(e,t),-1),r=a.T9B(a.lKK(a.jbE(1,e),t),-1);return a.PhQ(0,a.WQq(1,a.jbE(r,n)))}))},logcosh:function(e,t){return(0,a.DZQ)((()=>{const n=Math.log(2),r=a.jbE(t,e),s=a.jbE(a.WQq(r,a.lw0(a.lKK(-2,r))),n);return a.i2o(s,-1)}))},categoricalCrossentropy:Ii,sparseCategoricalCrossentropy:Ti,binaryCrossentropy:Ci,kullbackLeiblerDivergence:function(e,t){return(0,a.DZQ)((()=>{const n=a.zQh(e,Va(),1),r=a.zQh(t,Va(),1);return a.czq(a.lKK(e,a.Rm2(a.y4m(n,r))),-1)}))},poisson:function(e,t){return(0,a.DZQ)((()=>{const n=a.Rm2(a.WQq(Va(),t));return a.i2o(a.jbE(t,a.lKK(e,n)),-1)}))},cosineProximity:Ni};function $i(e){if("string"==typeof e){if(e in Ai)return Ai[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Qr(t)}return e}function _i(e,t){return(0,a.DZQ)((()=>{const n=a.lKK(.5,a.P61(t)),r=Ga(a.rhj(t,n),e.dtype);return a.i2o(a.LCg(e,r),-1)}))}function Ei(e,t){return(0,a.DZQ)((()=>Ga(a.LCg(a.FLi(e,-1),a.FLi(t,-1)),"float32")))}function Ri(e,t){return Ci(e,t)}function Fi(e,t){return e.rank===t.rank&&(e=a.r2V(e,[e.rank-1])),(t=a.FLi(t,-1)).dtype!==e.dtype&&(t=a.wgE(t,e.dtype)),a.wgE(a.LCg(e,t),"float32")}const Di=Ii,Li=Ti,Mi={binaryAccuracy:_i,categoricalAccuracy:Ei,precision:function(e,t){return(0,a.DZQ)((()=>{const n=function(e,t){return(0,a.DZQ)((()=>a.wgE(a.czq(a.n76(a.LCg(e,1),a.LCg(t,1))),"float32")))}(e,t),r=function(e,t){return(0,a.DZQ)((()=>a.wgE(a.czq(a.n76(a.LCg(e,0),a.LCg(t,1))),"float32")))}(e,t),s=a.WQq(n,r);return a.wgE(a._M9(a.rhj(s,0),a.y4m(n,s),0),"float32")}))},categoricalCrossentropy:Di,sparseCategoricalCrossentropy:Li,mse:vi,MSE:vi,mae:ki,MAE:ki,mape:Si,MAPE:Si,cosine:Ni};function Oi(e){if("string"==typeof e&&e in Mi)return Mi[e];if("string"!=typeof e&&null!=e)return e;throw new Qr(`Unknown metric ${e}`)}function zi(e){if(ta(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Ai))if(Ai[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Mi))if(Mi[n]===e){t=n;break}return void 0!==t?t:e.name}}function Pi(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Wi(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Wi(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Wi(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Wi(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Bi(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Ui(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Bi([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function Vi(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];Bi([`${o} (${u})`,s,a,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)Bi(["","","","",i[e]],t,r)}function Gi(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Zi(e,t){if(null===e)return null;if("string"==typeof e)return ia(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Gi(t,a,r)?n.push(r):n.push(Zi(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=ia(n);t[e]=Zi(r,e)}}return t}}function Hi(e,t){if(null==e)return null;if("string"==typeof e)return sa(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Gi(t,a,r)?n.push(r):n.push(Hi(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[sa(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Hi(r,n):r}return t}}const Ki="4.22.0";class ji extends Us{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ka(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ha(this.inputs).length!==this.inputs.length)throw new Qr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ha(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ta(0===n,"input layer has >1 nodes"),ta(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Gs))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new qr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(ji.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(da);this.layers=[];for(const e of p){const t=h[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof ji&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(da);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new qr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new qr(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Qr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const a=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(const e of this.layers)for(const[t,s]of e.weights.entries()){const e=a?`${s.name.split("/").slice(0,-1).join("/")+"/"}${t}`:s.originalName;if(null!=n[e])throw new Qr(`Duplicate weight name: ${e}`);n[e]=s,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Qr(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Qr(`${e.length} of ${r} weights are not set: ${e}`)}Ms(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ki}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Hi(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,a.DZQ)((()=>{e=aa(e);const n=new Zs;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return js(this.outputs,n,t)}))}computeMask(e,t){return(0,a.DZQ)((()=>{let n;return e=aa(e),n=null==t?ea(null,e.length):aa(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=$s(e);if(t.length!==this.inputLayers.length)throw new Qr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(da);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=$s(t.computeOutputShape(ra(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];ta(t in n),a.push(n[t])}return ra(a)}runInternalGraph(e,t){null==t&&(t=ea(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(da);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=aa(t.call(e,l)),u=aa(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=aa(t.call(r,l)),u=aa(t.computeMask(r,i));if(t.activityRegularizer)throw new Yr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){ta(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof ji?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=ji.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Qr("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new Qr(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Qr(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return(0,a.DZQ)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=ji.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=ji.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[ji.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=ji.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=ji.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const d=c.inboundNodes[u];n.push(d.outputTensors[l])}n.length>0&&e.apply(ra(n),r)}function u(e){const n=e.name,s=xi(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Qr(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!pa(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];ta(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ta(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new Qr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,a.DZQ)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function qi(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Qi(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,a.DZQ)((()=>{if(1===e.shape.length)return(0,a.o8B)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,a.FLi)(e,t)}if(1===e.shape[1])return(0,a.tQQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,a.ASo)(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),(0,a.tGX)(s,"float32")}return null}function Yi(e,t){return(0,a.lKK)(e,t)}function Xi(e,t){let n,r;const s=t;n=s.xs,r=s.ys,a.ZSL.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=Ji("input",e.inputNames,n),o=Ji("output",e.outputNames,r),u=i[0].shape[0];a.ZSL.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),a.ZSL.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)a.ZSL.assert(i[t].shape[0]===u,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));for(let t=0;t<o.length;t++)a.ZSL.assert(o[t].shape[0]===u,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${o[t].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function Ji(e,t,n){if(n instanceof a.qYS)return[n];if(Array.isArray(n))return a.ZSL.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Qr(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function eo(e){return"function"==typeof e.iterator}function to(e){a.ZSL.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function no(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Ha(e,t,n-t))):Ha(e,t,n-t)}function ro(e,t){return a.DZQ((()=>null==e?null:Array.isArray(e)?e.map((e=>ro(e,t))):es(e,"int32"===t.dtype?t:a.wgE(t,"int32"))))}function ao(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function so(e){const t=[];e instanceof a.qYS&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Za(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function io(e,t){if(null==e)return;const n=[];if(t instanceof a.qYS)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof a.qYS)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function oo(e){return Array.isArray(e)}function uo(e){return!function(e){return e instanceof a.qYS}(e)&&!oo(e)}function lo(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(oo(e)&&e.length>0)t=!0;else if(uo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Qr(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(uo(e)){s=[];for(const n of t){if(null==e[n])throw new Qr(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(oo(e)){if(e.length!==t.length)throw new Qr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new Qr(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=so(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Qr(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Qr(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function co(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Qr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Qr(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Qr(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Qr(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ho extends ji{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Qr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Bi(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Ui(o[e],n,r):Vi(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Rs(e.collectedTrainableWeights):Rs(e.trainableWeights),t}(e),l=Rs(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>a.BaG.adagrad(.01),Adadelta:()=>a.BaG.adadelta(1,.95,Va()),Adam:()=>a.BaG.adam(.001,.9,.999,Va()),Adamax:()=>a.BaG.adamax(.002,.9,.999,Va(),0),RMSProp:()=>a.BaG.rmsprop(.001,.9,0,Va()),SGD:()=>a.BaG.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Qr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof a.ELo))throw new Qr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Qr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>$i(e)))}else{const n=$i(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Qr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push($i(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fa("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Fa("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Ci?-1!==["accuracy","acc"].indexOf(i)?r=_i:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ri):this.lossFunctions[e]===Ti?-1!==["accuracy","acc"].indexOf(i)?r=Fi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Li):-1!==["accuracy","acc"].indexOf(i)?r=Ei:-1!==["crossentropy","ce"].indexOf(i)&&(r=Di),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Oi(i);a=e,n=""+zi(i)}let t;Fa(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;to(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return ra(this.testLoop(t,e,r,n.verbose,n.steps))}finally{io(a[0],e),io(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new Yr("Verbose mode is not implemented yet.");a.ZSL.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let u=0,l=0;for(;!r||l<n.batches;){const t=await o.next();if(i=a.DZQ((()=>{if(t.value){const{xs:n,ys:r}=Xi(e,t.value),o=n.concat(r),c=a.DZQ((()=>s(o)));if(a.ASo(o),0===l)for(let e=0;e<c.length;++e)i.push((0,a.d_2)(0));const d=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=a.DZQ((()=>a.WQq(i[e],a.lKK(d,t)))),l>0&&a.ASo(n)}a.ASo(c),u+=d,++l}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=a.y4m(i[e],u),a.ASo(t)}return ra(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Qr(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Qr(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Qr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new Zs;if(e instanceof a.qYS&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Qr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Qr(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const o=js(s,i);return n?o:o[0]}retrieveSymbolicTensors(e){const t=ea(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Qr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return a.DZQ((()=>{const r=this.checkNumSamples(e);if(n)throw new Yr("Verbose predictLoop() is not implemented yet.");const s=ao(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)a.DZQ((()=>{const n=s[t][0],r=s[t][1],a=no(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Zs(i);return js(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return ra(i.map((e=>a.xWs(e,0))))}))}predict(e,t={}){const n=so(e);co(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return to(e),this.predictLoop(n,e)}finally{io(n,e)}}predictOnBatch(e){co(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new qr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ti?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=ha(e.map((e=>e.shape[0])));n.sort();const r=ha(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Qr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Qr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!a.ZSL.arraysEqual(n,r))throw new Qr(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=lo(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=lo(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[vi,Ci,Ii];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Ii&&1===s.shape[s.shape.length-1])throw new Qr(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Qr(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Qr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=qi(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Qi(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return a.DZQ((()=>{const i=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new Yr("Verbose mode is not implemented yet.");if(null!=s)throw new Yr("steps mode in testLoop() is not implemented yet");{const r=ao(i,n),s=(0,a.tGX)(Ba(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],u=r[n][1],l=Ha(s,i,u-i),c=ro(t,l),d=e(c);if(0===n)for(let e=0;e<d.length;++e)o.push((0,a.d_2)(0));for(let e=0;e<d.length;++e){const t=d[e];o[e]=a.WQq(o[e],a.lKK(u-i,t))}}for(let e=0;e<o.length;++e)o[e]=a.y4m(o[e],i)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;na(e,r)>1&&(a+=`_${na(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Zs(e),u=js(this.outputs,o,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],u[e]);null!=s[e]&&(n=Yi(n,s[e]));const i=a.i2o(n);t.push(i),l=0===e?n:a.WQq(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=a.i2o(t(r[s],u[s]))}a.aCs(n),i.push(n)}return l=a.i2o(l),this.calculateLosses().forEach((e=>{l=a.WQq(l,e)})),l}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=e=>a.DZQ((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const o=new Zs(i),u=js(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=a.i2o(r(s[e],u[e]));n=0===e?i:a.WQq(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=a.i2o(n(s[r],u[r]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,i,o,u,l,c,d,h;this.isTraining=!0;try{const a=null==n.batchSize?32:n.batchSize;to(a);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,a);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Yr("validationData including sample weights is not supported yet."):new Qr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);u=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(u,l,null,null,e,a);c=t[0],d=t[1],m=c.concat(d)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];c=no(r,e,t),i=r,r=no(r,0,e),d=no(s,e,t),o=s,s=no(s,0,e),m=c.concat(d)}else null!=n.validationSteps&&(g=!0);const b=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=gi(n.callbacks,n.yieldEvery);return await this.fitLoop(y,b,x,a,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,io(r,e),io(s,t),io(i,e),io(o,t),io(c,u),io(d,l),null!=h&&a.ASo(h)}}async fitLoop(e,t,n,r,s,i,o,u,l,c,d,h,p,f){null==r&&(r=32),null==s&&(s=1),null==c&&(c=!0),null==h&&(h=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new Qr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let b;null!=g&&(b=Ba(0,g)),null==i&&(i=1);const{callbackList:y,history:x}=yi(o,i,s,h,g,p,r,m,d);y.setModel(this),this.history=x,await y.onTrainBegin(),this.stopTraining_=!1;for(let i=h;i<s;++i){await y.onEpochBegin(i);const s={};if(null!=p)throw new Yr("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Yr("batch shuffling is not implemneted yet");c&&a.ZSL.shuffle(b);const i=(0,a.tGX)(b),o=ao(g,r);for(let c=0;c<o.length;++c){const d={};if(await y.onBatchBegin(c,d),a.DZQ((()=>{const h=o[c][0],p=o[c][1],f=Ha(i,h,p-h);d.batch=c,d.size=p-h;const g=ro(t,f),b=e(g);for(let e=0;e<n.length;++e){const t=n[e],r=b[e];d[t]=r,a.aCs(r)}if(c===o.length-1&&m){const e=this.testLoop(u,l,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];a.aCs(i),s["val_"+r]=i}}})),await y.onBatchEnd(c,d),li(d),this.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(a.ZSL.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),a.ZSL.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),a.ZSL.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),a.ZSL.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),a.ZSL.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(eo(n.validationData))a.ZSL.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Yr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const u=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let c;c=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const d=gi(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=yi(d,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const c={};await p.onEpochBegin(m);let d=0,h=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Xi(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await p.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const t=qi(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Qi(s[e],null,t[e]))}const c=r.concat(s).concat(o),f=u(c);a.ASo(c);for(let e=0;e<l.length;++e){const t=l[e],n=f[e];i[t]=n,a.aCs(n)}await p.onBatchEnd(h,i),li(i),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(s){let t;t=eo(n.validationData)?aa(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):aa(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const e of i){const t=await e.data();o.push(t[0])}return a.ASo(i),io(n[0],e),io(n[1],t),ra(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=a.m1Z().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-a.m1Z().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=sa(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>sa(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=sa(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[sa(zi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>sa(zi(e))));{const e={};for(const t in this.metrics)e[t]=sa(zi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xi(Zi(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=ia(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ia(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ia(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ia(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ia(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=a.io.getSaveHandlers(e);if(0===t.length)throw new Qr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Qr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Qr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Ki}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await a.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=a.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Pi(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Pi(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ho.className="Model",a.JFn.registerClass(ho);class po extends ho{}po.className="Functional",a.JFn.registerClass(po);class fo extends ho{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ka("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Qr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof fo||e instanceof ho;let n;if(t){if(n=e,1!==n.outputs.length)throw new Qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Qr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Qr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Qr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Gs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Qr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Vs(this.outputs[0])}this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ea(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Es(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ho({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Qr("Legacy serialization format not supported yet.");s=t}else a.ZSL.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof fo))throw new Yr(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const e of s){const t=xi(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new Qr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Qr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}fo.className="Sequential",a.JFn.registerClass(fo);class mo extends a.JFn.Serializable{getConfig(){return{}}}class go extends mo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Yr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return a.Pqc(e)}(e,t)}}go.className="elu",a.JFn.registerClass(go);class bo extends mo{apply(e){return a.WfX(e)}}bo.className="selu",a.JFn.registerClass(bo);class yo extends mo{apply(e){return a.VVh(e)}}yo.className="relu",a.JFn.registerClass(yo);class xo extends mo{apply(e){return(0,a.DZQ)((()=>a.BpO(6,a.VVh(e))))}}xo.className="relu6",a.JFn.registerClass(xo);class wo extends mo{apply(e){return e}}wo.className="linear",a.JFn.registerClass(wo);class vo extends mo{apply(e){return a.ry7(e)}}vo.className="sigmoid",a.JFn.registerClass(vo);class ko extends mo{apply(e){return function(e){return(0,a.DZQ)((()=>{const t=a.WQq(.5,a.lKK(.2,e));return a.zQh(t,0,1)}))}(e)}}ko.className="hardSigmoid",a.JFn.registerClass(ko);class So extends mo{apply(e){return a.lw0(e)}}So.className="softplus",a.JFn.registerClass(So);class Io extends mo{apply(e){return function(e){return(0,a.DZQ)((()=>a.y4m(e,a.WQq(a.tnl(e),1))))}(e)}}Io.className="softsign",a.JFn.registerClass(Io);class To extends mo{apply(e){return a.ymU(e)}}To.className="tanh",a.JFn.registerClass(To);class Co extends mo{apply(e,t=-1){return a.Vs9(e,t)}}Co.className="softmax",a.JFn.registerClass(Co);class No extends mo{apply(e,t=-1){return a.HPB(e,t)}}No.className="logSoftmax",a.JFn.registerClass(No);class Ao extends mo{apply(e){return(0,a.DZQ)((()=>a.DZQ((()=>{const t=Math.sqrt(2),n=a.lKK(.5,a.WQq(1,a.Y12(a.y4m(e,t))));return a.lKK(e,n)}))))}}Ao.className="gelu",a.JFn.registerClass(Ao);class $o extends mo{apply(e){return(0,a.DZQ)((()=>a.lKK(.5,a.lKK(e,a.WQq(1,a.ymU(a.lKK(a.RZD(a.y4m(2,Math.PI)),a.WQq(e,a.lKK(.044715,a.n7C(e,3))))))))))}}$o.className="gelu_new",a.JFn.registerClass($o);class _o extends mo{apply(e){return(0,a.DZQ)((()=>a.lKK(e,a.ymU(a.lw0(e)))))}}_o.className="mish",a.JFn.registerClass(_o);class Eo extends mo{apply(e,t=1){return(0,a.DZQ)((()=>a.lKK(a.ry7(a.lKK(e,t)),e)))}}function Ro(e){return e.getClassName()}function Fo(e,t={}){return ca(e,a.JFn.SerializationMap.getMap().classNameMap,t,"activation")}function Do(e){if(null==e){return Fo({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Fo(t)}return e instanceof mo?e:Fo(e)}Eo.className="swish",a.JFn.registerClass(Eo);class Lo extends a.JFn.Serializable{}class Mo extends Lo{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,a.DZQ)((()=>{let t=(0,a.Ul9)([1]);return this.hasL1&&(t=(0,a.WQq)(t,(0,a.czq)(a.lKK(this.l1,(0,a.tnl)(e))))),this.hasL2&&(t=(0,a.WQq)(t,(0,a.czq)(a.lKK(this.l2,ts(e))))),a.tQQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Mo.className="L1L2",a.JFn.registerClass(Mo);const Oo={l1l2:"L1L2"};function zo(e){return ua(e)}function Po(e,t={}){return ca(e,a.JFn.SerializationMap.getMap().classNameMap,t,"regularizer")}function Wo(e){return null==e?null:"string"==typeof e?Po({className:e in Oo?Oo[e]:e,config:{}}):e instanceof Lo?e:Po(e)}class Bo extends Us{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=_s(e);let n=(0,a.VVh)(e);return null!=this.maxValue&&(n=(0,a.zQh)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Bo.className="ReLU",a.JFn.registerClass(Bo);class Uo extends Us{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=_s(e);return(0,a.H8d)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Uo.className="LeakyReLU",a.JFn.registerClass(Uo);class Vo extends Us{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ns(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Wo(e.alphaRegularizer),this.alphaConstraint=oi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Qr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Es(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Os({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=_s(e),(0,a.NsG)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Cs(this.alphaInitializer),alphaRegularizer:zo(this.alphaRegularizer),alphaConstraint:si(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Vo.className="PReLU",a.JFn.registerClass(Vo);class Go extends Us{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Yr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=_s(e);return(0,a.Pqc)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Go.className="ELU",a.JFn.registerClass(Go);class Zo extends Us{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=_s(e);return(0,a.lKK)(n,(0,a.wgE)((0,a.rhj)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Zo.className="ThresholdedReLU",a.JFn.registerClass(Zo);class Ho extends Us{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Co).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,a.DZQ)((()=>{let n=_s(e);const r=t.mask;if(null!=r){const e=(0,a.lKK)((0,a.jbE)((0,a.SaS)(n.shape),(0,a.wgE)(r,n.dtype)),(0,a.d_2)(-1e9));n=(0,a.WQq)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,a.oNF)((0,a.jbE)(n,(0,a.VZ)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ko(e,t,n){if("number"==typeof e)return ea(e,t);if(e.length!==t)throw new Qr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Qr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function jo(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function qo(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Wa([n-t,0]);else{if("same"!==r)throw new Qr(`Unsupport padding mode: ${r}.`);e*=t}return e}function Qo(e,t){return(0,a.DZQ)((()=>($a(t),"channelsFirst"===t?a.mgz(e,[0,2,3,1]):e)))}function Yo(e,t){return(0,a.DZQ)((()=>($a(t),"channelsFirst"===t?a.mgz(e,[0,2,3,4,1]):e)))}function Xo(e,t,n,r=[1,1],s="valid",i,o,u=null){return(0,a.DZQ)((()=>{if(null==i&&(i="channelsLast"),$a(i),3!==e.rank&&4!==e.rank)throw new Qr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Qr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Qo(e,i);if("causal"===s)throw new Yr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=a.cZk.conv2d({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===i&&(l=a.mgz(l,[0,3,1,2])),l}))}Ho.className="Softmax",a.JFn.registerClass(Ho);class Jo extends Us{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jo.verifyArgs(t),this.rank=e,ga(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Yr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ko(t.kernelSize,e,"kernelSize"),this.strides=Ko(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,_a(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,$a(this.dataFormat),this.activation=Do(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ns(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=oi(t.biasConstraint),this.biasRegularizer=Wo(t.biasRegularizer),this.activityRegularizer=Wo(t.activityRegularizer),this.dilationRate=Ko(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Qr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Qr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Qr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ta("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!ma(e.kernelSize,"number",1,3))throw new Qr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ro(this.activation),useBias:this.useBias,biasInitializer:Cs(this.biasInitializer),biasRegularizer:zo(this.biasRegularizer),activityRegularizer:zo(this.activityRegularizer),biasConstraint:si(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class eu extends Jo{constructor(e,t){super(e,t),this.kernel=null,eu.verifyArgs(t),this.filters=t.filters,ga(this.filters,"filters"),this.kernelInitializer=Ns(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=oi(t.kernelConstraint),this.kernelRegularizer=Wo(t.kernelRegularizer)}build(e){e=Es(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,a.DZQ)((()=>{let t;e=_s(e);const n=null==this.bias?null:this.bias.read(),r=ya(this.activation.getClassName());if(null!=r&&2===this.rank)t=Xo(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",i,o=1){return(0,a.DZQ)((()=>{if(null==i&&(i="channelsLast"),$a(i),3!==e.shape.length)throw new Qr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Qr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Qr(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=a.mgz(e,[0,2,1])),"causal"===s)throw new Yr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=a.kA9(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(u=rs(u,n)),u}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Xo(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Yr("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",i,o){return(0,a.DZQ)((()=>{if(null==i&&(i="channelsLast"),$a(i),4!==e.rank&&5!==e.rank)throw new Qr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Qr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let u=Yo(e,i);if("causal"===s)throw new Yr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=a.IPL(u,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(u=rs(u,n)),"channelsFirst"===i&&(u=a.mgz(u,[0,4,1,2,3])),u}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Es(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=jo(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Cs(this.kernelInitializer),kernelRegularizer:zo(this.kernelRegularizer),kernelConstraint:si(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Qr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class tu extends eu{constructor(e){super(2,e),tu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ma(e.kernelSize,"number",1,2))throw new Qr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}tu.className="Conv2D",a.JFn.registerClass(tu);class nu extends eu{constructor(e){super(3,e),nu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Qr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}nu.className="Conv3D",a.JFn.registerClass(nu);class ru extends tu{constructor(e){if(super(e),this.inputSpec=[new Os({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Qr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Es(e)).length)throw new Qr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Os({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return a.DZQ((()=>{let t=_s(e);if(4!==t.shape.length)throw new Qr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],u=n[i],l=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[r,qo(o,d,l,this.padding),qo(u,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.mgz(t,[0,2,3,1]));let f=a.wX9(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=a.mgz(f,[0,3,1,2])),null!=this.bias&&(f=rs(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Es(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=qo(t[r],o,s,this.padding),t[a]=qo(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ru.className="Conv2DTranspose",a.JFn.registerClass(ru);class au extends nu{constructor(e){if(super(e),this.inputSpec=[new Os({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Qr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Es(e)).length)throw new Qr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Os({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return a.DZQ((()=>{let t=_s(e);if(5!==t.shape.length)throw new Qr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,o;"channelsFirst"===this.dataFormat?(o=2,s=3,i=4):(o=1,s=2,i=3);const u=n[o],l=n[s],c=n[i],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=[r,qo(u,f,d,this.padding),qo(l,m,h,this.padding),qo(c,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.mgz(t,[0,2,3,4,1]));let y=a.jIJ(t,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=a.mgz(y,[0,4,1,2,3])),null!==this.bias&&(y=rs(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Es(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=qo(t[r],l,i,this.padding),t[a]=qo(t[a],c,o,this.padding),t[s]=qo(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}au.className="Conv3DTranspose",a.JFn.registerClass(au);class su extends eu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Qr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Qr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Qr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ns(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Wo(t.depthwiseRegularizer),this.depthwiseConstraint=oi(t.depthwiseConstraint),this.pointwiseInitializer=Ns(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Wo(t.pointwiseRegularizer),this.pointwiseConstraint=oi(t.pointwiseConstraint)}build(e){if((e=Es(e)).length<this.rank+2)throw new Qr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Qr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Os({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,a.DZQ)((()=>{let t;if(e=_s(e),1===this.rank)throw new Yr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=a.mgz(e,[0,2,3,1])),t=a.wdz(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=a.mgz(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Cs(this.depthwiseInitializer),e.pointwiseInitializer=Cs(this.pointwiseInitializer),e.depthwiseRegularizer=zo(this.depthwiseRegularizer),e.pointwiseRegularizer=zo(this.pointwiseRegularizer),e.depthwiseConstraint=si(this.depthwiseConstraint),e.pointwiseConstraint=si(this.pointwiseConstraint),e}}su.className="SeparableConv";class iu extends su{constructor(e){super(2,e)}}iu.className="SeparableConv2D",a.JFn.registerClass(iu);class ou extends eu{constructor(e){super(1,e),ou.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ma(e.kernelSize,"number",1,1))throw new Qr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ou.className="Conv1D",a.JFn.registerClass(ou);class uu extends Us{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,a.DZQ)((()=>{if(e=_s(e),"channelsLast"===this.dataFormat){const t=ja(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ja(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ja(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ja(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}uu.className="Cropping2D",a.JFn.registerClass(uu);class lu extends Us{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$a(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,fa(Ia,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return a.DZQ((()=>{let t=_s(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=a.mgz(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?a.Slp.resizeNearestNeighbor(t,[e,r]):a.Slp.resizeBilinear(t,[e,r]);return a.mgz(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?a.Slp.resizeNearestNeighbor(t,[e,r]):a.Slp.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}lu.className="UpSampling2D",a.JFn.registerClass(lu);class cu extends Jo{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ns(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=oi(e.depthwiseConstraint),this.depthwiseRegularizer=Wo(e.depthwiseRegularizer)}build(e){if((e=Es(e)).length<4)throw new Qr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Qr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.DZQ)((()=>{let t=function(e,t,n=[1,1],r="valid",s,i){return(0,a.DZQ)((()=>{null==s&&(s="channelsLast"),$a(s);let o=Qo(e,s);if(4!==e.rank)throw new Qr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Qr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=a.Gl3(o,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=a.mgz(o,[0,3,1,2])),o}))}(e=_s(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Es(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=jo(t,this.kernelSize[0],this.padding,this.strides[0]),s=jo(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Cs(this.depthwiseInitializer),e.depthwiseRegularizer=zo(this.depthwiseRegularizer),e.depthwiseConstraint=si(this.depthwiseRegularizer),e}}function du(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Qr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function hu(e,t,n,r=!1,s,i,o=!1,u=!1){return a.DZQ((()=>{const l=t.shape.length;if(l<3)throw new Qr(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Ba(2,l));if(t=a.mgz(t,c),null!=i)throw new Yr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=a.wgE(a.wgE(s,"bool"),"float32")).rank===l-1&&(s=a.UG6(s,-1)),s=a.mgz(s,c)),r&&(t=a.BEg(t,0),null!=s&&(s=a.BEg(s,0)));const d=[];let h,p=n;const f=t.shape[0],m=a.K$i(t);let g,b;null!=s&&(g=a.K$i(s));for(let t=0;t<f;++t){const n=m[t],r=a.DZQ((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=a.DZQ((()=>{const e=g[t],n=a.jbE(a.P61(e),e);return{output:a.WQq(a.lKK(r[0],e),a.lKK(p[0],n)),newStates:p.map(((t,s)=>a.WQq(a.lKK(r[1][s],e),a.lKK(t,n))))}}));h=e.output,p=e.newStates}u&&d.push(h)}if(u){const e=1;b=a.t$z(d,e)}return[h,b,p]}))}cu.className="DepthwiseConv2D",a.JFn.registerClass(cu);class pu extends Us{constructor(e){let t;if(super(e),null==e.cell)throw new Qr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new vu({cells:e.cell}):e.cell,null==t.stateSize)throw new Qr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Os({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Ba(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){As(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return a.DZQ((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Yr("Constants support is not implemented in RNN yet.");As(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Os({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.ZSL.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Qr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Os({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,a.DZQ)((()=>{if(!this.stateful)throw new jr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>a.Ul9([n,e]))):this.states_=[a.Ul9([n,this.cell.stateSize])];else if(null==e)a.ASo(this.states_),null!=this.keptStates&&(a.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>a.Ul9([n,e]))):this.states_[0]=a.Ul9([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):a.ASo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!a.ZSL.arraysEqual(r.shape,i))throw new Qr(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>a.aCs(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=du(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Os({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof zs){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,a.DZQ)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=_s(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Qr(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=hu(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d}))}getInitialState(e){return(0,a.DZQ)((()=>{let t=a.Ul9(e.shape);return t=a.czq(t,[1,2]),t=Za(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ya(t,[1,e]):t)):this.cell.stateSize>1?[Ya(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===pu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=xi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}pu.className="RNN",a.JFn.registerClass(pu);class fu extends Us{}class mu extends fu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ga(this.units,"units"),this.activation=Do(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ns(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ns(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ns(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Wo(e.kernelRegularizer),this.recurrentRegularizer=Wo(e.recurrentRegularizer),this.biasRegularizer=Wo(e.biasRegularizer),this.kernelConstraint=oi(e.kernelConstraint),this.recurrentConstraint=oi(e.recurrentConstraint),this.biasConstraint=oi(e.biasConstraint),this.dropout=Pa([1,Wa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pa([1,Wa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Es(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.DZQ)((()=>{if(2!==e.length)throw new Qr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ku({ones:()=>a.P61(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ku({ones:()=>a.P61(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=Ja(null!=i?a.lKK(e,i):e,this.kernel.read()),null!=this.bias&&(s=rs(s,this.bias.read())),null!=o&&(n=a.lKK(n,o));let u=a.WQq(s,Ja(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ro(this.activation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),recurrentInitializer:Cs(this.recurrentInitializer),biasInitializer:Cs(this.biasInitializer),kernelRegularizer:zo(this.kernelRegularizer),recurrentRegularizer:zo(this.recurrentRegularizer),biasRegularizer:zo(this.biasRegularizer),activityRegularizer:zo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}mu.className="SimpleRNNCell",a.JFn.registerClass(mu);class gu extends pu{constructor(e){e.cell=new mu(e),super(e)}call(e,t){return(0,a.DZQ)((()=>{null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}gu.className="SimpleRNN",a.JFn.registerClass(gu);class bu extends fu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Qr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ga(this.units,"units"),this.activation=Do(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Do(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ns(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ns(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ns(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Wo(e.kernelRegularizer),this.recurrentRegularizer=Wo(e.recurrentRegularizer),this.biasRegularizer=Wo(e.biasRegularizer),this.kernelConstraint=oi(e.kernelConstraint),this.recurrentConstraint=oi(e.recurrentConstraint),this.biasConstraint=oi(e.biasConstraint),this.dropout=Pa([1,Wa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pa([1,Wa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Es(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.DZQ)((()=>{if(2!==e.length)throw new Qr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ku({ones:()=>a.P61(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ku({ones:()=>a.P61(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l;0<this.dropout&&this.dropout<1&&(e=a.lKK(e,s[0]));let c=Ja(e,this.kernel.read());this.useBias&&(c=rs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.lKK(r,i[0]));const d=this.recurrentKernel.read(),[h,p]=a.lDo(d,[2*this.units,this.units],d.rank-1),f=Ja(r,h),[m,g,b]=a.lDo(c,3,c.rank-1),[y,x]=a.lDo(f,2,f.rank-1);o=this.recurrentActivation.apply(a.WQq(m,y)),u=this.recurrentActivation.apply(a.WQq(g,x));const w=Ja(a.lKK(u,r),p);l=this.activation.apply(a.WQq(b,w));const v=a.WQq(a.lKK(o,r),a.lKK(a.WQq(1,a.HZy(o)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ro(this.activation),recurrentActivation:Ro(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),recurrentInitializer:Cs(this.recurrentInitializer),biasInitializer:Cs(this.biasInitializer),kernelRegularizer:zo(this.kernelRegularizer),recurrentRegularizer:zo(this.recurrentRegularizer),biasRegularizer:zo(this.biasRegularizer),activityRegularizer:zo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}bu.className="GRUCell",a.JFn.registerClass(bu);class yu extends pu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bu(e),super(e)}call(e,t){return(0,a.DZQ)((()=>{null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}yu.className="GRU",a.JFn.registerClass(yu);class xu extends fu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ga(this.units,"units"),this.activation=Do(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Do(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ns(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ns(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ns(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Wo(e.kernelRegularizer),this.recurrentRegularizer=Wo(e.recurrentRegularizer),this.biasRegularizer=Wo(e.biasRegularizer),this.kernelConstraint=oi(e.kernelConstraint),this.recurrentConstraint=oi(e.recurrentConstraint),this.biasConstraint=oi(e.biasConstraint),this.dropout=Pa([1,Wa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pa([1,Wa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Es(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends us{apply(t,r){const a=e.apply([n]),s=(new cs).apply([n]),i=e.apply([2*n]);return Qa(Qa(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,a.DZQ)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Qr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ku({ones:()=>a.P61(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ku({ones:()=>a.P61(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let u,l,c,d;0<this.dropout&&this.dropout<1&&(e=a.lKK(e,i[0]));let h=Ja(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.lKK(r,o[0])),h=a.WQq(h,Ja(r,this.recurrentKernel.read())),this.useBias&&(h=rs(h,this.bias.read()));const[p,f,m,g]=a.lDo(h,4,h.rank-1);u=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),c=a.WQq(a.lKK(l,s),a.lKK(u,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=a.lKK(d,this.activation.apply(c));return[b,b,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ro(this.activation),recurrentActivation:Ro(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),recurrentInitializer:Cs(this.recurrentInitializer),biasInitializer:Cs(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:zo(this.kernelRegularizer),recurrentRegularizer:zo(this.recurrentRegularizer),biasRegularizer:zo(this.biasRegularizer),activityRegularizer:zo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}xu.className="LSTMCell",a.JFn.registerClass(xu);class wu extends pu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new xu(e),super(e)}call(e,t){return(0,a.DZQ)((()=>{null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}wu.className="LSTM",a.JFn.registerClass(wu);class vu extends fu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,a.DZQ)((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;As(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Fa(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(xi(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ls(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Ms(t)}}function ku(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,o=()=>null!=i?i(t(),n):as(t(),n),u=()=>ss(o,t,r);return!s||s<=1?a.aCs(u().clone()):Array(s).fill(void 0).map(u).map((e=>a.aCs(e.clone())))}vu.className="StackedRNNCells",a.JFn.registerClass(vu);class Su extends pu{constructor(e){if(e.unroll)throw new Yr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Yr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Os({ndim:5})]}call(e,t){return a.DZQ((()=>{if(null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Qr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return a.DZQ((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=a.Ul9(s);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){a.DZQ((()=>{if(!this.stateful)throw new jr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.Ul9(s))):this.states_=[a.Ul9(s)];else if(null==e)a.ASo(this.states_),null!=this.keptStates&&(a.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.Ul9(s))):this.states_[0]=a.Ul9(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):a.ASo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!a.ZSL.arraysEqual(n.shape,r))throw new Qr(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>a.aCs(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=jo(u,r[0],a,s[0],i[0]),d=jo(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}Su.className="ConvRNN2D";class Iu extends xu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ga(this.filters,"filters"),this.kernelSize=Ko(n,2,"kernelSize"),this.kernelSize.forEach((e=>ga(e,"kernelSize"))),this.strides=Ko(r||1,2,"strides"),this.strides.forEach((e=>ga(e,"strides"))),this.padding=a||"valid",_a(this.padding),this.dataFormat=s||"channelsLast",$a(this.dataFormat),this.dilationRate=Ko(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ga(e,"dilationRate")))}build(e){var t;e=Es(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Qr(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends us{apply(e,t){return qa([n.apply([r]),a.SaS([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return a.DZQ((()=>{if(3!==e.length)throw new Qr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ku({ones:()=>a.P61(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,u=(e,t,n)=>t&&t[n]?a.lKK(t[n],e):e;let l=u(r,o,0),c=u(r,o,1),d=u(r,o,2),h=u(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ku({ones:()=>a.P61(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=u(s,p,0),m=u(s,p,1),g=u(s,p,2),b=u(s,p,3);const[y,x,w,v]=a.lDo(this.kernel.read(),4,3),[k,S,I,T]=this.useBias?a.lDo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,k,this.padding),c=this.inputConv(c,x,S,this.padding),d=this.inputConv(d,w,I,this.padding),h=this.inputConv(h,v,T,this.padding);const[C,N,A,$]=a.lDo(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,C),m=this.recurrentConv(m,N),g=this.recurrentConv(g,A),b=this.recurrentConv(b,$);const _=this.recurrentActivation.apply(a.WQq(l,f)),E=this.recurrentActivation.apply(a.WQq(c,m)),R=a.WQq(a.lKK(E,i),a.lKK(_,this.activation.apply(a.WQq(d,g)))),F=a.lKK(this.recurrentActivation.apply(a.WQq(h,b)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=a.Xtf(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?rs(s,n,this.dataFormat):s}recurrentConv(e,t){return a.Xtf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Iu.className="ConvLSTM2DCell",a.JFn.registerClass(Iu);class Tu extends Su{constructor(e){const t=new Iu(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Tu.className="ConvLSTM2D",a.JFn.registerClass(Tu);class Cu extends Us{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ss((()=>as(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Cu.className="Dropout",a.JFn.registerClass(Cu);class Nu extends Cu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Nu.className="SpatialDropout1D",a.JFn.registerClass(Nu);class Au extends Us{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ga(this.units,"units"),this.activation=Do(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ns(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ns(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=oi(e.kernelConstraint),this.biasConstraint=oi(e.biasConstraint),this.kernelRegularizer=Wo(e.kernelRegularizer),this.biasRegularizer=Wo(e.biasRegularizer),this.activityRegularizer=Wo(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Es(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Es(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e),r=ya(this.activation.getClassName());let a;return null!=r?a=Ja(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Ja(n,this.kernel.read()),null!=this.bias&&(a=rs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Ro(this.activation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),biasInitializer:Cs(this.biasInitializer),kernelRegularizer:zo(this.kernelRegularizer),biasRegularizer:zo(this.biasRegularizer),activityRegularizer:zo(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),biasConstraint:si(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Au.className="Dense",a.JFn.registerClass(Au);class $u extends Us{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Es(e);for(const t of e.slice(1))if(null==t)throw new Qr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],za(e,1)]}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);let n=_s(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,a.mgz)(n,e)}return function(e){if(e.rank<=1)throw new Qr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],za(e.shape,1)];return a.tQQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}$u.className="Flatten",a.JFn.registerClass($u);class _u extends Us{constructor(e){super(e),this.supportsMasking=!0,this.activation=Do(e.activation)}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ro(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}_u.className="Activation",a.JFn.registerClass(_u);class Eu extends Us{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,a.DZQ)((()=>{return e=_s(e),t=e,n=this.n,(0,a.DZQ)((()=>{if(2!==t.shape.length)throw new Qr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ya(Za(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Eu.className="RepeatVector",a.JFn.registerClass(Eu);class Ru extends Us{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Qr("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=za(e);if(null!==s){if(0===a||i%a!=0)throw new Qr(n);r[s]=i/a}else if(i!==a)throw new Qr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,a.tQQ)(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Ru.className="Reshape",a.JFn.registerClass(Ru);class Fu extends Us{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ba(1,e.dims.length+1);if(!a.ZSL.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Os({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Es(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,a.mgz)(_s(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Fu.className="Permute",a.JFn.registerClass(Fu);class Du extends Us{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=_s(e);return(0,a.bzn)((0,a.Ec)(n,this.maskValue),-1)}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e),r=(0,a.bzn)((0,a.Ec)(n,this.maskValue),-1,!0);return(0,a.lKK)(n,(0,a.wgE)(r,n.dtype))}))}}Du.className="Masking",a.JFn.registerClass(Du);class Lu extends Us{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(aa(e.inputLength))}this.inputDim=e.inputDim,ga(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ga(this.outputDim,"outputDim"),this.embeddingsInitializer=Ns(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Wo(e.embeddingsRegularizer),this.activityRegularizer=Wo(e.activityRegularizer),this.embeddingsConstraint=oi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,a.DZQ)((()=>this.maskZero?(e=_s(e),(0,a.Ec)(e,(0,a.POl)(e))):null))}computeOutputShape(e){if(e=Es(e),null==this.inputLength)return[...e,this.outputDim];const t=aa(this.inputLength);if(t.length!==e.length-1)throw new Qr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Qr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);let n=_s(e);"int32"!==n.dtype&&(n=Ga(n,"int32"));const r=es(this.embeddings.read(),(0,a.tQQ)(n,[n.size]));return(0,a.tQQ)(r,Es(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Cs(this.embeddingsInitializer),embeddingsRegularizer:zo(this.embeddingsRegularizer),activityRegularizer:zo(this.activityRegularizer),embeddingsConstraint:si(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Lu.className="Embedding",a.JFn.registerClass(Lu);class Mu extends Us{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Yr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Qr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Es(e)]),e.length<2)throw new Qr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=ha(t),t.length>1)throw new Qr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ha(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,a.DZQ)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Wa(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Za(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],i=e.slice(1).concat([s]);let o=a.tQQ(r,[s].concat(za(e.slice(1))));o=a.mgz(o,[1,0]),o=a.tQQ(o,i),t.push(o),n=!0}else if(e>1){const s=Ba(1,e).concat([0]);t.push(a.mgz(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=a.tQQ(a.mgz(a.tQQ(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Ba(0,s-1));r=a.mgz(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=ha(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return a.DZQ((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Qr("`mask` should be an Array");if(!Array.isArray(e))throw new Qr("`inputs` should be an Array");if(t.length!==e.length)throw new Qr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:a.UG6(e,0))))[0];for(let e=1;e<t.length-1;++e)n=a.n76(n,t[e]);return n}))}}class Ou extends Mu{constructor(e){super(e)}mergeFunction(e){return(0,a.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.WQq(t,e[n]);return t}))}}Ou.className="Add",a.JFn.registerClass(Ou);class zu extends Mu{constructor(e){super(e)}mergeFunction(e){return(0,a.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.lKK(t,e[n]);return t}))}}zu.className="Multiply",a.JFn.registerClass(zu);class Pu extends Mu{constructor(e){super(e)}mergeFunction(e){return(0,a.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.WQq(t,e[n]);return a.lKK(1/e.length,t)}))}}Pu.className="Average",a.JFn.registerClass(Pu);class Wu extends Mu{constructor(e){super(e)}mergeFunction(e){return(0,a.DZQ)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.PhQ(t,e[n]);return t}))}}Wu.className="Maximum",a.JFn.registerClass(Wu);class Bu extends Mu{constructor(e){super(e)}mergeFunction(e){return(0,a.DZQ)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.BpO(t,e[n]);return t}))}}Bu.className="Minimum",a.JFn.registerClass(Bu);class Uu extends Mu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Qr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(a.ZSL.arraysEqual(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Qr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,a.DZQ)((()=>qa(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Qr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Qr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Qr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Qr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return a.DZQ((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(a.wgE(a.P61(e[n]),"bool")):t[n].rank<e[n].rank?r.push(a.UG6(t[n],-1)):r.push(t[n]);const s=a.xWs(r,this.axis);return a.Q7R(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Vu(e,t){for(;e<0;)e+=t;return e}Uu.className="Concatenate",a.JFn.registerClass(Uu);class Gu extends Mu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){a.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Yr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Qr(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Qr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Vu(t,e[n].shape.length))):[Vu(this.axes,n.shape.length),Vu(this.axes,r.shape.length)],this.normalize&&(n=wi(n,t[0]),r=wi(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Yr("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.ZSL.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),a.ZSL.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Yr("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return a.DZQ((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=a.tQQ(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=a.tQQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=i[0]===i[1]?a.czq(a.lKK(e,t),i[0]):a.czq(a.lKK(a.mgz(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;o=a.NoW(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=a.r2V(o,t)}return 1===o.shape.length&&(o=a.UG6(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Vu(this.axes,e.length),Vu(this.axes,t.length)],n}computeOutputShape(e){a.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Yr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Gu.className="Dot",a.JFn.registerClass(Gu);class Zu extends Us{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e);return ss((()=>(0,a.WQq)(Xa(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Zu.className="GaussianNoise",a.JFn.registerClass(Zu);class Hu extends Us{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t);const n=_s(e);return this.rate>0&&this.rate<1?ss((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,a.lKK)(n,Xa(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Hu.className="GaussianDropout",a.JFn.registerClass(Hu);class Ku extends Us{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||_s(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,a.DZQ)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ss((()=>{const t=_s(e),r=-1.7580993408473766;let s=(0,a.DQN)((0,a.YeY)(n),this.rate);s=Ga(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate,u=(0,a.WQq)((0,a.lKK)(t,s),(0,a.lKK)((0,a.WQq)(s,-1),r));return(0,a.WQq)((0,a.lKK)(u,i),o)}),(()=>_s(e)),t.training||!1)}return e}))}}function ju(e,t,n,r,s,i=.001){let o;if(2===e.rank)o=a.BFc(e,t,n,r,s,i);else if(3===e.rank)o=a.kSi(e,t,n,r,s,i);else{if(4!==e.rank)throw new Yr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=a.T5N(e,t,n,r,s,i)}return o}Ku.className="AlphaDropout",a.JFn.registerClass(Ku);class qu extends Us{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ns(e.betaInitializer||"zeros"),this.gammaInitializer=Ns(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ns(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ns(e.movingVarianceInitializer||"ones"),this.betaConstraint=oi(e.betaConstraint),this.gammaConstraint=oi(e.gammaConstraint),this.betaRegularizer=Wo(e.betaRegularizer),this.gammaRegularizer=Wo(e.gammaRegularizer)}build(e){e=Es(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Qr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Os({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,a.DZQ)((()=>{const n=null!=t.training&&t.training,r=_s(e),s=r.shape,i=s.length,o=Ba(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const l=ea(1,i);l[u]=s[u];const c=o.slice();c.sort();const d=!a.ZSL.arraysEqual(c,Ba(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=(0,a.tQQ)(this.movingMean.read(),l),t=(0,a.tQQ)(this.movingVariance.read(),l),n=this.center?(0,a.tQQ)(this.beta.read(),l):null,s=this.scale?(0,a.tQQ)(this.gamma.read(),l):null;return ju(r,e,t,n,s,this.epsilon)}return ju(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=function(e,t,n,r,s=.001){return a.ZSL.arraysEqual(r.slice().sort(),Ba(0,e.rank-1))?function(e,t,n,r,s=.001){return(0,a.DZQ)((()=>{const i=a.Clk(e,r),o=i.mean,u=i.variance;return[ju(e,o,u,n,t,s),o,u]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return(0,a.DZQ)((()=>{const i=a.Clk(e,r),o=i.mean,u=i.variance,l=[];for(const t of Ba(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const c=(0,a.tQQ)(o,l),d=(0,a.tQQ)(u,l),h=null==t?null:(0,a.tQQ)(t,l),p=null==n?null:(0,a.tQQ)(n,l);return[ju(e,c,d,p,h,s),o,u]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{a.DZQ((()=>{const r=1-n,s=e.read(),i=a.lKK(a.jbE(s,t),r);e.write(a.jbE(s,i))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cs(this.betaInitializer),gammaInitializer:Cs(this.gammaInitializer),movingMeanInitializer:Cs(this.movingMeanInitializer),movingVarianceInitializer:Cs(this.movingVarianceInitializer),betaRegularizer:zo(this.betaRegularizer),gammaRegularizer:zo(this.gammaRegularizer),betaConstraint:si(this.betaConstraint),gammaConstraint:si(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}qu.className="BatchNormalization",a.JFn.registerClass(qu);class Qu extends Us{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ns(e.betaInitializer||"zeros"),this.gammaInitializer=Ns(e.gammaInitializer||"ones"),this.betaRegularizer=Wo(e.betaRegularizer),this.gammaRegularizer=Wo(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Es(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==ha(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=_s(e),r=n.shape,s=r.length;return(0,a.DZQ)((()=>{let{mean:e,variance:t}=(0,a.Clk)(n,this.axis,!0);const i=ea(1,s);for(const e of this.axis)i[e]=r[e];const o=e=>null!=e&&e.shape.length!==s?a.tQQ(e,i):e;let u=this.scale?o(this.gamma.read()):null,l=this.center?o(this.beta.read()):null;const c=[],d=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(c.push(r[e]),d.push(1)):(c.push(1),d.push(r[e]));return e=a.Vsq(e,c),t=a.Vsq(t,c),null!=u&&(u=a.Vsq(u,d)),null!=l&&(l=a.Vsq(l,d)),ju(n,e,t,l,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cs(this.betaInitializer),gammaInitializer:Cs(this.gammaInitializer),betaRegularizer:zo(this.betaRegularizer),gammaRegularizer:zo(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Qu.className="LayerNormalization",a.JFn.registerClass(Qu);class Yu extends Us{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Qr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Qr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Qr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Os({ndim:4})]}computeOutputShape(e){let t,n;return e=Es(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,a.DZQ)((()=>{return t=_s(e),n=this.padding,r=this.dataFormat,(0,a.DZQ)((()=>{if(4!==t.rank)throw new Qr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Qr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Qr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.eVF(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Xu(e,t,n,r,s,i){return(0,a.DZQ)((()=>{let o;$a(s),Ea(i),_a(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Qo(e,s);const u="same"===r?"same":"valid";return o="max"===i?a.jgi(e,t,n,u):a.$jT(e,t,n,u),"channelsFirst"===s&&(o=a.mgz(o,[0,3,1,2])),o}))}function Ju(e,t,n,r,s,i){return(0,a.DZQ)((()=>{let o;$a(s),Ea(i),_a(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Yo(e,s);const u="same"===r?"same":"valid";return o="max"===i?a.NYV(e,t,n,u):a.sub(e,t,n,u),"channelsFirst"===s&&(o=a.mgz(o,[0,4,1,2,3])),o}))}Yu.className="ZeroPadding2D",a.JFn.registerClass(Yu);class el extends Us{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Qr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ga(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Qr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ga(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,_a(this.padding),this.inputSpec=[new Os({ndim:3})]}computeOutputShape(e){const t=jo((e=Es(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,a.DZQ)((()=>{this.invokeCallHook(e,t),e=Za(_s(e),2);const n=this.poolingFunction(_s(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.r2V(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class tl extends el{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $a(a),_a(r),Xu(e,t,n,r,a,"max")}}tl.className="MaxPooling1D",a.JFn.registerClass(tl);class nl extends el{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $a(a),_a(r),Xu(e,t,n,r,a,"avg")}}nl.className="AveragePooling1D",a.JFn.registerClass(nl);class rl extends Us{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Qr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ga(this.poolSize,"poolSize"),ga(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$a(this.dataFormat),_a(this.padding),this.inputSpec=[new Os({ndim:4})]}computeOutputShape(e){e=Es(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=jo(t,this.poolSize[0],this.padding,this.strides[0]),n=jo(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,a.DZQ)((()=>(this.invokeCallHook(e,t),this.poolingFunction(_s(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class al extends rl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $a(a),_a(r),Xu(e,t,n,r,a,"max")}}al.className="MaxPooling2D",a.JFn.registerClass(al);class sl extends rl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $a(a),_a(r),Xu(e,t,n,r,a,"avg")}}sl.className="AveragePooling2D",a.JFn.registerClass(sl);class il extends Us{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Qr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ga(this.poolSize,"poolSize"),ga(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$a(this.dataFormat),_a(this.padding),this.inputSpec=[new Os({ndim:5})]}computeOutputShape(e){e=Es(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=jo(t,this.poolSize[0],this.padding,this.strides[0]),n=jo(n,this.poolSize[1],this.padding,this.strides[1]),r=jo(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,a.DZQ)((()=>(this.invokeCallHook(e,t),this.poolingFunction(_s(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ol extends il{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $a(a),_a(r),Ju(e,t,n,r,a,"max")}}ol.className="MaxPooling3D",a.JFn.registerClass(ol);class ul extends il{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $a(a),_a(r),Ju(e,t,n,r,a,"avg")}}ul.className="AveragePooling3D",a.JFn.registerClass(ul);class ll extends Us{constructor(e){super(e),this.inputSpec=[new Os({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Yr}}class cl extends ll{constructor(e){super(e||{})}call(e,t){return(0,a.DZQ)((()=>{const t=_s(e);return a.i2o(t,1)}))}}cl.className="GlobalAveragePooling1D",a.JFn.registerClass(cl);class dl extends ll{constructor(e){super(e||{})}call(e,t){return(0,a.DZQ)((()=>{const t=_s(e);return a.T9B(t,1)}))}}dl.className="GlobalMaxPooling1D",a.JFn.registerClass(dl);class hl extends Us{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$a(this.dataFormat),this.inputSpec=[new Os({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Yr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pl extends hl{call(e,t){return(0,a.DZQ)((()=>{const t=_s(e);return"channelsLast"===this.dataFormat?a.i2o(t,[1,2]):a.i2o(t,[2,3])}))}}pl.className="GlobalAveragePooling2D",a.JFn.registerClass(pl);class fl extends hl{call(e,t){return(0,a.DZQ)((()=>{const t=_s(e);return"channelsLast"===this.dataFormat?a.T9B(t,[1,2]):a.T9B(t,[2,3])}))}}fl.className="GlobalMaxPooling2D",a.JFn.registerClass(fl);class ml extends Us{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=xi(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class gl extends ml{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Es(e)).length<3)throw new Qr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Es(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,a.DZQ)((()=>hu(((e,n)=>[_s(this.layer.call(e,t)),[]]),e=_s(e),[],!1,null,null,!1,!0)[1]))}}gl.className="TimeDistributed",a.JFn.registerClass(gl);class bl extends ml{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xi(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=xi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,fa(Na,"BidirectionalMergeMode",a),e.weights)throw new Yr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ra(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=du(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Qr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Os({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Yr("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof zs;for(const e of s)if(e instanceof zs!==o)throw new Qr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,a.DZQ)((()=>{const n=t.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=a.BEg(s,1)),"concat"===this.mergeMode?o=qa([r,s]):"sum"===this.mergeMode?o=a.WQq(r,s):"ave"===this.mergeMode?o=a.lKK(.5,a.WQq(r,s)):"mul"===this.mergeMode?o=a.lKK(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Fa(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Fa(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xi(t.layer);if(delete t.layer,null!=t.numConstants)throw new Yr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}bl.className="Bidirectional",a.JFn.registerClass(bl);class yl extends Us{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,a.DZQ)((()=>("float32"!==(e=_s(e)).dtype&&(e=Ga(e,"float32")),(0,a.WQq)((0,a.lKK)(e,this.scale),this.offset))))}}yl.className="Rescaling",a.JFn.registerClass(yl);const{resizeBilinear:xl,cropAndResize:wl}=a.Slp;class vl extends Us{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,i,o,u){return(0,a.DZQ)((()=>{let l,c=!1;const d=[t/i,n/o,(r+t)/i,(s+n)/o],h=[];3===e.rank?(c=!0,l=(0,a.t$z)([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(d);const p=(0,a.OEK)(h,[h.length,4]),f=(0,a.y17)(0,h.length,1,"int32"),m=wl(l,p,f,[r,s],"nearest");return Ga(c?_s((0,a.K$i)(m)):m,u)}))}upsize(e,t,n,r){return(0,a.DZQ)((()=>Ga(xl(e,[t,n]),r)))}call(e,t){return(0,a.DZQ)((()=>{const t=_s(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2];let i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Es(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}vl.className="CenterCrop",a.JFn.registerClass(vl);class kl extends Us{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Es(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,a.DZQ)((()=>{let n;if("int32"!==(e=_s(e)).dtype&&(e=Ga(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Qr(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=_s(t.countWeights)}const r=(0,a.T9B)(e),s=(0,a.jkA)(e),i=(0,a.rhj)(this.numTokens,r).bufferSync().get(0),o=(0,a.DQN)(s,0).bufferSync().get(0);if(!i||!o)throw new Qr(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=_s(e);if("int32"!==s.dtype&&(s=Ga(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=(0,a.UG6)(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=(0,a.UG6)(s,-1)),s.rank>2)throw new Qr(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const o=["multiHot","oneHot"].includes(t),u=s;let l;if(l=void 0!==r&&"count"===t?(0,a.aOp)(u,r,n,o):(0,a.aOp)(u,[],n,o),"tfIdf"!==t)return l;if(r)return(0,a.lKK)(l,r);throw new Qr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}kl.className="CategoryEncoding",a.JFn.registerClass(kl);const Sl=new Set(["bilinear","nearest"]);class Il extends Us{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Sl.has(e.interpolation))throw new Qr(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Es(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,a.DZQ)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return a.Slp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return a.Slp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Sl]} are supported`)}))}}Il.className="Resizing",a.JFn.registerClass(Il);class Tl{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Tl.className="RandomSeed";class Cl extends Us{constructor(e){super(e),this.randomGenerator=new Tl(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Cl.className="BaseRandomLayer";const Nl=new Set(["bilinear","nearest"]);class Al extends Cl{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Qr(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Qr(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Qr(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Nl.has(n))throw new Qr(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Es(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,a.DZQ)((()=>{const t=_s(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,a.YeY)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return a.Slp.resizeBilinear(e,s);case"nearest":return a.Slp.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Nl]} are supported`)}}))}}var $l,_l;Al.className="RandomWidth",a.JFn.registerClass(Al),(0,a._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}($l||($l={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(_l||(_l={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]),n(7084);var El,Rl,Fl=n(7391);function Dl(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(zl(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=Dl(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Ll(e,t=Ol){return Ml(e,t)}function Ml(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(zl(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Ml(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Ol(e){return null===e?null:zl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function zl(e){let t=!1;if(a._K2().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof a.qYS)&&!(e instanceof Promise)&&!t)}function Pl(e){return Dl(e,Wl)}function Wl(e){return e instanceof a.qYS?{value:e.clone(),recurse:!1}:zl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Bl{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Ul extends Bl{constructor(){super(Ul.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Ul.INITIAL_CAPACITY=32;class Vl{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Xl(this,e)}filter(e){return new Ql(this,e)}map(e){return new Yl(this,e)}mapAsync(e){return new Jl(this,e)}serialMapAsync(e){return new Jl(this,e).serial()}flatmap(e){return new tc(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new ql(this,e,t)}columnMajorBatch(e,t=!0,n=Ol){return this.rowMajorBatch(e,t).map((e=>Ll(e,n)))}concatenate(e,t){return new nc(new Gl([this,e]),t)}take(e){return e<0||null==e?this:new jl(this,e)}skip(e){return e<0||null==e?this:new Kl(this,e)}prefetch(e){return new rc(this,e)}shuffle(e,t){return new ac(this,e,t)}serial(){return new Hl(this)}}class Gl extends Vl{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Pl(e),done:!1}}}class Zl extends Vl{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Hl extends Vl{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Kl extends Vl{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.ASo(e.value)}return this.upstream.next()}}class jl extends Vl{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ql extends Vl{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Ql extends Vl{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.ASo(e.value)}}}class Yl extends Vl{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.d_S.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.d_S.getTensorsInContainer(n);for(const e of t)a.d_S.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class Xl extends Vl{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Jl extends Vl{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.d_S.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.d_S.getTensorsInContainer(n);for(const e of t)a.d_S.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class ec extends Vl{constructor(){super(),this.outputQueue=new Ul,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class tc extends ec{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.d_S.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.d_S.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)a.d_S.isTensorInList(e,r)||e.dispose();return!0}}class nc extends Vl{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Rl=El||(El={}))[Rl.FAIL=0]="FAIL",Rl[Rl.SHORTEST=1]="SHORTEST",Rl[Rl.LONGEST=2]="LONGEST";class rc extends Vl{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Bl(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ac extends rc{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Fl.alea(n||a.ZSL.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class sc{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return a.ZSL.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ic((async()=>(await n.iterator()).columnMajorBatch(e,t,oc)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ic((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ic((async()=>(await t.iterator()).filter((t=>a.DZQ((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ic((async()=>(await t.iterator()).map((t=>a.DZQ((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ic((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ic((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ic((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new Zl(a)).take(e),new nc(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ic((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Fl.alea(t||a.ZSL.now().toString());return ic((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ic((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ic(e,t=null){return new class extends sc{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function oc(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof a.qYS||a.ZSL.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof a.qYS?a.t$z(e):a.OEK(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}sc.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");var uc=n(7870);const lc=a.kpo.YO;class cc extends a.uI_{nextDataId(){return cc.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.GJx(this,(0,a.Hi9)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,a._K2)().get("IS_NODE")&&a.C0T.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.ZSL.isString(n[0])){const s=n.map((e=>a.ZSL.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return a.C0T.mergeRealAndImagArrays(e,t)}return a.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>a.ZSL.decodeString(e)));return(0,a.ra8)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.ra8)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,a.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=a.ZSL.now();return e(),{kernelMs:a.ZSL.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,uc.C)([e],"where");const t=this.readSync(e.dataId);return lc(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function dc(e){return(t,n,r)=>{const s=a.ZSL.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function hc(e,t,n){return pc(e,dc(t),n)}function pc(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;(0,uc.C)(o,e);const u=i,l=u.data.get(o.dataId).values;let c;if("string"===o.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=a.C0T.fromUint8ToStringArray(l)}else c=l;const d=n||o.dtype,h=t(c,d,s);return u.makeTensorInfo(o.shape,d,h)}}cc.nextDataId=0,(0,a.gJX)("cpu",(()=>new cc),1);const fc=hc(a.Pah,(e=>e>=0?e:Math.exp(e)-1)),mc={kernelName:a.Pah,backendName:"cpu",kernelFunc:fc};function gc(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const bc={kernelName:a.lzr,backendName:"cpu",kernelFunc:gc};function yc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;(0,uc.C)([s],"leakyRelu");const o=a.ZSL.sizeFromShape(s.shape),u=n.data.get(s.dataId).values,l=a.ZSL.getTypedArrayFromDType("float32",o);for(let e=0;e<u.length;e++)l[e]=u[e]<0?i*u[e]:u[e];return n.makeTensorInfo(s.shape,"float32",l)}const xc={kernelName:a.X0$,backendName:"cpu",kernelFunc:yc};function wc(e){return(t,n,r,s,i)=>{const o=a.C0T.assertAndGetBroadcastShape(t,n),u=o.length,l=a.ZSL.computeStrides(o),c=a.ZSL.sizeFromShape(o),d=a.ZSL.getTypedArrayFromDType(i,c),h=t.length,p=n.length,f=a.ZSL.computeStrides(t),m=a.ZSL.computeStrides(n),g=a.C0T.getBroadcastDims(t,o),b=a.C0T.getBroadcastDims(n,o);if(g.length+b.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=a.ZSL.indexToLoc(t,u,l),i=n.slice(-h);g.forEach((e=>i[e]=0));const o=a.ZSL.locToIndex(i,h,f),c=n.slice(-p);b.forEach((e=>c[e]=0));const y=a.ZSL.locToIndex(c,p,m);d[t]=e(r[o],s[y])}return[d,o]}}const vc=wc(((e,t)=>e<0?t*e:e));function kc(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;(0,uc.C)([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=vc(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Sc={kernelName:a.Ncv,backendName:"cpu",kernelFunc:kc},Ic=hc(a.fUj,(e=>Math.max(0,e))),Tc={kernelName:a.fUj,backendName:"cpu",kernelFunc:Ic},Cc=hc(a.P_L,(e=>Math.min(Math.max(0,e),6))),Nc={kernelName:a.P_L,backendName:"cpu",kernelFunc:Cc},Ac=dc((e=>1/(1+Math.exp(-e)))),$c=hc(a.vI1,(e=>1/(1+Math.exp(-e)))),_c={kernelName:a.vI1,backendName:"cpu",kernelFunc:$c};function Ec(e,t,n,r,a){if("linear"===n)return gc({inputs:{x:t},backend:e});if("relu"===n)return Ic({inputs:{x:t},backend:e});if("elu"===n)return fc({inputs:{x:t},backend:e});if("relu6"===n)return Cc({inputs:{x:t},backend:e});if("prelu"===n)return kc({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return yc({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return $c({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Rc(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Fc={kernelName:a.pr3,backendName:"cpu",kernelFunc:Rc};function Dc(e,t,n="float32"){if("complex64"===n)return Rc({inputs:{real:Dc(e,t,"float32"),imag:Dc(e,t,"float32")},backend:e});const r=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Lc(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Mc={kernelName:a.LRy,backendName:"cpu",kernelFunc:Lc};function Oc(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=a.ZSL.toTypedArray([0],n),[s,i]=wc(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function zc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return gc({inputs:{x:s},backend:n});const e=Dc(n,s.shape,s.dtype),t=zc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Rc({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Lc({inputs:{input:s},backend:n}),t=zc({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!a.ZSL.hasEncodingLoss(s.dtype,i)){const e=gc({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const o=n.data.get(s.dataId).values,[u,l,c]=Oc(o,s.shape,s.dtype,i);return n.makeTensorInfo(u,l,c)}const Pc={kernelName:a.KXH,backendName:"cpu",kernelFunc:zc};function Wc(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:o}=n,u=s;(0,uc.C)([i,o],e);const l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,d="string"===i.dtype?a.C0T.fromUint8ToStringArray(l):l,h="string"===i.dtype?a.C0T.fromUint8ToStringArray(c):c,p=r||i.dtype,[f,m]=t(i.shape,o.shape,d,h,p);return u.makeTensorInfo(m,p,f)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=zc({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=zc({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(y,"float32",g),w=o.makeTensorInfo(y,"float32",b),v=Rc({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function Bc(e){return(t,n,r,s,i,o)=>{const u=a.C0T.assertAndGetBroadcastShape(t,n),l=a.ZSL.sizeFromShape(u),c=u.length,d=a.ZSL.computeStrides(u),h=a.ZSL.getTypedArrayFromDType("float32",l),p=a.ZSL.getTypedArrayFromDType("float32",l),f=a.C0T.getBroadcastDims(t,u),m=a.C0T.getBroadcastDims(n,u),g=a.C0T.mergeRealAndImagArrays(r,s),b=a.C0T.mergeRealAndImagArrays(i,o),y=t.length,x=a.ZSL.computeStrides(t),w=n.length,v=a.ZSL.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%b.length,a=e(g[2*n],g[2*n+1],b[2*r],b[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=a.ZSL.indexToLoc(t,c,d),r=n.slice(-y);f.forEach((e=>r[e]=0));const s=a.ZSL.locToIndex(r,y,x),i=n.slice(-w);m.forEach((e=>i[e]=0));const o=a.ZSL.locToIndex(i,w,v),u=e(g[2*s],g[2*s+1],b[2*o],b[2*o+1]);h[t]=u.real,p[t]=u.imag}return[h,p,u]}}const Uc=wc(((e,t)=>e+t)),Vc=Bc(((e,t,n,r)=>({real:e+n,imag:t+r}))),Gc=Wc(a.OMN,Uc,Vc),Zc={kernelName:a.OMN,backendName:"cpu",kernelFunc:Gc};function Hc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,o=a.ZSL.sizeFromShape(s.shape),u=a.ZSL.inferFromImplicitShape(i,o),l=a.ZSL.sizeFromShape(u);a.ZSL.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const Kc={kernelName:a.R23,backendName:"cpu",kernelFunc:Hc};function jc(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:o,transposeB:u}=r;(0,uc.C)([s,i],"matMul");const l=s.shape.length,c=i.shape.length,d=o?s.shape[l-2]:s.shape[l-1],h=u?i.shape[c-1]:i.shape[c-2],p=o?s.shape[l-1]:s.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),b=a.ZSL.sizeFromShape(m),y=a.ZSL.sizeFromShape(g),x=a.ZEY.assertAndGetBroadcastShape(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,f]);a.ZSL.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const w=u?[y,f,h]:[y,h,f],v=Hc({inputs:{x:s},backend:n,attrs:{shape:o?[b,d,p]:[b,p,d]}}),k=Hc({inputs:{x:i},backend:n,attrs:{shape:w}}),S=o?v.shape[1]:v.shape[2],I=o?v.shape[2]:v.shape[1],T=u?k.shape[1]:k.shape[2],C=Math.max(b,y),N=n.data.get(v.dataId).values,A=n.data.get(k.dataId).values,$=a.ZSL.computeStrides(v.shape),_=a.ZSL.computeStrides(k.shape),[E,R,F]=o?[$[0],1,$[1]]:[$[0],$[1],1],[D,L,M]=u?[1,_[1],_[0]]:[_[1],1,_[0]],O=I*T,z=(0,a.ra8)([C,I,T],v.dtype),P=z.values,W=n.blockSize;for(let e=0;e<C;e++){const t=e%b,n=e%y;for(let r=0;r<I;r+=W){const a=Math.min(r+W,I);for(let s=0;s<T;s+=W){const i=Math.min(s+W,T);for(let o=0;o<S;o+=W){const u=Math.min(o+W,S);for(let l=r;l<a;l++)for(let r=s;r<i;r++){let a=0;for(let e=o;e<u;e++)a+=N[t*E+l*R+e*F]*A[e*D+r*L+n*M];P[e*O+(l*T+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}const qc={kernelName:a.jAQ,backendName:"cpu",kernelFunc:jc},Qc={kernelName:a.Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=jc({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=Gc({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=Ec(n,h,c,o,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};function Yc(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Xc={kernelName:a.ljI,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,uc.C)(t,"abs");let r=new Float32Array(a.ZSL.sizeFromShape(t.shape));return r=Yc(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Jc=hc(a.Vvy,(e=>Math.acos(e))),ed={kernelName:a.Vvy,backendName:"cpu",kernelFunc:Jc},td=hc(a.PH8,(e=>Math.acosh(e))),nd={kernelName:a.PH8,backendName:"cpu",kernelFunc:td},rd={kernelName:a.EkD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;(0,uc.C)(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=(0,a.ra8)(r[0].shape,r[0].dtype),o=i.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function ad(e,t,n,r,s){const i=t.length,o=a.ZSL.sizeFromShape(t),u=a.ZSL.computeStrides(t),l=a.ZSL.computeStrides(s),c=a.ZSL.getTypedArrayFromDType(n,a.ZSL.sizeFromShape(s));for(let t=0;t<o;++t){const n=a.ZSL.indexToLoc(t,i,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];c[a.ZSL.locToIndex(s,i,l)]=e[t]}return c}function sd(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;(0,uc.C)(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=ad(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const id={kernelName:a.wx0,backendName:"cpu",kernelFunc:sd},od={kernelName:a.u8Z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;(0,uc.C)(s,"all");const u=a.ZSL.parseAxisParam(i,s.shape);let l=u;const c=a.C0T.getAxesPermutation(l,s.shape.length);let d=s;null!=c&&(d=sd({inputs:{x:s},backend:n,attrs:{perm:c}}),l=a.C0T.getInnerMostAxes(l.length,s.shape.length)),a.C0T.assertAxesAreInnerMostDims("all",l,d.shape.length);const[h,p]=a.C0T.computeOutAndReduceShapes(d.shape,l),f=a.ZSL.sizeFromShape(p),m=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n&&r}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(o){const e=Hc({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ud={kernelName:a.FSt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;(0,uc.C)(s,"any");const u=a.ZSL.parseAxisParam(i,s.shape);let l=u;const c=a.C0T.getAxesPermutation(l,s.shape.length);let d=s;null!=c&&(d=sd({inputs:{x:s},backend:n,attrs:{perm:c}}),l=a.C0T.getInnerMostAxes(l.length,s.shape.length)),a.C0T.assertAxesAreInnerMostDims("any",l,d.shape.length);const[h,p]=a.C0T.computeOutAndReduceShapes(d.shape,l),f=a.ZSL.sizeFromShape(p),m=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n||r}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(o){const e=Hc({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ld={kernelName:a.Jp_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;(0,uc.C)(s,"argMax");let o=a.ZSL.parseAxisParam(i,s.shape);const u=a.C0T.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=sd({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=a.C0T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],a.C0T.assertAxesAreInnerMostDims("argMax",o,l.shape.length);const[d,h]=a.C0T.computeOutAndReduceShapes(l.shape,o),p=a.ZSL.sizeFromShape(d),f=a.ZSL.makeZerosTypedArray(p,"int32"),m=a.ZSL.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const a=g[t+e];a>n&&(n=a,r=e)}f[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},cd={kernelName:a.p_m,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;(0,uc.C)(s,"argMin");let o=a.ZSL.parseAxisParam(i,s.shape);const u=a.C0T.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=sd({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=a.C0T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],a.C0T.assertAxesAreInnerMostDims("argMin",o,l.shape.length);const[d,h]=a.C0T.computeOutAndReduceShapes(l.shape,o),p=a.ZSL.sizeFromShape(d),f=a.ZSL.makeZerosTypedArray(p,"int32"),m=a.ZSL.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const a=g[t+e];a<n&&(n=a,r=e)}f[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},dd=hc(a.QKF,(e=>Math.asin(e))),hd={kernelName:a.QKF,backendName:"cpu",kernelFunc:dd},pd=hc(a.epO,(e=>Math.asinh(e))),fd={kernelName:a.epO,backendName:"cpu",kernelFunc:pd},md=hc(a.TyE,(e=>Math.atan(e))),gd={kernelName:a.TyE,backendName:"cpu",kernelFunc:md},bd=wc(((e,t)=>Math.atan2(e,t))),yd=Wc(a.lxb,bd),xd={kernelName:a.lxb,backendName:"cpu",kernelFunc:yd},wd=hc(a.zP9,(e=>Math.atanh(e))),vd={kernelName:a.zP9,backendName:"cpu",kernelFunc:wd};function kd(e,t,n,r,s,i){const o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,a.ra8)(s.outShape,n),b=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],w=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,a=t*r[0];for(let t=0;t<s.inChannels;++t)for(let g=0;g<s.outHeight;++g){const y=g*o-p,v=Math.max(0,y),k=Math.min(s.inHeight,d+y),S=n+g*x;for(let n=0;n<s.outWidth;++n){const o=n*u-f,d=Math.max(0,o),p=Math.min(s.inWidth,h+o);let g=m,y=0,x=0;for(let n=v;n<k;n+=l){const s=a+n*r[1];for(let n=d;n<p;n+=c){const a=e[s+n*r[2]+t];"max"===i&&a>g?g=a:"avg"===i&&(y+=a,x++)}if(isNaN(g))break}b[S+n*w+t]="avg"===i?y/x:g}}}return g}function Sd(e,t,n,r,s=!1,i=!1){const o=(0,a.ra8)(r.outShape,"int32"),u=r.strideHeight,l=r.strideWidth,c=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=(0,a.ra8)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const a=n*u-f;let b=a;for(;b<0;)b+=c;const y=Math.min(r.inHeight,h+a);for(let u=0;u<r.outWidth;++u){const h=u*l-m;let f=h;for(;f<0;)f+=d;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=c){const o=n-a;for(let a=f;a<x;a+=d){const u=a-h,l=g.get(e,n,a,t);l>w&&(w=l,v=s?i?((e*r.inHeight+n)*r.inWidth+a)*r.inChannels+t:(n*r.inWidth+a)*r.inChannels+t:o*p+u)}}o.set(v,e,n,u,t)}}return o}function Id(e,t,n,r,s,i){const o=s.strideDepth,u=s.strideHeight,l=s.strideWidth,c=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,b=s.padInfo.top,y=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=(0,a.ra8)(s.outShape,n),v=w.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],T=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*k,a=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const k=w*o-g;let C=k;for(;C<0;)C+=c;const N=Math.min(s.inDepth,p+k),A=n+w*S;for(let n=0;n<s.outHeight;++n){const o=n*u-b;let p=o;for(;p<0;)p+=d;const g=Math.min(s.inHeight,f+o),w=A+n*I;for(let n=0;n<s.outWidth;++n){const o=n*l-y;let u=o;for(;u<0;)u+=h;const f=Math.min(s.inWidth,m+o),b=w+n*T;let k=x,S=0,I=0;for(let n=C;n<N;n+=c){const s=a+n*r[1];for(let n=p;n<g;n+=d){const a=s+n*r[2];for(let n=u;n<f;n+=h){const s=e[a+n*r[3]+t];if("max"===i&&s>k?k=s:"avg"===i&&(S+=s,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[b+t]="avg"===i?S/Math.max(I,1):k}}}}return w}const Td={kernelName:a.ho8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,uc.C)(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.C0T.computePool2DInfo(s.shape,i,o,1,u,l);let d;if(1===c.filterWidth&&1===c.filterHeight&&a.ZSL.arraysEqual(c.inShape,c.outShape))d=gc({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.ZSL.computeStrides(s.shape),r=kd(e,s.shape,s.dtype,t,c,"avg");d=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return d}},Cd={kernelName:a.cS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r;(0,uc.C)(s,"avgPool3d");const d=a.C0T.computePool3DInfo(s.shape,i,o,1,u,l,c),h=Id(n.data.get(s.dataId).values,s.shape,s.dtype,a.ZSL.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Nd={kernelName:a.wwC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r;(0,uc.C)([s,i],"avgPool3DGrad");const d=a.C0T.computePool3DInfo(i.shape,o,u,1,l,c),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=d.dilationDepth,x=d.dilationHeight,w=d.dilationWidth,v=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,I=v-1-d.padInfo.front,T=S-1-d.padInfo.left,C=k-1-d.padInfo.top,N=(0,a.ra8)(i.shape,"float32"),A=1/(m*g*b),$=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-I,i=r-C,o=a-T;let u=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(i+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<S;n+=w){const s=(o+n)/f;s<0||s>=d.outWidth||Math.floor(s)!==s||(u+=$.get(e,r,a,s,t))}}}N.set(u*A,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Ad={kernelName:a.VCH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i;(0,uc.C)([s,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,d=a.C0T.computePool2DInfo(o.shape,u,l,1,c),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,b=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,v=y-1-d.padInfo.top,k=(0,a.ra8)(o.shape,"float32"),S=1/(f*m),I=n.data.get(s.dataId).values,T=(0,a.ra8)(s.shape,"float32",I);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-v,s=r-w;let i=0;for(let n=0;n<y;n+=g){const r=(a+n)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=b){const a=(s+n)/p;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=T.get(e,r,a,t))}}k.set(i*S,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},$d={kernelName:a.i5R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:o,mean:u,variance:l}=t;a.ZSL.assert(u.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.ZSL.assert(null==o||u.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.ZSL.assert(null==i||u.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,uc.C)([s,u,l,i,o],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=n.data.get(s.dataId).values,h=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),b=m.length,y=f.length,x=p.length,w=h.length;let v=0,k=0,S=0,I=0;for(let e=0;e<d.length;++e)g[e]=m[v++]+(d[e]-h[k++])*f[S++]/Math.sqrt(p[I++]+c),v>=b&&(v=0),k>=w&&(k=0),S>=y&&(S=0),I>=x&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};var _d=n(7906);const Ed={kernelName:a.Ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:o}=r;(0,uc.C)([s],"batchToSpaceND");const u=i.reduce(((e,t)=>e*t)),l=a.C0T.getReshaped(s.shape,i,u),c=a.C0T.getPermuted(l.length,i.length),d=a.C0T.getReshapedPermuted(s.shape,i,u),h=a.C0T.getSliceBeginCoords(o,i.length),p=a.C0T.getSliceSize(d,o,i.length),f=Hc({inputs:{x:s},backend:n,attrs:{shape:l}}),m=sd({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Hc({inputs:{x:m},backend:n,attrs:{shape:d}}),b=(0,_d.di)({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}};function Rd(e,t,n,r,s){const i=a.ZSL.sizeFromShape(r),o=a.ZSL.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=i>0?t[n]:1)}return o}function Fd(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],o=(0,a.ra8)([s,n],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<i;s++){const i=e.get(a,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,a,i):t.size>0?o.set(o.get(a,i)+t.get(a,s),a,i):o.set(o.get(a,i)+1,a,i))}return o}const Dd={kernelName:a.N4F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Rd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},Ld=wc(((e,t)=>e&t)),Md=Wc(a.HNs,Ld),Od={kernelName:a.HNs,backendName:"cpu",kernelFunc:Md},zd={kernelName:a.vj7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=a.C0T.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},Pd=dc((e=>Math.ceil(e))),Wd=pc(a.QDP,Pd),Bd={kernelName:a.QDP,backendName:"cpu",kernelFunc:Wd},Ud=hc(a.vaV,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Vd={kernelName:a.vaV,backendName:"cpu",kernelFunc:Ud},Gd={kernelName:a.$zE,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(a.ZSL.sizeFromShape(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,u=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values;for(let e=0;e<u.length;e++){const t=u[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};var Zd=n(7763);function Hd(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Kd={kernelName:a.dv8,backendName:"cpu",kernelFunc:Hd};function jd(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=a.ZSL.parseAxisParam(s,t[0].shape)[0],o=t.map((e=>e.shape));a.C0T.assertParamsConsistent(o,i);let u=a.C0T.computeOutShape(t.map((e=>e.shape)),i);if(0===a.ZSL.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>a.ZSL.sizeFromShape(e.shape)>0));if(1===l.length)return gc({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>Lc({inputs:{input:e},backend:n}))),t=l.map((e=>Hd({inputs:{input:e},backend:n}))),r=jd({inputs:e,backend:n,attrs:{axis:i}}),a=jd({inputs:t,backend:n,attrs:{axis:i}}),s=Rc({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const c=l.map((e=>{const t=a.ZSL.sizeFromShape(e.shape.slice(i));return Hc({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));u=a.C0T.computeOutShape(c.map((e=>e.shape)),1);const h=1===c[0].shape[0],p=(0,Zd.h)(d,u,t[0].dtype,h),f=a.C0T.computeOutShape(l.map((e=>e.shape)),i),m=n.makeTensorInfo(f,t[0].dtype,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const qd={kernelName:a.$dB,backendName:"cpu",kernelFunc:jd};function Qd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:d}=r;(0,uc.C)([s,i],"conv2d");const h=a.C0T.convertConv2DDataFormat(l),p=a.C0T.computeConv2DInfo(s.shape,i.shape,o,c,u,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,b=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,w="channelsLast"===p.dataFormat,v=new a.ylz(p.outShape,s.dtype),k=a.ZSL.computeStrides(s.shape),S=a.ZSL.computeStrides(i.shape),I=k[0],T=w?k[1]:k[2],C=w?k[2]:1,N=w?1:k[1],A=v.strides[0],$=w?v.strides[1]:v.strides[2],_=w?v.strides[2]:1,E=w?1:v.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,D=v.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*A;for(let e=0;e<p.outHeight;++e){const r=n+e*$,a=e*p.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*S[0],i=t+n*T;for(let e=0;e<p.outWidth;++e){const t=r+e*_,n=e*p.strideWidth-y;for(let e=0;e<m;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const a=i+r*C;let o=s+e*S[1];for(let e=0;e<p.inChannels;++e){const n=R[a+e*N];for(let e=0;e<p.outChannels;++e)D[t+e*E]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const Yd={kernelName:a.p2J,backendName:"cpu",kernelFunc:Qd},Xd={kernelName:a.rFm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:d}=r;(0,uc.C)([s,i],"conv2dBackpropFilter");const h=a.C0T.convertConv2DDataFormat(l),p=a.C0T.computeConv2DInfo(s.shape,d,o,1,u,c,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:b}=p,y="channelsLast"===p.dataFormat,x=new a.ylz(p.filterShape,"float32"),w=p.padInfo.left,v=p.padInfo.top,k=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,I=new a.ylz(s.shape,s.dtype,k),T=new a.ylz(i.shape,i.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/f)),n=Math.min(p.outHeight,(p.inHeight+v-e)/f);for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((w-r)/m)),s=Math.min(p.outWidth,(p.inWidth+w-r)/m);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*f-v;for(let e=a;e<s;++e){const n=r+e*m-w;u+=y?I.get(l,t,n,i)*T.get(l,c,e,o):I.get(l,i,t,n)*T.get(l,o,c,e)}}x.set(u,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Jd={kernelName:a.jfg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:d}=r;(0,uc.C)([s,i],"conv2dBackpropInput");const h=a.ZSL.computeStrides(i.shape),p=a.ZSL.computeStrides(s.shape);let f=a.C0T.convertConv2DDataFormat(c);const m=a.C0T.computeConv2DInfo(o,i.shape,u,1,l,d,!1,f),g=new a.ylz(m.inShape,"float32"),b=g.values,y=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[w,v,k]=h,{batchSize:S,filterHeight:I,filterWidth:T,inChannels:C,inHeight:N,inWidth:A,outChannels:$,outHeight:_,outWidth:E,strideHeight:R,strideWidth:F}=m;f=m.dataFormat;const D=I-1-m.padInfo.top,L=T-1-m.padInfo.left,M="channelsLast"===f,O=g.strides[0],z=M?g.strides[1]:g.strides[2],P=M?g.strides[2]:1,W=M?1:g.strides[1],B=p[0],U=M?p[1]:p[2],V=M?p[2]:1,G=M?1:p[1];for(let e=0;e<S;++e)for(let t=0;t<C;++t)for(let n=0;n<N;++n){const r=n-D,a=Math.max(0,Math.ceil(r/R)),s=Math.min(_,(I+r)/R);for(let i=0;i<A;++i){const o=i-L,u=Math.max(0,Math.ceil(o/F)),l=Math.min(E,(T+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*R-r;for(let r=u;r<l;++r){const s=B*e+U*n+V*r,i=w*(I-1-a)+v*(T-1-(r*F-o))+k*t;for(let e=0;e<$;++e)c+=y[s+G*e]*x[i+e]}}b[O*e+z*n+P*i+W*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},eh={kernelName:a.A1h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l}=r;(0,uc.C)([s,i],"conv3d");const c=a.C0T.computeConv3DInfo(s.shape,i.shape,o,l,u),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:b}=c,y=b.front,x=b.left,w=b.top,v=new a.ylz(c.outShape,s.dtype),k=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,I=v.values,T=a.ZSL.computeStrides(s.shape),C=a.ZSL.computeStrides(i.shape);for(let e=0;e<c.batchSize;++e){const t=e*T[0],n=e*v.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*v.strides[1],a=e*c.strideDepth-y;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=c.inDepth)continue;const s=e*C[0],i=t+n*T[1];for(let e=0;e<c.outHeight;++e){const t=r+e*v.strides[2],n=e*c.strideHeight-w;for(let e=0;e<h;++e){const r=n+e*m;if(r<0||r>=c.inHeight)continue;const a=s+e*C[1],o=i+r*T[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-x;for(let e=0;e<p;++e){const t=r+e*g;if(t<0||t>=c.inWidth)continue;const s=a+e*C[2],i=o+t*c.inChannels;let u=s;for(let e=0;e<c.inChannels;++e){const t=k[i+e];for(let e=0;e<c.outChannels;++e)I[n+e]+=t*S[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},th={kernelName:a.iGz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:u,filterShape:l}=r;(0,uc.C)([s,i],"conv3dBackpropFilterV2");const c=a.ZSL.computeStrides(s.shape),d=a.ZSL.computeStrides(i.shape),h=a.C0T.computeConv3DInfo(s.shape,l,o,1,u),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,b=h.filterHeight,y=h.filterWidth,x=new a.ylz(h.filterShape,"float32"),w=x.values,[v,k,S,I]=x.strides,T=n.data.get(i.dataId).values,[C,N,A,$]=d,_=n.data.get(s.dataId).values,[E,R,F,D]=c,L=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((L-e)/p)),n=Math.min(h.outDepth,(h.inDepth+L-e)/p),r=e*v;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((O-a)/f)),i=Math.min(h.outHeight,(h.inHeight+O-a)/f),o=a*k+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/m)),l=Math.min(h.outWidth,(h.inWidth+M-r)/m),c=r*S+o;for(let o=0;o<h.inChannels;++o){const d=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*E,b=d*C;for(let d=t;d<n;++d){const t=(e+d*p-L)*R+h,n=d*N+b;for(let e=s;e<i;++e){const s=(a+e*f-O)*F+t,i=e*A+n;for(let e=u;e<l;++e){const t=e*$+i;g+=_[(r+e*m-M)*D+s+o]*T[t+c]}}}}w[d+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},nh={kernelName:a.gC7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:o,strides:u,inputShape:l}=r;(0,uc.C)([s],"conv3dBackpropInputV2");const c=a.ZSL.computeStrides(s.shape),d=a.ZSL.computeStrides(i.shape),h=a.C0T.computeConv3DInfo(l,i.shape,u,1,o),p=new a.ylz(h.inShape,"float32"),f=p.values,[m,g,b,y]=p.strides,x=n.data.get(s.dataId).values,[w,v,k,S]=c,I=n.data.get(i.dataId).values,[T,C,N,A]=d,{batchSize:$,filterDepth:_,filterHeight:E,filterWidth:R,inChannels:F,inDepth:D,inHeight:L,inWidth:M,outChannels:O,outDepth:z,outHeight:P,outWidth:W,strideDepth:B,strideHeight:U,strideWidth:V}=h,G=_-1-h.padInfo.front,Z=E-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const r=n-G,a=Math.max(0,Math.ceil(r/B)),s=Math.min(z,(_+r)/B);for(let i=0;i<L;++i){const o=i-Z,u=Math.max(0,Math.ceil(o/U)),l=Math.min(P,(E+o)/U);for(let c=0;c<M;++c){const d=c-H,h=Math.max(0,Math.ceil(d/V)),p=Math.min(W,(R+d)/V);let $=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*U-o;for(let i=h;i<p;++i){const o=w*e+v*n+k*r+S*i,u=T*(_-1-a)+C*(E-1-s)+N*(R-1-(i*V-d))+A*t;for(let e=0;e<O;++e)$+=x[o+e]*I[u+e]}}}f[m*e+g*n+b*i+y*c+t]=$}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},rh=hc(a.Mn0,(e=>Math.cos(e))),ah={kernelName:a.Mn0,backendName:"cpu",kernelFunc:rh},sh=hc(a.MnK,(e=>Math.cosh(e))),ih={kernelName:a.MnK,backendName:"cpu",kernelFunc:sh},oh={kernelName:a.MRQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:o}=t,{cropSize:u,method:l,extrapolationValue:c}=r,[d,h,p,f]=s.shape,m=i.shape[0],[g,b]=u,y=(0,a.ra8)([m,g,b,f],"float32"),x=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,k=a.ZSL.computeStrides(s.shape),S=a.ZSL.computeStrides(y.shape);for(let e=0;e<m;e++){const t=4*e,n=x[t],r=x[t+1],a=x[t+2],s=x[t+3],i=w[e];if(i>=d)continue;const o=g>1?(a-n)*(h-1)/(g-1):0,u=b>1?(s-r)*(p-1)/(b-1):0;for(let t=0;t<g;t++){const d=g>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(d<0||d>h-1)for(let n=0;n<b;n++)for(let r=0;r<f;r++){const a=r+n*S[2]+t*S[1]+e*S[0];y.values[a]=c}else if("bilinear"===l){const n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let l=0;l<b;l++){const d=b>1?r*(p-1)+l*u:.5*(r+s)*(p-1);if(d<0||d>p-1){for(let n=0;n<f;n++){const r=n+l*S[2]+t*S[1]+e*S[0];y.values[r]=c}continue}const h=Math.floor(d),m=Math.ceil(d),g=d-h;for(let r=0;r<f;r++){let s=r+h*k[2]+n*k[1]+i*k[0];const u=v[s];s=r+m*k[2]+n*k[1]+i*k[0];const c=v[s];s=r+h*k[2]+a*k[1]+i*k[0];const d=v[s];s=r+m*k[2]+a*k[1]+i*k[0];const p=u+(c-u)*g,f=d+(v[s]-d)*g;s=r+l*S[2]+t*S[1]+e*S[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<b;++n){const a=b>1?r*(p-1)+n*u:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<f;r++){const a=r+n*S[2]+t*S[1]+e*S[0];y.values[a]=c}continue}const o=Math.round(a),l=Math.round(d);for(let r=0;r<f;r++){const a=r+o*k[2]+l*k[1]+i*k[0],s=r+n*S[2]+t*S[1]+e*S[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},uh={kernelName:a.jj_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:u}=r;(0,uc.C)(s,"cumprod");const l=a.C0T.getAxesPermutation([i],s.shape.length);let c=s;null!=l&&(c=sd({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=a.C0T.getInnerMostAxes(1,s.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=(0,a.TuY)(c.dtype,"int32"),p=a.ZSL.makeOnesTypedArray(a.ZSL.sizeFromShape(c.shape),h),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)p[n]=o?1:f[n];else{const r=g(e,t-1);p[n]=o?f[r]*p[r]:f[n]*p[r]}}const b=n.makeTensorInfo(c.shape,h,p);if(null!=l){const e=sd({inputs:{x:b},backend:n,attrs:{perm:a.C0T.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},lh={kernelName:a.nY8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:u}=r;(0,uc.C)(s,"cumsum");const l=a.C0T.getAxesPermutation([i],s.shape.length);let c=s;null!=l&&(c=sd({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=a.C0T.getInnerMostAxes(1,s.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=(0,a.TuY)(c.dtype,"int32"),p=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(c.shape),h),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)p[n]=o?0:f[n];else{const r=g(e,t-1);p[n]=o?f[r]+p[r]:f[n]+p[r]}}const b=n.makeTensorInfo(c.shape,h,p);if(null!=l){const e=sd({inputs:{x:b},backend:n,attrs:{perm:a.C0T.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},ch={kernelName:a.wNW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=Rd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=Fd(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},dh={kernelName:a.TMz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:o}=r;a.ZSL.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const u=s.shape[0],l=s.shape[1],c=s.shape[2],d=s.shape[3],h=l*i,p=c*i,f=d/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(u*h*p*f);let b=0;for(let e=0;e<u;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<p;++t){const a=Math.floor(t/i),s=(r*i+t%i)*f;for(let t=0;t<f;++t){const r=t+s+d*(a+c*(n+l*e));g[b++]=m[r]}}}return n.makeTensorInfo([u,h,p,f],s.dtype,g)}};function hh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;(0,uc.C)([s,i],"depthwiseConv2DNative");const d=a.ZSL.computeStrides(s.shape),h=a.ZSL.computeStrides(i.shape);let p=l;null==p&&(p=[1,1]),a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const f=a.C0T.computeConv2DInfo(s.shape,i.shape,o,p,u,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=f,w=x.left,v=x.top,k=f.outChannels/f.inChannels,S=new a.ylz(f.outShape,s.dtype),I=n.data.get(s.dataId).values,T=n.data.get(i.dataId).values,C=S.values;for(let e=0;e<f.batchSize;++e){const t=e*d[0],n=e*S.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*S.strides[1],a=e*f.strideHeight-v;for(let e=0;e<m;++e){const n=a+e*b;if(n<0||n>=f.inHeight)continue;const s=e*h[0],i=t+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*S.strides[2],n=e*f.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const a=s+e*h[1],o=i+r*f.inChannels;let u=t,l=a;for(let e=0;e<f.inChannels;++e){const t=I[o+e];for(let e=0;e<k;++e)C[u+e]+=t*T[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const ph={kernelName:a.tGH,backendName:"cpu",kernelFunc:hh},fh={kernelName:a.X$8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:d}=r;(0,uc.C)([s,i],"depthwiseConv2dNativeBackpropFilter");const h=a.C0T.computeConv2DInfo(s.shape,d,o,u,l,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=new a.ylz(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,w=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,k=new a.ylz(s.shape,s.dtype,v),S=n.data.get(i.dataId).values,I=new a.ylz(i.shape,i.dtype,S);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(h.outHeight,(h.inHeight+x-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((y-r)/f)),s=Math.min(h.outWidth,(h.inWidth+y-r)/f);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/w),u=i%w;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=a;e<s;++e){const n=r+e*f-y;l+=k.get(u,t,n,o)*I.get(u,c,e,i)}}b.set(l,e,r,o,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},mh={kernelName:a.nVu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:d}=r;(0,uc.C)([s,i],"depthwiseConv2DNativeBackpropInput");const h=a.ZSL.computeStrides(s.shape),p=a.ZSL.computeStrides(i.shape),f=a.C0T.computeConv2DInfo(d,i.shape,o,u,l,c,!0),m=new a.ylz(f.inShape,"float32"),g=m.values,[b,y,x]=m.strides,w=n.data.get(s.dataId).values,[v,k,S]=h,I=n.data.get(i.dataId).values,[T,C,N]=p,{batchSize:A,filterHeight:$,filterWidth:_,inChannels:E,inHeight:R,inWidth:F,outChannels:D,outHeight:L,outWidth:M,strideHeight:O,strideWidth:z}=f,P=$-1-f.padInfo.top,W=_-1-f.padInfo.left,B=D/E;for(let e=0;e<A;++e)for(let t=0;t<E;++t)for(let n=0;n<R;++n){const r=n-P,a=Math.max(0,Math.ceil(r/O)),s=Math.min(L,($+r)/O);for(let i=0;i<F;++i){const o=i-W,u=Math.max(0,Math.ceil(o/z)),l=Math.min(M,(_+o)/z);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=v*e+k*n+S*r,i=T*($-1-a)+C*(_-1-(r*z-o))+N*t;for(let e=0;e<B;++e)c+=w[s+(t*B+e)]*I[i+e]}}g[b*e+y*n+x*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},gh={kernelName:a.ORI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=a.ZSL.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,o=(0,a.ra8)([s,s],r.dtype),u=o.values;for(let e=0;e<i.length;e++)u[e*s+e]=i[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},bh={kernelName:a.jxD,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=l.data.get(r.dataId).values,d=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:T,dilationWidth:C,outShape:N}=a.C0T.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u),A=a.ZSL.sizeFromShape(N),$=N.length,_=a.ZSL.getArrayFromDType(r.dtype,A);for(let e=0;e<f;++e)for(let t=0;t<y;++t){const n=t*v-w.top;for(let i=0;i<x;++i){const o=i*k-w.left;for(let u=0;u<b;++u){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const i=n+t*T;if(i>=0&&i<m)for(let n=0;n<I;++n){const f=o+n*C;if(f>=0&&f<g){const o=a.ZSL.locToIndex([e,i,f,u],d,a.ZSL.computeStrides(r.shape)),m=a.ZSL.locToIndex([t,n,u],p,a.ZSL.computeStrides(s.shape)),g=c[o]+h[m];g>l&&(l=g)}}}_[a.ZSL.locToIndex([e,t,i,u],$,a.ZSL.computeStrides(N))]=l}}}return{dataId:l.write(a.ZSL.toTypedArray(_,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},yh={kernelName:a.pk0,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,d=a.ZSL.toNestedArray(r.shape,c.data.get(r.dataId).values),h=a.ZSL.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:T,outShape:C}=a.C0T.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",l);a.ZSL.assert(i.rank===C.length,(()=>`Error in ${a.pk0}, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const N=a.ZSL.toNestedArray(C,c.data.get(i.dataId).values),A=a.ZSL.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*w-x.top;for(let r=0;r<y;++r){const a=r*v-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*I;if(r>=0&&r<f)for(let n=0;n<S;++n){const l=a+n*T;if(l>=0&&l<m){const a=d[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}A[o][u][s]+=N[e][t][r][s]}}}return{dataId:c.write(a.ZSL.toTypedArray(A,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},xh={kernelName:a.bP9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,d=a.ZSL.toNestedArray(r.shape,c.data.get(r.dataId).values),h=a.ZSL.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:T,outShape:C}=a.C0T.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",l);a.ZSL.assert(i.rank===C.length,(()=>`Error in ${a.bP9}, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const N=a.ZSL.toNestedArray(C,c.data.get(i.dataId).values),A=a.ZSL.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*w-x.top;for(let r=0;r<y;++r){const a=r*v-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<k;++t){const r=n+t*I;if(r>=0&&r<f)for(let n=0;n<S;++n){const l=a+n*T;if(l>=0&&l<m){const a=d[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}A[e][o][u][s]+=N[e][t][r][s]}}}return{dataId:c.write(a.ZSL.toTypedArray(A,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},wh={kernelName:a.XmO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=s.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,b=new Uint8ClampedArray(p*h*4);for(let e=0;e<h*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===a.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}s.width=p,s.height=h;const y=new ImageData(b,p,h);return d.putImageData(y,0,0),a}},vh=wc(((e,t)=>e*t)),kh=Bc(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Sh=Wc(a.xu7,vh,kh),Ih={kernelName:a.xu7,backendName:"cpu",kernelFunc:Sh};function Th(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;let u;(0,uc.C)(s,"sum"),u="bool"===s.dtype?zc({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):gc({inputs:{x:s},backend:n});const l=u.shape.length,c=a.ZSL.parseAxisParam(i,u.shape),d=a.C0T.getAxesPermutation(c,l);let h=c,p=u;null!=d&&(p=sd({inputs:{x:u},backend:n,attrs:{perm:d}}),h=a.C0T.getInnerMostAxes(h.length,l)),a.C0T.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=a.C0T.computeOutAndReduceShapes(p.shape,h);let g=Dc(n,f,a.C0T.upcastType(p.dtype,"int32"));const b=a.ZSL.sizeFromShape(m),y=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=x[t+e];y[e]=n}if(o){const e=g;g=Hc({inputs:{x:g},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(g.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Ch={kernelName:a.WuN,backendName:"cpu",kernelFunc:Th},Nh={kernelName:a.Qgm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:o,summedDims:u,idDims:l}=a.C0T.decodeEinsumEquation(s,i.length);a.C0T.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:d}=a.C0T.getEinsumComputePath(u,l),h=d.length;let p=null,f=o.length;const m=[];for(let e=0;e<h;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=a.C0T.getEinsumPermutation(f,l[t]);let s;a.C0T.isIdentityPermutation(e)?s=i[t]:(s=sd({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);a.ZSL.arraysEqual(s.shape,o)||(s=Hc({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=Sh({inputs:{a:s,b:p},backend:n}),m.push(p))}e<h-1&&(c[e]>=0&&(p=Th({inputs:{x:p},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},Ah={kernelName:a.rsH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;(0,uc.C)([r,s],"eluGrad");const i=new Float32Array(a.ZSL.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values;for(let e=0;e<o.length;++e){const t=o[e];i[e]=t>=0?u[e]:u[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},$h=wc(((e,t)=>e===t?1:0)),_h=Wc(a.BRl,$h,null,"bool"),Eh={kernelName:a.BRl,backendName:"cpu",kernelFunc:_h},Rh=a.C0T.ERF_P,Fh=a.C0T.ERF_A1,Dh=a.C0T.ERF_A2,Lh=a.C0T.ERF_A3,Mh=a.C0T.ERF_A4,Oh=a.C0T.ERF_A5,zh=hc(a._s9,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Rh*n);return t*(1-((((Oh*r+Mh)*r+Lh)*r+Dh)*r+Fh)*r*Math.exp(-n*n))})),Ph={kernelName:a._s9,backendName:"cpu",kernelFunc:zh},Wh=dc((e=>Math.exp(e))),Bh=pc(a.ox3,Wh,"float32"),Uh={kernelName:a.ox3,backendName:"cpu",kernelFunc:Bh};function Vh(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,o=s.shape.length,u=s.shape.slice();let l=i;return i<0&&(a.ZSL.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),Hc({inputs:{x:s},backend:n,attrs:{shape:u}})}const Gh={kernelName:a.ybN,backendName:"cpu",kernelFunc:Vh},Zh=dc((e=>Math.expm1(e))),Hh=pc(a.ybj,Zh),Kh={kernelName:a.ybj,backendName:"cpu",kernelFunc:Hh},jh=wc(((e,t)=>e/t)),qh=Wc(a.sDr,jh),Qh={kernelName:a.sDr,backendName:"cpu",kernelFunc:qh},Yh=wc(((e,t)=>e-t)),Xh=Bc(((e,t,n,r)=>({real:e-n,imag:t-r}))),Jh=Wc(a.PbM,Yh,Xh),ep={kernelName:a.PbM,backendName:"cpu",kernelFunc:Jh};function tp(e,t,n){const r=e.shape,s=r[0],i=r[1],o=n.data.get(e.dataId),u=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[s,i],d=a.ZSL.sizeFromShape(c),h=a.ZSL.getTypedArrayFromDType("float32",d),p=a.ZSL.getTypedArrayFromDType("float32",d);for(let e=0;e<s;e++){const r=(0,_d.di)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=(0,_d.di)({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),o=Rc({inputs:{real:r,imag:s},backend:n}),{real:c,imag:d}=np(o,t,n),f=a.C0T.mergeRealAndImagArrays(c,d);for(let t=0;t<i;t++){const n=a.C0T.getComplexWithIndex(f,t);h[e*i+t]=n.real,p[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(c,"float32",h),m=n.makeTensorInfo(c,"float32",p),g=Rc({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function np(e,t,n){const r=a.ZSL.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if((u=r)&u-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,o=0;for(let r=0;r<t;r++){const u=a.C0T.exponent(s*r,t,n),l=a.C0T.getComplexWithIndex(e,r);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=t,o/=t),a.C0T.assignToTypedArray(r,i,o,s)}return r}(a.C0T.mergeRealAndImagArrays(i,o),r,t);return a.C0T.splitRealAndImagArrays(e)}{const s=rp(i,o,r,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),i=n.makeTensorInfo([],"float32",a.ZSL.createScalarValue(r,"float32")),o=gc({inputs:{x:i},backend:n}),l=Qh.kernelFunc({inputs:{a:e,b:i},backend:n}),c=Qh.kernelFunc({inputs:{a:t,b:o},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return s}var u}function rp(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=a.C0T.mergeRealAndImagArrays(e,t),o=n/2,u=a.C0T.complexWithEvenIndex(i),l=u.real,c=u.imag,d=[l.length],h=s.makeTensorInfo(d,"float32",l),p=s.makeTensorInfo(d,"float32",c),f=Rc({inputs:{real:h,imag:p},backend:s}),m=a.C0T.complexWithOddIndex(i),g=m.real,b=m.imag,y=[g.length],x=s.makeTensorInfo(y,"float32",g),w=s.makeTensorInfo(y,"float32",b),v=Rc({inputs:{real:x,imag:w},backend:s}),k=rp(l,c,o,r,s),S=k.real,I=k.imag,T=[S.length],C=s.makeTensorInfo(T,"float32",S),N=s.makeTensorInfo(T,"float32",I),A=Rc({inputs:{real:C,imag:N},backend:s}),$=rp(g,b,o,r,s),_=$.real,E=$.imag,R=[_.length],F=s.makeTensorInfo(R,"float32",_),D=s.makeTensorInfo(R,"float32",E),L=Rc({inputs:{real:F,imag:D},backend:s}),M=a.C0T.exponents(n,r),O=[M.real.length],z=s.makeTensorInfo(O,"float32",M.real),P=s.makeTensorInfo(O,"float32",M.imag),W=Rc({inputs:{real:z,imag:P},backend:s}),B=Sh({inputs:{a:W,b:L},backend:s}),U=Gc({inputs:{a:A,b:B},backend:s}),V=Jh({inputs:{a:A,b:B},backend:s}),G=Lc({inputs:{input:U},backend:s}),Z=Lc({inputs:{input:V},backend:s}),H=Hd({inputs:{input:U},backend:s}),K=Hd({inputs:{input:V},backend:s}),j=jd({inputs:[G,Z],backend:s,attrs:{axis:0}}),q=jd({inputs:[H,K],backend:s,attrs:{axis:0}}),Q=s.data.get(j.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),{real:Q,imag:Y}}const ap={kernelName:a.rGP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.ZSL.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=Hc({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),u=tp(o,!1,n),l=Hc({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};function sp(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,o=i||a.ZSL.inferDtype(s),u=a.ZSL.getArrayFromDType(o,a.ZSL.sizeFromShape(r));return function(e,t){e.fill(t)}(u,s),t.makeTensorInfo(r,o,u)}const ip={kernelName:a.SQl,backendName:"cpu",kernelFunc:sp},op={kernelName:a.BxF,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=a.ZSL.getTypedArrayFromDType(r.dtype,a.ZSL.sizeFromShape(r.shape)),[o,u,l,c]=r.shape,d=s.data.get(r.dataId).values;for(let e=0;e<o;e++){const t=e*l*u*c;for(let e=0;e<u;e++){const n=e*(l*c);for(let e=0;e<l;e++){const r=e*c;for(let a=0;a<c;a++){const s=Math.round(l-e-1),o=t+n+r+a;let u=d[o];s>=0&&s<l&&(u=d[t+n+s*c+a]),i[o]=u}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},up=dc((e=>Math.floor(e))),lp=pc(a.ZgB,up),cp={kernelName:a.ZgB,backendName:"cpu",kernelFunc:lp},dp=wc(((e,t)=>Math.floor(e/t))),hp=Wc(a.ElG,dp,null,"int32"),pp={kernelName:a.ElG,backendName:"cpu",kernelFunc:hp},fp={kernelName:a.aAr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Qd({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=Hc({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Gc({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Gc({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=Hc({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Ec(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Ec(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},mp={kernelName:a.T7M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=hh({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=Gc({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Ec(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function gp(e,t,n,r,s,i,o,u,l){const c=(0,a.ra8)([r,i],n);for(let n=0;n<r;n++){const r=[];let a=0;for(let t=0;t<s;t++){const i=e[n*s+t];a+=i*o[t],r.push(i)}if(a<0||a>=l/i)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<i;e++)c.values[n*i+e]=t.get(...t.indexToLoc(a*i+e))}return c}const bp={kernelName:a.O4G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=a.ZSL.sizeFromShape(r.shape),o=s.shape,u=o[o.length-1],[l,c,d,h]=a.C0T.prepareAndValidate(r,s);if(0===c)return n.makeTensorInfo(l,r.dtype,[]);const p=gp(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,c,u,d,h,r.shape,i);return n.makeTensorInfo(l,r.dtype,p.values)}};function yp(e,t,n){const r=(0,a.ra8)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const xp={kernelName:a.mxL,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=r;(0,uc.C)([s,i],"gatherV2");const l=a.ZSL.parseAxisParam(o,s.shape)[0],c=n.data.get(i.dataId).values,d=s.shape[l];for(let e=0;e<c.length;++e){const t=c[e];a.ZSL.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let h=u;null==u&&(h=0);const p=a.ZSL.sizeFromShape(i.shape),f=a.C0T.segment_util.collectGatherOpShapeInfo(s,i,l,h),m=Hc({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Hc({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),b=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],y=n.bufferSync(g),x=yp(n.bufferSync(m),y,b);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,x.dtype,x.values)}},wp=wc(((e,t)=>e>t?1:0)),vp=Wc(a.XhZ,wp,null,"bool"),kp={kernelName:a.XhZ,backendName:"cpu",kernelFunc:vp},Sp=wc(((e,t)=>e>=t?1:0)),Ip=Wc(a.lLS,Sp,null,"bool"),Tp={kernelName:a.lLS,backendName:"cpu",kernelFunc:Ip},Cp={kernelName:a.OAQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.ZSL.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=Hc({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),u=tp(o,!0,n),l=Hc({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}},Np=hc(a.gIW,(e=>Number.isFinite(e)?1:0),"bool"),Ap={kernelName:a.gIW,backendName:"cpu",kernelFunc:Np},$p=hc(a.E3$,(e=>Math.abs(e)===1/0?1:0),"bool"),_p={kernelName:a.E3$,backendName:"cpu",kernelFunc:$p},Ep=hc(a.iPs,(e=>Number.isNaN(e)?1:0),"bool"),Rp={kernelName:a.iPs,backendName:"cpu",kernelFunc:Ep},Fp=wc(((e,t)=>e<t?1:0)),Dp=Wc(a.mIA,Fp,null,"bool"),Lp={kernelName:a.mIA,backendName:"cpu",kernelFunc:Dp},Mp=wc(((e,t)=>e<=t?1:0)),Op=Wc(a.CwD,Mp,null,"bool"),zp={kernelName:a.CwD,backendName:"cpu",kernelFunc:Op};function Pp(e,t,n){const r=(t-e)/(n-1),s=a.ZSL.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const Wp={kernelName:a.mnI,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Pp(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Bp=dc((e=>Math.log(e))),Up=pc(a.tG8,Bp),Vp={kernelName:a.tG8,backendName:"cpu",kernelFunc:Up},Gp=hc(a.Cg$,(e=>Math.log1p(e))),Zp={kernelName:a.Cg$,backendName:"cpu",kernelFunc:Gp},Hp=wc(((e,t)=>e&&t)),Kp=Wc(a.RUm,Hp,null,"bool"),jp={kernelName:a.RUm,backendName:"cpu",kernelFunc:Kp},qp=hc(a.nZd,(e=>e?0:1),"bool"),Qp={kernelName:a.nZd,backendName:"cpu",kernelFunc:qp},Yp=wc(((e,t)=>e||t)),Xp=Wc(a.LXA,Yp,null,"bool"),Jp={kernelName:a.LXA,backendName:"cpu",kernelFunc:Xp},ef={kernelName:a.jM4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=r;(0,uc.C)(s,"LRN");const c=s.shape[3],d=c-1,h=n.data.get(s.dataId).values,p=a.ZSL.sizeFromShape(s.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=m(e),n=h[e]*Math.pow(o+u*t,-l);f[e]=n}return n.makeTensorInfo(s.shape,s.dtype,f)}},tf={kernelName:a.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:o}=t,{depthRadius:u,bias:l,alpha:c,beta:d}=r;(0,uc.C)(o,"LRNGrad");const h=a.ZSL.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,b=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-u),r=e-t+Math.min(p,t+u+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(m[e],2);a=c*a+l;for(let t=n;t<r;t++){let n=-2*c*d*m[t]*g[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=f[e],b[t]+=n}}return n.makeTensorInfo(o.shape,s.dtype,b)}};function nf(e,t,n,r){const s=a.ZSL.getTypedArrayFromDType(r,a.ZSL.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function rf(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=r,u=n;let l=s.shape;const c=l.length,d=a.ZSL.parseAxisParam(i,l);let h=d;const p=a.C0T.getAxesPermutation(h,c);let f=u.data.get(s.dataId).values;if(null!=p){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=ad(f,l,s.dtype,p,e),h=a.C0T.getInnerMostAxes(h.length,c),l=e}(0,uc.C)(s,"max"),a.C0T.assertAxesAreInnerMostDims("max",h,c);const[m,g]=a.C0T.computeOutAndReduceShapes(l,h),b=nf(f,a.ZSL.sizeFromShape(g),m,s.dtype),y=u.write(b,m,s.dtype);let x=m;return o&&(x=a.C0T.expandShapeToKeepDim(m,d)),{dataId:y,shape:x,dtype:s.dtype}}const af={kernelName:a.VAI,backendName:"cpu",kernelFunc:rf},sf=wc(((e,t)=>Math.max(e,t))),of=Wc(a.LDN,sf),uf={kernelName:a.LDN,backendName:"cpu",kernelFunc:of},lf={kernelName:a.t3d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,uc.C)(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.C0T.computePool2DInfo(s.shape,i,o,1,u,l);let d;if(1===c.filterWidth&&1===c.filterHeight&&a.ZSL.arraysEqual(c.inShape,c.outShape))d=gc({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.ZSL.computeStrides(s.shape),r=kd(e,s.shape,s.dtype,t,c,"max");d=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return d}},cf={kernelName:a.ySp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r;(0,uc.C)(s,"maxPool3d");const d=a.C0T.computePool3DInfo(s.shape,i,o,1,u,l,c),h=Id(n.data.get(s.dataId).values,s.shape,s.dtype,a.ZSL.computeStrides(s.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},df={kernelName:a.cHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r;(0,uc.C)([s,i],"maxPool3DGrad");const d=a.C0T.computePool3DInfo(i.shape,o,u,1,l,c),h=function(e,t){const n=(0,a.ra8)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let a=0;a<t.batchSize;++a)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*r-p;let x=y;for(;x<0;)x+=o;const w=Math.min(t.inDepth,c+y);for(let r=0;r<t.outHeight;++r){const c=r*s-f;let p=c;for(;p<0;)p+=u;const v=Math.min(t.inHeight,d+c);for(let s=0;s<t.outWidth;++s){const f=s*i-m;let k=f;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,T=-1;for(let t=x;t<w;t+=o){const n=t-y;for(let r=p;r<v;r+=u){const s=r-c;for(let i=k;i<S;i+=l){const o=i-f,u=e.get(a,t,r,i,g);u>=I&&(I=u,T=n*d*h+s*d+o)}}}n.set(T,a,b,r,s,g)}}}return n}(n.bufferSync(i),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterDepth,w=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=x-1-d.padInfo.front,S=v-1-d.padInfo.left,I=w-1-d.padInfo.top,T=(0,a.ra8)(i.shape,"float32"),C=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-k,i=r-I,o=a-S;let u=0;for(let n=0;n<x;n+=g){const r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<w;a+=b){const s=(i+a)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const l=(o+i)/m;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;const c=x*w*v-1-h.get(e,r,s,l,t)===n*w*v+a*v+i?1:0;0!==c&&(u+=C.get(e,r,s,l,t)*c)}}}T.set(u,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},hf={kernelName:a.RXX,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:o}=t,u=i;(0,uc.C)([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:h}=r,p=a.C0T.computePool2DInfo(u.shape,l,c,1,d,h),f=n.data.get(u.dataId).values,m=(0,a.ra8)(p.outShape,u.dtype,Sd(f,u.shape,u.dtype,p).values),g=p.strideHeight,b=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterHeight,v=p.effectiveFilterWidth,k=v-1-p.padInfo.left,S=w-1-p.padInfo.top,I=(0,a.ra8)(u.shape,"float32"),T=n.data.get(s.dataId).values,C=(0,a.ra8)(s.shape,"float32",T);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-S,s=r-k;let i=0;for(let n=0;n<w;n+=y){const r=(a+n)/g;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=x){const o=(s+a)/b;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=w*v-1-m.get(e,r,o,t)===n*v+a?1:0;0!==u&&(i+=C.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},pf={kernelName:a.TL8,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;(0,uc.C)(r,"MaxPoolWithArgmax");const c=l.data.get(r.dataId).values,d=a.C0T.computePool2DInfo(r.shape,s,i,[1,1],o),[h,p]=function(e,t,n,r,s){const i=kd(e,0,n,a.ZSL.computeStrides(t),s,"max"),o=Sd(e,t,n,s,!0,r);return[i.values,o.values]}(c,r.shape,r.dtype,u,d),f=l.write(h,d.outShape,r.dtype),m=l.write(p,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}},ff={kernelName:a.g5A,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,u=a.ZSL.parseAxisParam(i,s.shape),l=a.C0T.computeOutAndReduceShapes(s.shape,u)[1],c=a.ZSL.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(h);const p=zc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=qh({inputs:{a:p,b:h},backend:n});d.push(f);const m=Th({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},mf={kernelName:a.lNG,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;(0,uc.C)(s,"min");const u=a.ZSL.parseAxisParam(i,s.shape);let l=u;const c=a.C0T.getAxesPermutation(l,s.shape.length);let d=s;null!=c&&(d=sd({inputs:{x:s},backend:n,attrs:{perm:c}}),l=a.C0T.getInnerMostAxes(l.length,s.shape.length)),a.C0T.assertAxesAreInnerMostDims("min",l,d.shape.length);const[h,p]=a.C0T.computeOutAndReduceShapes(d.shape,l),f=a.ZSL.sizeFromShape(p),m=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(o){const e=Hc({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},gf=wc(((e,t)=>Math.min(e,t))),bf=Wc(a.LG0,gf),yf={kernelName:a.LG0,backendName:"cpu",kernelFunc:bf},xf={kernelName:a.x7F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:o}=r;(0,uc.C)(s,"mirrorPad");const u=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+s.shape[t])),d="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=a.ZSL.computeStrides(s.shape),m=a.ZSL.sizeFromShape(u),g=u.length,b=a.ZSL.computeStrides(u),y=a.ZSL.getTypedArrayFromDType(s.dtype,m);for(let e=0;e<m;e++){let t=a.ZSL.indexToLoc(e,g,b);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+d);t=t.map(((e,t)=>e-l[t]));const n=a.ZSL.locToIndex(t,p,f);y[e]=h[n]}return{dataId:n.write(y,u,s.dtype),shape:u,dtype:s.dtype}}},wf=wc(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),vf=Wc(a.BLA,wf),kf={kernelName:a.BLA,backendName:"cpu",kernelFunc:vf};function Sf(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,o=s.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const l=a.ZSL.parseAxisParam([u],s.shape),c=rf({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=a.C0T.expandShapeToKeepDim(c.shape,l),h=Hc({inputs:{x:c},backend:n,attrs:{shape:d}}),p=Jh({inputs:{a:s,b:h},backend:n}),f=Bh({inputs:{x:p},backend:n}),m=Th({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=Hc({inputs:{x:m},backend:n,attrs:{shape:d}}),b=qh({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}const If={kernelName:a.rFG,backendName:"cpu",kernelFunc:Sf},Tf={kernelName:a.WT3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:o,normalized:u}=r;(0,uc.C)(s,"multinomial");const l=u?s:Sf({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[c,i],f=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(p),"int32");for(let e=0;e<c;++e){const t=e*d,n=new Float32Array(d-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Fl.alea(o.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();f[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){f[a+e]=r;break}}}return u||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};function Cf(e,t,n){const r=a.ZSL.createScalarValue(-1,n);return vh([],t,r,e,n)}const Nf={kernelName:a.l0G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,uc.C)(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=Cf(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Af=a.kpo.c7,$f={kernelName:a.SDM,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;(0,uc.C)(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=Af(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},_f=a.kpo.ZS,Ef={kernelName:a.Zl4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;(0,uc.C)(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=_f(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Rf=a.kpo.ut,Ff={kernelName:a.e0f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;(0,uc.C)(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=Rf(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},Df=wc(((e,t)=>e!==t?1:0)),Lf=Wc(a.ylV,Df,null,"bool"),Mf={kernelName:a.ylV,backendName:"cpu",kernelFunc:Lf},Of={kernelName:a.urI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:o,onValue:u,offValue:l}=r;(0,uc.C)(s,"oneHot");const c=a.ZSL.sizeFromShape(s.shape),d=new Float32Array(c*o);d.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<c;++e)h[e]>=0&&h[e]<o&&(d[e*o+h[e]]=u);return n.makeTensorInfo([...s.shape,o],i,d)}};function zf(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Lc({inputs:{input:r},backend:n}),t=zf({inputs:{x:e},backend:n}),a=Hd({inputs:{input:r},backend:n}),s=zf({inputs:{x:a},backend:n}),i=Rc({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return sp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Pf={kernelName:a.xJ3,backendName:"cpu",kernelFunc:zf},Wf={kernelName:a.LWX,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Lc({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Hd({inputs:{input:a},backend:r}),i=zf({inputs:{x:s},backend:r}),o=Rc({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return sp({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Bf(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Vh({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{a.ZSL.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),a.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=jd({inputs:t.map((e=>{const t=Vh({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const Uf={kernelName:a.mM$,backendName:"cpu",kernelFunc:Bf},Vf={kernelName:a.ODT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:o}=r;(0,uc.C)(s,"pad");const u=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),c=n.data.get(s.dataId).values,d=a.ZSL.sizeFromShape(s.shape),h=s.shape.length,p=a.ZSL.computeStrides(s.shape),f=a.ZSL.sizeFromShape(u),m=u.length,g=a.ZSL.computeStrides(u),b=a.ZSL.getTypedArrayFromDType(s.dtype,f);0!==o&&b.fill(o);for(let e=0;e<d;e++){const t=a.ZSL.indexToLoc(e,h,p).map(((e,t)=>e+l[t]));b[a.ZSL.locToIndex(t,m,g)]=c[e]}return{dataId:n.write(b,u,s.dtype),shape:u,dtype:s.dtype}}},Gf=wc(((e,t)=>Math.pow(e,t))),Zf=Wc(a.pyJ,Gf),Hf={kernelName:a.pyJ,backendName:"cpu",kernelFunc:Zf};function Kf(e,t,n,r){const[s,i]=a.C0T.computeOutAndReduceShapes(e,r),o=(0,a.TuY)(t,"int32"),u=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(s),o),l=a.ZSL.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:o}}const jf={kernelName:a.kdj,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;(0,uc.C)(s,"prod");const u=s.shape.length,l=a.ZSL.parseAxisParam(i,s.shape),c=a.C0T.getAxesPermutation(l,u);let d=l,h=s;const p=[];null!=c&&(h=sd({inputs:{x:s},backend:n,attrs:{perm:c}}),p.push(h),d=a.C0T.getInnerMostAxes(d.length,u));const f=n.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=Kf(h.shape,h.dtype,f,d);let y=g;return o&&(y=a.C0T.expandShapeToKeepDim(g,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,b,m)}};function qf(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function Qf(e,t,n,r,s,i,o,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=a.ZSL.indexToLoc(r,t.length,a.ZSL.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(i,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:d,numValues:h}=function(e,t,n,r){const a=[];let s=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-r[i];for(let e=i;e<u;++e)o[a].push(r[e+1]+t)}i=r[i],u=r[u]}u!==i&&(a.push([i,u]),s+=u-i)}return{outSplits:o,valueSlices:a,numValues:s}}(i,o,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=a.ZSL.getArrayFromDType("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(c),f=function(e,t,n,r,s){const i=t.slice();i[0]=s;const o=a.ZSL.getArrayFromDType(n,a.ZSL.sizeFromShape(i)),u=e.length;return function(e,t,n,r,a,s){const i=qf(t,2)[1],o=qf(s,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[u*o+t]=e[n*i+t];++u}}(e,t,r,0===u?0:u/t[0],o,i),[o,i]}(n,r,s,d,h);return[p,f[0],f[1]]}const Yf={kernelName:a.oJ2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,u=a.map((e=>n.data.get(e.dataId).values)),l=a.map((e=>e.shape)),c=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,[h,p,f]=Qf(u,l,c,s.shape,s.dtype,d,i.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},Xf=2147483647;function Jf(e,t,n,r,s,i,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const u=0===t.length,l=0===s.length,c=0===o.length,d=[];u||d.push(t[0]),l||d.push(s[0]),c||d.push(o[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=a.ZSL.getArrayFromDType("int32",h+1);p[0]=0;for(let t=0;t<h;++t){const n=u?e[0]:e[t],a=l?r[0]:r[t],s=c?i[0]:i[t];if(0===s)throw new Error("Requires delta != 0");let o;if(s>0&&a<n||s<0&&a>n)o=0;else if(o=Math.ceil(Math.abs((a-n)/s)),o>Xf)throw new Error(`Requires ((limit - start) / delta) <= ${Xf}`);p[t+1]=p[t]+o}const f=p[h],m=a.ZSL.getArrayFromDType(n,f);let g=0;for(let t=0;t<h;++t){const n=p[t+1]-p[t];let r=u?e[0]:e[t];const a=c?i[0]:i[t];for(let e=0;e<n;++e)m[g++]=r,r+=a}return[p,m]}const em={kernelName:a.CQC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=Jf(i,r.shape,r.dtype,o,a.shape,u,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};var tm=a.C0T.RowPartitionType;class nm{constructor(e,t,n,r,s,i,o,u,l,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=a.C0T.getRowPartitionTypesHelper(c),this.raggedRank=a.C0T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===tm.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===tm.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case tm.VALUE_ROWIDS:return nm.getMaxWidthValueRowID(t);case tm.ROW_SPLITS:return nm.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${tm[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return am(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;a.C0T.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=a.C0T.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let e=0;e<r;++e,i+=t)s.push(i);for(let t=r;t<e;++t)s.push(-1);return a.ZSL.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,s=[];for(let i=0;i<a-1;++i){const a=e[i+1]-e[i];let o=Math.min(r,a),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)s.push(u),u+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];s.push(u);for(let l=1;l<a;++l){const a=e[l];if(a===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case tm.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case tm.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${tm[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case tm.FIRST_DIM_SIZE:return e[0];case tm.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case tm.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${tm[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=am(t,!1),s=a.ZSL.getArrayFromDType(this.valuesDType,a.ZSL.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let o=r.slice();o=o.slice(e+1);const u=a.ZSL.sizeFromShape(o),l=t.length;let c=this.defaultValue;if(c.length!==u&&1!==c.length){const e=this.defaultValueShape;(0,a.DZQ)((()=>{const t=(0,a.tQQ)(c,e),n=(0,a.hOW)(t,o);c=n.dataSync()}))}let d=0,h=0,p=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==p){if(h<p){const e=s.subarray(d*u);rm(i.subarray(h*u),e,(p-h)*u)}if(e>=l){const e=n.length;r=Math.floor(e/u)}if(r>p)if(1===this.defaultValue.length)i.subarray(p*u,r*u).fill(this.defaultValue[0]),p=r;else for(;r>p;)rm(i.slice(p*u),c,u),++p;r<0?(d=e+1,h=p):(d=e,h=p,p=h+1)}else++p}}}function rm(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function am(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function sm(e,t,n,r,a,s,i,o,u,l){return new nm(e,t,n,r,a,s,i,o,u,l).compute()}const im={kernelName:a.mH5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=sm(l,a.shape,c,s.shape,s.dtype,d,i.shape,h,p,u);return n.makeTensorInfo(f,s.dtype,m)}};var om=n(2610);const um={kernelName:a.Q6t,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=(0,om.q)(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},lm=hc(a.huO,(e=>1/e)),cm={kernelName:a.huO,backendName:"cpu",kernelFunc:lm},dm={kernelName:a.hgw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=r;(0,uc.C)(s,"resizeBilinear");const l=a.ZSL.computeStrides(s.shape),[c,d]=u,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,b=new Float32Array(a.ZSL.sizeFromShape([h,c,d,m])),y=[i&&c>1?p-1:p,i&&d>1?f-1:f],x=[i&&c>1?c-1:c,i&&d>1?d-1:d];let w=0;const v=y[0]/x[0],k=y[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<c;t++){let n;n=o?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),i=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(f-1,Math.ceil(t)),c=i+n*l[2],d=u+n*l[2],h=i+s*l[2],p=u+s*l[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[d+e],s=t+(g[h+e]-t)*r,i=s+(n+(g[p+e]-n)*r-s)*a;b[w++]=i}}}return n.makeTensorInfo([h,c,d,m],"float32",b)}},hm={kernelName:a.FCQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:o}=r;(0,uc.C)([i,s],"resizeBilinearGrad");const u=a.ZSL.computeStrides(s.shape),[l,c,d,h]=s.shape,[,p,f]=i.shape,m=new Float32Array(l*c*d*h),g=[o&&p>1?c-1:c,o&&f>1?d-1:d],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],y=g[0]/b[0],x=g[1]/b[1],w=n.data.get(i.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*u[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=t+r*u[1],i=t+a*u[1],o=n-r,l=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,c=1-a,p=s+n*u[2],f=s+r*u[2],g=i+n*u[2],b=i+r*u[2],y=l*c,k=l*a,S=o*c,I=o*a;for(let e=0;e<h;e++){const t=w[v++];m[p+e]+=t*y,m[f+e]+=t*k,m[g+e]+=t*S,m[b+e]+=t*I}}}}return n.makeTensorInfo([l,d,c,h],"float32",m)}},pm={kernelName:a.jOE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=r;(0,uc.C)(s,"resizeNearestNeighbor");const l=a.ZSL.computeStrides(s.shape),[c,d]=u,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,b=new Float32Array(h*c*d*m),y=[i&&c>1?p-1:p,i&&d>1?f-1:f],x=[i&&c>1?c-1:c,i&&d>1?d-1:d],w=y[0]/x[0],v=y[1]/x[1];let k=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<c;e++){const n=o?w*(e+.5):w*e;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<d;e++){const t=o?v*(e+.5):v*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<m;e++){const t=g[r+e];b[k++]=t}}}}return n.makeTensorInfo([h,c,d,m],s.dtype,b)}},fm={kernelName:a.XQy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:o}=r;(0,uc.C)([i,s],"resizeNearestNeighborGrad");const u=a.ZSL.computeStrides(s.shape),l=a.ZSL.computeStrides(i.shape),[c,d,h,p]=s.shape,[,f,m]=i.shape,g=new Float32Array(c*d*h*p),b=n.data.get(i.dataId).values,y=[o&&f>1?d-1:d,o&&m>1?h-1:h],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],w=y[0]/x[0],v=y[1]/x[1],k=1/w,S=1/v,I=2*Math.ceil(k)+2,T=2*Math.ceil(S)+2;for(let e=0;e<c;e++){const t=e*u[0];for(let e=0;e<d;e++){const n=t+e*u[1],r=Math.floor(e*k),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*u[2],i=Math.floor(r*S),c=Math.floor(i-T/2);for(let n=0;n<p;n++){let i=0;for(let s=0;s<I;s++){const u=s+a;if(u<0||u>=f)continue;const p=t+u*l[1],g=u*w;if(e===Math.min(d-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<T;e++){const t=e+c;if(t<0||t>=m)continue;const a=p+t*l[2],s=t*v;r===Math.min(h-1,o?Math.round(s):Math.floor(s))&&(i+=b[a+n])}}g[s+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},mm={kernelName:a.D7i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;(0,uc.C)(s,"reverse");const o=s.shape.length,u=a.ZSL.parseAxisParam(i,s.shape);if(0===o)return gc({inputs:{x:s},backend:n});const l=new a.ylz(s.shape,s.dtype),c=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();u.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(c.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},gm={kernelName:a.BK4,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:o}=t,u=n,l=a.ZSL.getTypedArrayFromDType(r.dtype,a.ZSL.sizeFromShape(r.shape)),[c,d,h,p]=r.shape,[f,m]=a.C0T.getImageCenter(o,d,h),g=Math.sin(s),b=Math.cos(s),y=u.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*h*d*p;for(let e=0;e<d;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let s=0;s<p;s++){const o=[c,e,r,s],u=o[2],x=o[1];let w=(u-f)*b-(x-m)*g,v=(u-f)*g+(x-m)*b;w=Math.round(w+f),v=Math.round(v+m);let k=i;"number"!=typeof i&&(k=3===s?255:i[s]),w>=0&&w<h&&v>=0&&v<d&&(k=y[t+v*(h*p)+w*p+s]),l[t+n+a+s]=k}}}}return{dataId:u.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},bm=hc(a.hVg,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),ym={kernelName:a.hVg,backendName:"cpu",kernelFunc:bm},xm=dc((e=>1/Math.sqrt(e))),wm=pc(a.TOR,xm),vm={kernelName:a.TOR,backendName:"cpu",kernelFunc:wm};function km(e,t,n,r,s,i,o,u,l,c){const d=[r/s,s],h=e.values,p=t.values;if(0===r)return(0,a.ra8)(n,t.dtype);const f=l instanceof a.ylz?l:(0,a.ra8)(d,t.dtype);"string"==typeof l||"number"==typeof l?f.values.fill(l):"boolean"==typeof l&&f.values.fill(+l);for(let e=0;e<i;e++){const a=[];let i=0;for(let t=0;t<o;t++){const n=h[e*o+t];a.push(n),i+=n*u[t]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[i*s+n]+=p[e*s+n]:f.values[i*s+n]=0===t.rank?p[0]:p[e*s+n]}return f}const Sm={kernelName:a.pJc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=a.C0T.calculateShapes(i,s,o),p=km(n.bufferSync(s),n.bufferSync(i),o,h,c,l,u,d,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}};function Im(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function Tm(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const Cm={kernelName:a.uWl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:o}=r,u=function(e,t,n,r,s,i){const o=a.ZSL.getArrayFromDType("int32",n*s);for(let a=0;a<n;++a){const n=e.slice(a*r,(a+1)*r),u=a*s;for(let e=0;e<s;++e)o[u+e]="left"===i?Im(n,t[e+u]):Tm(n,t[e+u])}return o}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",u)}},Nm={kernelName:a.l6P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;(0,uc.C)([r,s,i],"select");const o=r.shape.length,u=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,d=(0,a.TuY)(s.dtype,i.dtype),h=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(s.shape),d);let p=0;const f=0===o||o>1||1===s.shape.length?1:a.ZSL.sizeFromShape(s.shape.slice(1));for(let e=0;e<u.length;e++)for(let t=0;t<f;t++)1===u[e]?h[p++]=l[e]:h[p++]=c[e];return n.makeTensorInfo(s.shape,d,h)}},Am=a.C0T.SELU_SCALEALPHA,$m=a.C0T.SELU_SCALE,_m=hc(a.u$b,(e=>e>=0?$m*e:Am*(Math.exp(e)-1))),Em={kernelName:a.u$b,backendName:"cpu",kernelFunc:_m},Rm=hc(a.YVe,(e=>e<0?-1:e>0?1:0)),Fm={kernelName:a.YVe,backendName:"cpu",kernelFunc:Rm},Dm=hc(a.hql,(e=>Math.sin(e))),Lm={kernelName:a.hql,backendName:"cpu",kernelFunc:Dm},Mm=hc(a.J3C,(e=>Math.sinh(e))),Om={kernelName:a.J3C,backendName:"cpu",kernelFunc:Mm},zm=Math.log(1.1920928955078125e-7)+2,Pm=hc(a.Fin,(e=>{const t=e>-zm,n=e<zm,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Wm={kernelName:a.Fin,backendName:"cpu",kernelFunc:Pm},Bm={kernelName:a.A8B,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:o}=r;(0,uc.C)([s],"spaceToBatchND");const u=a.ZSL.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const c=Vf.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=a.C0T.getReshaped(c.shape,i,u,!1),h=a.C0T.getPermuted(d.length,i.length,!1),p=a.C0T.getReshapedPermuted(c.shape,i,u,!1),f=Hc({inputs:{x:c},backend:n,attrs:{shape:d}}),m=sd({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Hc({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Um(e,t,n,r,s,i,o){const u=t[0],l=i[0],c=new Array(l),d=new Array(u),h=t[1];if(0===l){if(0!==u)throw new Error(a.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[a.ZSL.getArrayFromDType(n,0),[0,h],a.ZSL.getArrayFromDType(s,0),c,d]}let p=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*h];if(n<0)throw new Error(a.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(a.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++m[n],p=p&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&p){const t=e,n=r;for(let e=0;e<u;++e)d[e]=e;return[t,[u,h],n,c,d]}{const t=m[l-1],i=a.ZSL.getArrayFromDType(n,t*h),p=a.ZSL.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*h],a=f[n],s=(0===n?0:m[n-1])+a;f[n]++;for(let n=0;n<h;++n)i[s*h+n]=e[t*h+n];p[s]=r[t],d[t]=s}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;p[t]=o}return[i,[t,h],p,c,d]}}const Vm={kernelName:a.C8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=Um(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function Gm(e,t,n,r,s){const i=a.ZSL.sizeFromShape(r),o=t[0],u=s.length,l=[];let c=1,d=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(a.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(a.C0T.getSparseReshapeNegativeOutputDimErrorMessage(e,t));c*=t,l.push(t)}}if(-1!==d){if(c<=0)throw new Error(a.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/c);if(c*e!==i)throw new Error(a.C0T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(a.ZSL.sizeFromShape(l)!==i)throw new Error(a.C0T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=a.ZSL.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<u;++e)m[t*u+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[o,u],l]}const Zm={kernelName:a.BoJ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,d]=Gm(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function Hm(e,t,n,r,s,i=!1,o=0){const u=r.length,l=[t[0],e.length/t[0]],c=l[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error(a.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=a.ZSL.getArrayFromDType(n,p);if(0===u)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(a.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,y=s[m];for(;;){let t=0;if(g<u){if(t=s[g],y===t){++g;continue}if(y>=t)throw new Error(a.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(a.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>b&&f.fill(o,b*c,y*c);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(a.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<c;t++)f[y*c+t]+=e[n*c+t]}if(i)for(let e=0;e<c;e++)f[y*c+e]/=g-m;if(m=g,++g,b=y+1,y=t,g>u)break}return b<d&&f.fill(o,b*c,d*c),[f,h]}const Km={kernelName:a.L6G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=Hm(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},jm={kernelName:a.DvZ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=Hm(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},qm={kernelName:a.jgd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=a.C0T.calculateShapes(i,s,u),f=!1,m=n.bufferSync(s);let g;switch(i.dtype){case"bool":g=km(m,n.bufferSync(i),u,p,d,c,l,h,Boolean(n.data.get(o.dataId).values[0]),f);break;case"float32":case"int32":g=km(m,n.bufferSync(i),u,p,d,c,l,h,n.data.get(o.dataId).values[0],f);break;case"string":g=km(m,n.bufferSync(i),u,p,d,c,l,h,a.ZSL.decodeString(n.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(u,g.dtype,g.values)}},Qm={kernelName:a.Blb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=r,u=a.ZSL.parseAxisParam(o,s.shape)[0],l=a.C0T.prepareSplitSize(s,i,u),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map((e=>{const t=[...d];t[u]=e;const r=(0,_d.di)({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r}))}},Ym=dc((e=>Math.sqrt(e))),Xm=hc(a.dFH,(e=>Math.sqrt(e))),Jm={kernelName:a.dFH,backendName:"cpu",kernelFunc:Xm},eg={kernelName:a.M6A,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,uc.C)(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},tg=wc(((e,t)=>{const n=e-t;return n*n})),ng=Wc(a.Ddj,tg),rg={kernelName:a.Ddj,backendName:"cpu",kernelFunc:ng},ag=dc(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),sg=pc(a.GZp,ag),ig={kernelName:a.GZp,backendName:"cpu",kernelFunc:sg},og=hc(a.pnw,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),ug={kernelName:a.pnw,backendName:"cpu",kernelFunc:og};function lg(e,t,n,r){const s=(0,a.ra8)(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const cg={kernelName:a.UcO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;(0,uc.C)(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:w,strides:v}=a.Kro.sliceInfo(s.shape,i,o,u,l,c,d,h,p);let k;if(g)k=Hc({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||y){a.ZSL.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=a.Kro.computeOutShape(x,w,v),t=(0,_d.di)({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=Hc({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=lg(f,n.bufferSync(s),v,x);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};var dg=n(3514);const hg={kernelName:a.YAb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=(0,dg.G)(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var pg=n(2948);const fg={kernelName:a.iW0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,d]=(0,pg.S)(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var mg=n(5535);const gg={kernelName:a.$jE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(s.dataId).values,o=(0,mg.f)(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},bg=hc(a.oFs,(e=>Math.tan(e))),yg={kernelName:a.oFs,backendName:"cpu",kernelFunc:bg},xg=hc(a.iuW,(e=>Math.tanh(e))),wg={kernelName:a.iuW,backendName:"cpu",kernelFunc:xg},vg={kernelName:a.X4r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=a.C0T.calculateShapes(i,s,r.shape),h=n.bufferSync(s),p=n.bufferSync(i),f=n.bufferSync(r),m=km(h,p,r.shape,d,l,u,o,c,f,!1);return n.makeTensorInfo(r.shape,m.dtype,m.values)}};function kg(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,a.ra8)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const Sg={kernelName:a.FAs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;(0,uc.C)(a,"tile");const i=kg(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},Ig=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Tg(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);Tg(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const s=e[t];let i=n,o=r;for(a.ZSL.swap(e,n,t),Ig(e[r],s)>0&&a.ZSL.swap(e,n,r);i<o;){for(a.ZSL.swap(e,i,o),i++,o--;Ig(e[i],s)<0;)i+=1;for(;Ig(e[o],s)>0;)o-=1}0===Ig(e[n],s)?a.ZSL.swap(e,n,o):(o+=1,a.ZSL.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function Cg(e,t,n,r,s){const i=t[t.length-1],[o,u]=[e.length/i,i],l=a.ZSL.getTypedArrayFromDType(n,o*r),c=a.ZSL.getTypedArrayFromDType("int32",o*r);for(let t=0;t<o;t++){const n=t*u,a=e.subarray(n,n+u);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Tg(i,r),i=i.slice(0,r)),s&&i.sort(Ig);const o=t*r,d=l.subarray(o,o+r),h=c.subarray(o,o+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const d=t.slice();return d[d.length-1]=r,[(0,a.ra8)(d,n,l),(0,a.ra8)(d,"int32",c)]}const Ng={kernelName:a.TBb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;(0,uc.C)(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=Cg(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Ag={kernelName:a.dLy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=n,[d,h,p,f]=s.shape,[m,g]=null!=c?c:[h,p],b=[d,m,g,f],y=a.ZSL.computeStrides(s.shape),x=y[0],w=y[1],v=y[2],k=a.ZSL.computeStrides(b),S=k[0],I=k[1],T=k[2],C=a.ZSL.getTypedArrayFromDType(s.dtype,a.ZSL.sizeFromShape(b));C.fill(l);const N=r.data.get(s.dataId).values,A=r.data.get(i.dataId).values;for(let e=0;e<d;++e){const t=1===i.shape[0]?A:A.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<g;++r)for(let a=0;a<f;++a){let s;const i=t[6]*r+t[7]*n+1;if(0===i)continue;const c=(t[0]*r+t[1]*n+t[2])/i,d=(t[3]*r+t[4]*n+t[5])/i,f=$g(c,p,u),m=$g(d,h,u);switch(o){case"nearest":s=Eg(N,h,p,x,w,v,e,m,f,a,l);break;case"bilinear":s=Rg(N,h,p,x,w,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}C[e*S+n*I+r*T+a]=s}return r.makeTensorInfo(b,s.dtype,C)}return{dataId:r.write(C,b,s.dtype),shape:s.shape,dtype:s.dtype}}};function $g(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return a.ZSL.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return a.ZSL.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return a.ZSL.clamp(0,e,t-1)}(e,t);default:return e}}function _g(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function Eg(e,t,n,r,a,s,i,o,u,l,c){return _g(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function Rg(e,t,n,r,a,s,i,o,u,l,c){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*_g(e,t,n,r,a,s,i,d,h,l,c)+(u-h)*_g(e,t,n,r,a,s,i,d,f,l,c))+(o-d)*((f-u)*_g(e,t,n,r,a,s,i,p,h,l,c)+(u-h)*_g(e,t,n,r,a,s,i,p,f,l,c))}var Fg=n(2750);const Dg={kernelName:a.EwU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;(0,uc.C)(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,Fg.w)(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},Lg={kernelName:a.dXR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let e=0;e<h.length;e++){c[s]=e;const t=(0,_d.di)({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[e]=Hc({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},Mg={kernelName:a.pPe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:o}=r;(0,uc.C)(s,"unsortedSegmentSum");const u=[],l=[],c=s.shape.length-i.shape.length;let d=i;for(let e=0;e<c;++e){const t=Vh({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<o;++e){const t=a.ZSL.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=_h({inputs:{a:r,b:d},backend:n}),o=zc({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),c=Sh({inputs:{a:o,b:s},backend:n}),h=Th({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});u.push(h),l.push(r),l.push(i),l.push(o),l.push(c),l.push(h)}const h=Bf({inputs:u,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Og=[Qc,Xc,ed,nd,Zc,rd,od,ud,ld,cd,hd,fd,gd,xd,vd,Td,Cd,Nd,Ad,qc,$d,Ed,Dd,Od,zd,Pc,Bd,Vd,Fc,Gd,qd,Yd,Xd,Jd,eh,th,nh,ah,ih,oh,uh,lh,ch,dh,ph,fh,mh,gh,bh,yh,xh,wh,Nh,mc,Ah,Eh,Ph,Uh,Gh,Kh,ap,ip,op,cp,pp,fp,mp,bp,xp,kp,Tp,bc,Cp,Kd,Ap,_p,Rp,xc,Lp,zp,Wp,Vp,Zp,jp,Qp,Jp,ef,tf,af,uf,lf,cf,df,hf,pf,ff,mf,yf,xf,kf,Tf,Ih,Nf,$f,Ef,Ff,Mf,Of,Wf,Uf,Vf,Hf,Sc,jf,Yf,em,im,um,Mc,Qh,cm,Tc,Nc,Kc,dm,hm,pm,fm,mm,gm,ym,vm,Sm,Cm,Nm,Em,_c,Fm,Lm,Om,_d.lv,If,Wm,Bm,Vm,Zm,Km,jm,qm,Qm,Jm,eg,rg,ig,ug,cg,hg,fg,gg,ep,Ch,yg,wg,vg,Sg,Ng,Ag,id,Dg,Lg,Mg,Pf];for(const e of Og)(0,a.tAK)(e);const zg={},Pg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Wg(e,t){if(!(e in zg)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,a._K2)().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete zg[e]}),!1),(0,a._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Pg.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",Pg)||n.getContext("experimental-webgl",Pg):n.getContext("webgl2",Pg)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;zg[e]=n}const n=zg[e];return null==n||n.isContextLost()?(delete zg[e],Wg(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),zg[e])}var Bg,Ug,Vg;function Gg(e,t){return[t,e]}function Zg(e){const t=a.ZSL.sizeFromShape(e),n=Math.ceil(t/4);return a.ZSL.sizeToSquarishShape(n)}function Hg(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Kg(e,t){const n=e;let r,s,i,o,u,l,c,d,h,p;return 2===(0,a._K2)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function jg(e,t){const n=t();return(0,a._K2)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function qg(e){return!!((0,a._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Qg(e,t){return sb(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Bg||(Bg={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Ug||(Ug={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Vg||(Vg={}));const Yg=/ERROR: [0-9]+:([0-9]+):/g;function Xg(e,t){const n=Yg.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,o=s.map(((e,t)=>a.ZSL.rightPad((t+1).toString(),i)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const l=o.slice(0,r-1),c=o.slice(r-1,r),d=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${a.ZSL.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function Jg(e,t){if(jg(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function eb(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),jg(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),jg(e,(()=>e.enableVertexAttribArray(o))),!0)}function tb(e,t,n,r){jg(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),jg(e,(()=>e.activeTexture(e.TEXTURE0+n))),jg(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),jg(e,(()=>e.uniform1i(n,r)))}function nb(e,t,n){jg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),jg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function rb(e,t){jg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),jg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function ab(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function sb(e,t,n){const r=jg(e,(()=>t()));if(null==r)throw new Error(n);return r}function ib(e,t=2){return a.ZSL.sizeFromShape(e.slice(0,e.length-t))}function ob(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ub(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ib(e),...ob(e)]),t}function lb(e){return e%2==0}function cb(e,t){if(e=e.slice(-2),t=t.slice(-2),a.ZSL.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(lb(n)&&lb(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&lb(e[0])&&lb(t[0])}let db,hb;function pb(e,t){return null!=e.getExtension(t)}function fb(e){try{if(null!=Wg(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function mb(e){const t=Kg(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function gb(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.ZSL.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const bb=(0,a._K2)();function yb(){let e,t,n,r,s,i,o,u,l,c;return 2===(0,a._K2)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",u=(0,a._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function xb(e,t,n="index"){const r=a.ZSL.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function wb(e,t,n="index"){const r=a.ZSL.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function vb(e){const t=a.ZSL.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}bb.registerFlag("HAS_WEBGL",(()=>bb.getNumber("WEBGL_VERSION")>0)),bb.registerFlag("WEBGL_VERSION",(()=>fb(2)?2:fb(1)?1:0)),bb.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),bb.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===bb.get("WEBGL_VERSION"))),bb.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),bb.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),bb.registerFlag("WEBGL_PACK",(()=>bb.getBool("HAS_WEBGL"))),bb.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_CLIP",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_REDUCE",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_LAZILY_UNPACK",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_CONV_IM2COL",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>bb.getBool("WEBGL_PACK"))),bb.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==db){const t=Wg(e);db=t.getParameter(t.MAX_TEXTURE_SIZE)}return db}(bb.getNumber("WEBGL_VERSION")))),bb.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==hb){const t=Wg(e);hb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,hb)}(bb.getNumber("WEBGL_VERSION")))),bb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=bb.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Wg(e);return t=pb(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:pb(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),bb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>bb.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.eMq.isMobile())),bb.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Wg(e);if(1===e){if(!pb(t,"OES_texture_float"))return!1}else if(!pb(t,"EXT_color_buffer_float"))return!1;return mb(t)}(bb.getNumber("WEBGL_VERSION")))),bb.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!bb.getBool("WEBGL_FORCE_F16_TEXTURES")&&bb.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),bb.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=Wg(e);if(1!==e){if(pb(t,"EXT_color_buffer_float"))return mb(t);const e="EXT_color_buffer_half_float";if(pb(t,e)){const n=t.getExtension(e);return function(e,t){const n=Kg(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!pb(t,"OES_texture_float")&&!!pb(t,"WEBGL_color_buffer_float")&&mb(t)}(bb.getNumber("WEBGL_VERSION")))),bb.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=bb.getNumber("WEBGL_VERSION"))&&null!=Wg(e).fenceSync;var e})),bb.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>bb.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),bb.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),bb.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>a.eMq.isMobile()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),bb.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),bb.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),bb.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),bb.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),bb.registerFlag("WEBGL_EXP_CONV",(()=>!1)),bb.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>bb.getBool("IS_TEST"))),bb.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),bb.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),bb.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),bb.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const kb="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Sb}=a.C0T;function Ib(e,t,n){const r=[];if(e.forEach((e=>{const t=a.ZSL.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Db(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?Cb(e,r):Tb(e,r);const i=e.shapeInfo.logicalShape,o=t.logicalShape;return i.length<=o.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=Sb(e.shapeInfo.logicalShape,t.logicalShape),l=Fb(o),c=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", ");let f="return outputValue;";const m=1===a.ZSL.sizeFromShape(e.shapeInfo.logicalShape),g=1===a.ZSL.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=i-2,t=i-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&a.ZSL.arraysEqual(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Fb(l),d=Sb(e.shapeInfo.logicalShape,t.logicalShape),h=l-u;let p;const f=["x","y","z","w","u","v"];p=0===u?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+h]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=yb(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,d,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Nb}\n    ${Ab}\n    ${$b}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(a.ZSL.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return a.ZSL.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${wb(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=xb(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${wb(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=xb(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=xb(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=xb(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=_b),[h,l,d,s,c,i,n.userCode].join("\n")}function Tb(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Eb(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Rb(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Eb(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&a.ZSL.arraysEqual(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=a.ZSL.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${Tb(Lb(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${Mb(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Rb(e)}\n      }\n    `;const c=i[0],d=i[1],h=Eb(r);return 1===d?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=a.ZSL.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Tb(Lb(e,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${Mb(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${Rb(e)}\n      }\n    `;const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=Eb(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],o=n[2]*i,u=n[1]*o,{newShape:l,keptDims:c}=a.ZSL.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Tb(Lb(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${Mb(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${i}, 1)));\n        ${Rb(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,b=`int stride0 = ${r}Shape[1] * stride1;`;if(f===u&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=Eb(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${b}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${f}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,o=t[2]*i,u=t[1]*o,{newShape:l,keptDims:c}=a.ZSL.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Tb(Lb(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Mb(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${Rb(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${Eb(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=a.ZSL.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Tb(Lb(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Mb(t,i)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Rb(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${Eb(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Cb(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${yb().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=yb();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,o=i[0],u=i[1],l=yb();if(null!=i&&a.ZSL.arraysEqual(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${Cb(Lb(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Mb(s,r)});\n        }\n      `}const o=yb();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=yb();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[i-1]/2);let h=d*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Nb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ab="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$b="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_b="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Eb(e){return`offset${e}`}function Rb(e){const t=e.name,n=a.ZSL.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Fb(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Db(e,t,n){const{newShape:r,keptDims:s}=a.ZSL.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],u=o?t.slice(1):r,l=!e&&i>1&&!a.ZSL.arraysEqual(t,n)&&r.length<i||o;return{useSqueezeShape:l,uniformShape:l?u:t,keptDims:s}}function Lb(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Mb(e,t){return t.map((t=>e[t])).join(", ")}function Ob(e,t,n){const r=[],s=[];let i,o,u,l=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,a._K2)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const a of t.variableNames){const s={name:a,uniform:e.getUniformLocation(n,a,d),offset:e.getUniformLocation(n,`offset${a}`,d)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${a}Shape`,d),s.texShape=e.getUniformLocation(n,`${a}TexShape`,d)),r.push(s)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),o=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,d));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:o}}function zb(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!a.ZSL.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!a.ZSL.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function Pb(e){return(0,a._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Wb{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Bg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=yb();this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?wb(["r","c","d"],e):xb(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Bb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Bg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=yb();this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?wb(["r","c","d"],e):xb(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Ub{constructor(e){this.variableNames=["A"],this.outTexUsage=Ug.DOWNLOAD;const t=yb();this.outputShape=e,this.userCode=`\n      ${kb}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Vb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ug.DOWNLOAD;const t=yb();this.outputShape=e,this.userCode=`\n      ${kb}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const Gb={R:0,G:1,B:2,A:3};class Zb{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=yb();this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){const t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${Gb[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vb(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class Hb{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=yb();this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vb(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function Kb(e,t,n,r,s,i){!function(e,t){const n=(0,a._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return sb(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return jg(e,(()=>e.bindTexture(u,o))),jg(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),jg(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),jg(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),jg(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,a._K2)().getNumber("WEBGL_VERSION")?jg(e,(()=>e.texImage2D(u,0,r,t,n,0,s,i,null))):jg(e,(()=>e.texStorage2D(u,1,r,t,n))),jg(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function jb(e){return e.internalFormatFloat}function qb(e){return e.internalFormatHalfFloat}function Qb(e){return e.downloadTextureFormat}function Yb(e){return e.internalFormatPackedFloat}function Xb(e){return e.internalFormatPackedHalfFloat}class Jb{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,a._K2)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){zg[e]=t}(t,e)):this.gl=Wg(t),e=this.gl,2===(0,a._K2)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>jg(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>jg(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>jg(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>jg(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>jg(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>jg(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>jg(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>jg(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,a._K2)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Qg(this.gl,e),pb(this.gl,t))this.textureHalfFloatExtension=Qg(this.gl,t);else if((0,a._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),pb(this.gl,r))this.colorBufferHalfFloatExtension=Qg(this.gl,r);else if((0,a._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",pb(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!pb(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=sb(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),jg(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=sb(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return jg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),jg(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return sb(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Kg(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,a._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;jg(e,(()=>e.finish())),jg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),jg(e,(()=>e.deleteFramebuffer(this.framebuffer))),jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),jg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),jg(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Gg(t,n);return Kb(e,a,s,jb(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Gg(t,n);return Kb(e,a,s,qb(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Gg(t,n);return Kb(e,a,s,Qb(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){jg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,a._K2)().getNumber("WEBGL_VERSION")?jg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):jg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,a._K2)().getNumber("WEBGL_VERSION")?jg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):jg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),jg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,i){let o,u,l;jg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*r*4),u=e.FLOAT,l=i.internalFormatPackedFloat),o.set(s),2===(0,a._K2)().getNumber("WEBGL_VERSION")?jg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,u,o))):jg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,u,o))),jg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Hg(t,n);return Kb(e,a,s,Xb(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Hg(t,n);return Kb(e,a,s,Yb(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(rb(this.gl,this.framebuffer),this.outputTexture=null),jg(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=Gg(t,n),i=new Uint8Array(t*n*4);return jg(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i){const o=e,u=new Float32Array(function(e,t){const[n,r]=Hg(e,t);return n*r*4}(s,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,u),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();jg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return jg(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),jg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),jg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,a._K2)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return jg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=yb();return function(e,t){const n=sb(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(jg(e,(()=>e.shaderSource(n,t))),jg(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return sb(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);jg(t,(()=>t.attachShader(n,this.vertexShader))),jg(t,(()=>t.attachShader(n,e))),function(e,t){if(jg(e,(()=>e.linkProgram(t))),!(0,a._K2)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Jg(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;jg(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),eb(e,t,"clipSpacePos",n,3,20,0)&&eb(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(jg(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Jg(this.gl,this.program),jg(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return sb(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),jg(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),tb(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=Hg(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Jg(this.gl,this.program),ab(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}jg(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),jg(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Qg(this.gl,2===(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await a.ZSL.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,a._K2)().platform&&(n=(0,a._K2)().platform.setTimeoutCustom.bind((0,a._K2)().platform)),a.ZSL.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),nb(this.gl,e,this.framebuffer),this.debug&&ab(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(nb(this.gl,this.outputTexture,this.framebuffer),this.debug&&ab(this.gl)):rb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;nb(r,e,this.framebuffer),this.debug&&ab(r),this.outputTexture=e,jg(r,(()=>r.viewport(0,0,t,n))),jg(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),jg(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:ey,XI:ty,Nk:ny,f6:ry,ct:ay,YG:sy,hH:iy,z3:oy,sG:uy,uM:ly,vS:cy,qB:dy,GG:hy,rq:py,lg:fy,WR:my,cu:gy,GE:by,px:yy,jC:xy,He:wy,hE:vy,BF:ky,Dk:Sy,cl:Iy,_B:Ty,ub:Cy,_f:Ny,Ku:Ay,qy:$y,Zy:_y,bu:Ey,zv:Ry,dH:Fy,HS:Dy,yH:Ly,l3:My,z9:Oy,x6:zy,_m:Py,eW:Wy,GK:By,SP:Uy,yr:Vy,dl:Gy,Dw:Zy,xT:Hy,_X:Ky,wz:jy}=r;function qy(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Qy(e,t){return 1===t?[e]:qy(e,t)}class Yy{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Pb(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Qy("rc",this.rank),t=Fb(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Xy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):xb(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vb(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Jy{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=tx(t,n),a=nx(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=ex(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let i;return r===Vg.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Vg.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Vg.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Vg.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Vg.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=tx(n,r),i=nx(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=ex(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,a._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[i],c=l&&l.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[c]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ex(e,t,n,r,a){const s=function(e,t){switch(e){case Vg.PACKED_2X2_FLOAT32:return Yb(t);case Vg.PACKED_2X2_FLOAT16:return Xb(t);case Vg.UNPACKED_FLOAT32:return jb(t);case Vg.UNPACKED_FLOAT16:return qb(t);case Vg.PACKED_4X1_UNSIGNED_BYTE:return Qb(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=Hg(e[0],e[1]);i=t*n}else{const[t,n]=Gg(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function tx(e,t){if(e===Ug.UPLOAD)return Vg.PACKED_2X2_FLOAT32;if(e===Ug.RENDER||null==e)return function(e){return(0,a._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Vg.PACKED_2X2_FLOAT32:Vg.UNPACKED_FLOAT32:e?Vg.PACKED_2X2_FLOAT16:Vg.UNPACKED_FLOAT16}(t);if(e===Ug.DOWNLOAD||e===Ug.PIXELS)return Vg.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function nx(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class rx{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const ax="if (isnan(x)) return x;",sx="return abs(x);",ix=ax+"\n  return (x < 0.0) ? 0.0 : x;\n",ox=ax+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ux="return x;";class lx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class cx{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length);const t=e.length,n=Qy("rc",t),r=Fb(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const dx=a.kpo.YO,hx={},px=(0,a._K2)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class fx extends a.uI_{nextDataId(){return fx.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,a._K2)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Jb)t=e;else{const n=Wg((0,a._K2)().getNumber("WEBGL_VERSION"),e);t=new Jb(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Wg((0,a._K2)().getNumber("WEBGL_VERSION"));t=new Jb(e),this.binaryCache=((n=(0,a._K2)().getNumber("WEBGL_VERSION"))in hx||(hx[n]={}),hx[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Jy(this.gpgpu),this.numMBBeforeWarning=null==(0,a._K2)().global.screen?1024:(0,a._K2)().global.screen.height*(0,a._K2)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.GJx(this,(0,a.Hi9)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];const u=ub(t),l=new Zb(u,!1,s),c=this.runWebGLProgram(l,[i],n,[[r,a]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(((0,a._K2)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,a._K2)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Ug.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if((0,a._K2)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Ug.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:u}=t;if(null!=i){let t;t=u?new lx(o,ux):new rx(o,ux);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,d;if(l&&(c=a.ZSL.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=a.C0T.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=a.ZSL.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:u}=t;if(null!=s){let t;t=u?new lx(r,ux):new rx(r,ux);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,a._K2)().getBool("DEBUG")&&!(0,a._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,a._K2)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,d=null;if("complex64"!==i&&(0,a._K2)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...Zg(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=a.C0T.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=a.ZSL.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;jg(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,a.Hi9)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:o,isPacked:u,texture:l}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=u?new lx(s,ux):new rx(s,ux);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=(0,a.Hi9)().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>a.ZSL.decodeString(e)));return(0,a.ra8)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.ra8)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!qg(n)){if((0,a._K2)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=a.ZSL.sizeFromShape(t);if((0,a._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Zg(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=(0,a._K2)().getBool("WEBGL_PACK")&&!0===r,o=i?ub(t):t,u=i?new Vb(o):new Ub(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=a.ZSL.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=a.ZSL.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=a.ZSL.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.ZSL.now(),endMs:null}}endTimer(e){return(0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=a.ZSL.now(),e)}async getQueryTime(e){if((0,a._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=px){return(0,a._K2)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&a.ZSL.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){a.C0T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return dx(e.shape,t)}packedUnaryOp(e,t,n){const r=new lx(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,a.Hi9)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Fy(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,a._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,sx,e.dtype);const t=new rx(e.shape,sx),n=this.compileAndRun(t,[e]);return(0,a.Hi9)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.ZSL.isString(n[0])){const s=n.map((e=>a.ZSL.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,a.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new cx(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Yy(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ib(e.shape),...ob(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[ib(t),...ob(t)],s=new Xy(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;if(null!=t){const e=a.ZSL.sizeFromShape(s),n=t[0]*t[1]*4;a.ZSL.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=ub(s);let u;u=r?new Bb(o):new Wb(o);const l=[null!=t?t:Zg(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(u,[{shape:o,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,i){const o=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(o.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Bg.DENSE){const t=null!=i?i:Zg(e.outputShape);u.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===a.ZSL.sizeFromShape(o.shape))return u.values=a.ZSL.getTypedArrayFromDType(o.dtype,0),o;const l=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&a.ZSL.sizeFromShape(t.shape)<=(0,a._K2)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!cb(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:u,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:u,keptDims:l}=Db(e.packedInputs,t.shape,i);let c="",d="",h="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=a.ZSL.computeStrides(u);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const p=t.shape.length,f=2===u.length&&a.ZSL.arraysEqual(t.shape,i),m=1===a.ZSL.sizeFromShape(t.shape),g=a.C0T.getBroadcastDims(t.shape,n.shape),b=!e.packedInputs&&p===n.shape.length&&a.ZSL.arraysEqual(i,n.texData.texShape),y=e.packedInputs||u.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${p}_${b}_${o?l:""}_${u.length}_${m}_${g}_${f}_${c}_${d}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${(0,a._K2)().getNumber("WEBGL_VERSION")}`,i}(e,c,d),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Ib(s,o,t),l=function(e,t){const n=sb(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(jg(e,(()=>e.shaderSource(n,t))),jg(e,(()=>e.compileShader(n))),(0,a._K2)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Xg(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),c=e.createProgram(l);return(0,a._K2)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:i,outShapeInfo:o},Ob(e,t,c)))}(this.gpgpu,e,c,d))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,a._K2)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(zb(t.inShapeInfos,n),zb([t.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,a._K2)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:i,offset:o,shape:u,texShape:l}=t.variablesLocations[r];if(u){const{uniformShape:n}=Db(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(u,new Int32Array(n));break;case 2:e.gl.uniform2iv(u,new Int32Array(n));break;case 3:e.gl.uniform3iv(u,new Int32Array(n));break;case 4:e.gl.uniform4iv(u,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=i)if(s.isUniform)if(a.ZSL.sizeFromShape(s.shape)<2)e.gl.uniform1f(i,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=s.texData.slice&&null!=o&&e.gl.uniform1i(o,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,i,r)}const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=a.ZSL.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,p,c,d,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,a._K2)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=a.ZSL.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,a._K2)().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,a._K2)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,a.DZQ)((()=>{if(!(0,a._K2)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,a._K2)().getBool("DEBUG");(0,a._K2)().set("DEBUG",!1);const t=this.abs((0,a.d_2)(1e-8)).dataSync()[0];if((0,a._K2)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:u}=t;if(null!=i)return;const l=null!=this.activeTimers;let c;l&&(c=a.ZSL.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=(0,a._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,a._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&(0,a._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?a.ZSL.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=a.ZSL.squeezeShape(e);e=t.newShape}let s=a.ZSL.sizeFromShape(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o)if(t){const t=ib(e);let n=2,r=2;e.length&&([n,r]=ob(e)),s=t*(n/2)*(r/2),i=a.ZSL.sizeToSquarishShape(s).map((e=>2*e))}else i=a.ZSL.sizeToSquarishShape(s);return i}(n,u),t.texShape=d),null!=s){const e=ub(n);let i,o=d[1],h=d[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!u&&p||([o,h]=Hg(d[0],d[1])),i=u?new Hb(e,p):new Zb(e,p);const f=p?[h,o]:d,m=this.makeTensorInfo(f,r),g=this.texData.get(m.dataId);g.usage=p?Ug.PIXELS:Ug.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,h,s);const b=[[h,o]],y=!0,x=this.runWebGLProgram(i,[m],r,b,y),w=this.texData.get(x.dataId);t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,(0,a._K2)().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=w.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=a.ZSL.now()-c)}else{const e=this.acquireTexture(d,o,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*a.ZSL.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,a.dA1)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Xg(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=Ob(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:i,channels:o}=e,u=(0,a.Hi9)().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(r,t,n,s,i,o);return(0,a.Hi9)().makeTensorFromDataId(l,t,n,u)}}fx.nextDataId=0,a.eMq.isBrowser()&&(0,a.gJX)("webgl",(()=>new fx),2);const mx="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class gx{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=a.C0T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Pb(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const bx="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class yx{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.C0T.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=Pb(s);let i="";if(r)if(0===s||1===a.ZSL.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${Fb(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Qy("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function xx(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const wx={kernelName:a.lzr,backendName:"webgl",kernelFunc:xx};function vx(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=xx({inputs:{x:r},backend:n}),u=xx({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const kx={kernelName:a.pr3,backendName:"webgl",kernelFunc:vx},Sx="return (a < 0.) ? b * a : a;",Ix="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Tx={kernelName:a.X0$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,o=n.makeTensorInfo([],"float32",a.ZSL.createScalarValue(i,"float32")),u=(0,a._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yx(Ix,s.shape,o.shape):new gx(Sx,s.shape,o.shape),l=n.runWebGLProgram(u,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},Cx="return (a < 0.) ? b * a : a;",Nx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Ax={kernelName:a.Ncv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=(0,a._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yx(Nx,r.shape,s.shape):new gx(Cx,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}},$x="if (isnan(x)) return x;";function _x({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:o}=s,u=i,l=r||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,a._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new lx(o.shape,t):new rx(o.shape,e),u.runWebGLProgram(c,[o],l)}}function Ex({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,d=u;if(r&&"complex64"===l.dtype){const t=d.texData.get(l.dataId),n=d.texData.get(c.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new gx(e,l.shape,c.shape);return d.runWebGLProgram(o,[s,i],(0,a.TuY)(n.dtype,r.dtype))})),i=vx({inputs:{real:r,imag:s},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(s),i}const h=i||(0,a.TuY)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([l,c]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(c.dataId).values,n="string"===l.dtype?a.C0T.fromUint8ToStringArray(e):e,r="string"===l.dtype?a.C0T.fromUint8ToStringArray(t):t,[i,o]=s(l.shape,c.shape,n,r,h),u=d.makeTensorInfo(o,h);return d.texData.get(u.dataId).values=i,u}let p;return p=(0,a._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new yx(t,l.shape,c.shape,n):new gx(e,l.shape,c.shape),d.runWebGLProgram(p,[l,c],h)}}function Rx(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":ix;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":ox;if("prelu"===e)return t?Nx:Cx;if("leakyrelu"===e)return t?Ix:Sx;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Fx{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Pb(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Dx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.C0T.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Lx="return a * b;";function Mx(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=a.C0T.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Dx("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new Dx("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=vx({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=ky(r.shape,s.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=a,u}let o;return o=(0,a._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yx(Lx,r.shape,s.shape):new gx(Lx,r.shape,s.shape),n.runWebGLProgram(o,[r,s],i)}const Ox={kernelName:a.xu7,backendName:"webgl",kernelFunc:Mx};function zx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,o=n,u=a.ZSL.sizeFromShape(s.shape),l=a.ZSL.inferFromImplicitShape(i,u),c=a.ZSL.sizeFromShape(l);a.ZSL.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=o.texData.get(s.dataId);return!d.isPacked||cb(s.shape,l)||null!==d.texture&&cb(d.shape,l)?(o.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[ib(e.shape),...ob(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ib(t),...ob(t)],i=new Xy(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,l,o)}const Px={kernelName:a.R23,backendName:"webgl",kernelFunc:zx};class Wx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${a.ZSL.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Bx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Ux(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=a.C0T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:u,outSize:l}=s[a];let c,d;c="mean"===n?0===a?new Wx({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Wx({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Bx({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=i,i=r.runWebGLProgram(c,[i],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return i}class Vx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Fb(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Gx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Fb(this.rank),a=qy("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Zx(e,t,n){const r=(0,a._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gx(e.shape,t):new Vx(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Hx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;return function(e,t,n,r){const s=t,i=e.shape.length,o=a.ZSL.parseAxisParam(s,e.shape);let u=o;const l=a.C0T.getAxesPermutation(u,i),c=null!=l;let d=e;c&&(d=Zx(e,l,r),u=a.C0T.getInnerMostAxes(u.length,i)),a.C0T.assertAxesAreInnerMostDims("sum",u,i);const[h,p]=a.C0T.computeOutAndReduceShapes(d.shape,u);let f=h;n&&(f=a.C0T.expandShapeToKeepDim(h,o));const m=a.ZSL.sizeFromShape(p),g=zx({inputs:{x:d},attrs:{shape:[a.ZSL.sizeFromShape(e.shape)/m,m]},backend:r}),b=Ux(g,(0,a.chL)(e.dtype),"sum",r),y=zx({inputs:{x:b},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),c&&r.disposeIntermediateTensorInfo(d),y}(s,i,o,n)}const Kx={kernelName:a.WuN,backendName:"webgl",kernelFunc:Hx};function jx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=Ky(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=Zx(a,s,i);return l}const qx={kernelName:a.wx0,backendName:"webgl",kernelFunc:jx};function Qx({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,d=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),b=t.shape.slice(0,-2),y=a.ZSL.sizeFromShape(g),x=a.ZSL.sizeFromShape(b),w=a.ZEY.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);a.ZSL.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,f]:[y,f,h],k=r?[x,m,p]:[x,p,m],S=zx({inputs:{x:e},backend:s,attrs:{shape:v}}),I=zx({inputs:{x:t},backend:s,attrs:{shape:k}}),T=[S,I],C=Math.max(y,x),N=n?S.shape[1]:S.shape[2],A=null!=i,$=null!=o,_="leakyrelu"===l,E=null!=l?Rx(l,!0):null;let R;if((1===f||1===m)&&N>1e3&&!1===(A||$||_||null!=E)){let e=S,t=I;n&&(e=jx({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=jx({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),T.push(t));const a=1===m;let i=e;1!==m&&(i=zx({inputs:{x:e},backend:s,attrs:{shape:[C,N,1]}}),T.push(i));const o=1===m?2:1;let u=t;a&&(u=zx({inputs:{x:t},backend:s,attrs:{shape:[C,1,N]}}),T.push(u));const l=Mx({inputs:{a:i,b:u},backend:s});R=Hx({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),T.push(l)}else{const l=(0,a.TuY)(e.dtype,t.dtype),c=new Fx(v,k,[C,f,m],n,r,A,E,$,_),d=[S,I];if(null!=i&&d.push(i),$&&d.push(o),_){const e=s.makeTensorInfo([],"float32",a.ZSL.createScalarValue(u,"float32"));d.push(e),T.push(e)}R=s.runWebGLProgram(c,d,l)}const F=zx({inputs:{x:R},backend:s,attrs:{shape:w}});T.push(R);for(const e of T)s.disposeIntermediateTensorInfo(e);return F}const Yx={kernelName:a.Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return Qx({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},Xx="return abs(x);",Jx={kernelName:a.ljI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Fy(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,a._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lx(r.shape,Xx):new rx(r.shape,Xx),n.runWebGLProgram(s,[r],r.dtype)}},ew=_x({opSnippet:ax+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),tw={kernelName:a.Vvy,backendName:"webgl",kernelFunc:ew},nw=_x({opSnippet:ax+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),rw={kernelName:a.PH8,backendName:"webgl",kernelFunc:nw},aw="return a + b;",sw=Ex({opSnippet:aw,packedOpSnippet:aw,supportsComplex:!0,cpuKernelImpl:ey}),iw={kernelName:a.OMN,backendName:"webgl",kernelFunc:sw};class ow{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class uw{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const lw={kernelName:a.EkD,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return xx({inputs:{x:s[0]},backend:r});if(s.length>(0,a._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>(0,a.TuY)(e,t))),o=s.map((e=>e.shape)),u=(0,a._K2)().getBool("WEBGL_PACK")?new uw(s[0].shape,o):new ow(s[0].shape,o);return r.runWebGLProgram(u,s,i)}},cw={kernelName:a.u8Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,u=s.shape.length,l=a.ZSL.parseAxisParam(i,s.shape);let c=l;const d=a.C0T.getAxesPermutation(c,u);let h=s;null!=d&&(h=jx({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.C0T.getInnerMostAxes(c.length,u)),a.C0T.assertAxesAreInnerMostDims("all",c,u);const[p,f]=a.C0T.computeOutAndReduceShapes(h.shape,c),m=zx({inputs:{x:h},backend:n,attrs:{shape:[-1,a.ZSL.sizeFromShape(f)]}}),g=Ux(m,m.dtype,"all",n);let b;return b=zx(o?{inputs:{x:g},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(p,l)}}:{inputs:{x:g},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),b}},dw={kernelName:a.FSt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,u=s.shape.length,l=a.ZSL.parseAxisParam(i,s.shape);let c=l;const d=a.C0T.getAxesPermutation(c,u);let h=s;null!=d&&(h=jx({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.C0T.getInnerMostAxes(c.length,u)),a.C0T.assertAxesAreInnerMostDims("any",c,u);const[p,f]=a.C0T.computeOutAndReduceShapes(h.shape,c),m=zx({inputs:{x:h},backend:n,attrs:{shape:[-1,a.ZSL.sizeFromShape(f)]}}),g=Ux(m,m.dtype,"any",n);let b;return b=zx(o?{inputs:{x:g},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(p,l)}}:{inputs:{x:g},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),b}};class hw{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class pw{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.ZSL.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=Fb(u),c=Qy("coords",u);let d,h;if(1===i){h=u+1;const e=Fb(h);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else h=u,d=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((e=>"int "+e)),g=Qy("sourceLocR",h-1).concat("inIdx.r"),b=Qy("sourceLocG",h-1).concat("inIdx.g"),y=Qy("sourceLocB",h-1).concat("inIdx.b"),x=Qy("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function fw(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const o=a.C0T.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},l=new hw(u,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(l,c,"int32");if(1===d.shape[1])return d;const h=fw(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function mw(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=s[s.length-1],o=a.C0T.computeOptimalWindowSize(i),u=new pw(s,o,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=mw(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function gw(e,t,n,r){const s=[n];if(a.C0T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,a._K2)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,l]=a.C0T.computeOutAndReduceShapes(o.shape,s),c=a.ZSL.sizeFromShape(l),d=zx({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(d);const h=fw(e,d,r);n.push(h);const p=zx({inputs:{x:h},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return mw(e,t,r)}const bw={kernelName:a.Jp_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let o=a.ZSL.parseAxisParam(i,s.shape);const u=a.C0T.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=jx({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=a.C0T.getInnerMostAxes(o.length,l.shape.length)),a.C0T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const d=gw(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},yw={kernelName:a.p_m,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let o=a.ZSL.parseAxisParam(i,s.shape);const u=a.C0T.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=jx({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=a.C0T.getInnerMostAxes(o.length,l.shape.length)),a.C0T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const d=gw(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},xw=_x({opSnippet:ax+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ww={kernelName:a.QKF,backendName:"webgl",kernelFunc:xw},vw=_x({opSnippet:ax+"return log(x + sqrt(x * x + 1.0));"}),kw={kernelName:a.epO,backendName:"webgl",kernelFunc:vw},Sw=_x({opSnippet:ax+"\n  return atan(x);\n"}),Iw={kernelName:a.TyE,backendName:"webgl",kernelFunc:Sw},Tw=Ex({opSnippet:mx+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+bx+"\n  return result;\n"}),Cw={kernelName:a.lxb,backendName:"webgl",kernelFunc:Tw},Nw=_x({opSnippet:ax+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Aw={kernelName:a.zP9,backendName:"webgl",kernelFunc:Nw};class $w{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class _w{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),k=s%4,S=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const Ew={kernelName:a.ho8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;gb(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.C0T.computePool2DInfo(s.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&a.ZSL.arraysEqual(c.inShape,c.outShape))return xx({inputs:{x:s},backend:n});const d=new $w(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}},Rw={kernelName:a.cS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r,d=a.C0T.computePool3DInfo(s.shape,i,o,[1,1,1],u,l,c),h=new _w(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class Fw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Dw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Lw={kernelName:a.wwC,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=a.C0T.computePool3DInfo(o.shape,u,l,[1,1,1],c,d),p=new Dw(h);return n.runWebGLProgram(p,[s],o.dtype)}},Mw={kernelName:a.VCH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i;gb([s,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,d=a.C0T.computePool2DInfo(o.shape,u,l,1,c),h=new Fw(d);return n.runWebGLProgram(h,[s],o.dtype)}},Ow={kernelName:a.jAQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return Qx({a,b:s,transposeA:i,transposeB:o,backend:n})}};class zw{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],a.C0T.assertAndGetBroadcastShape(e,t),a.C0T.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(a.C0T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=s&&(a.C0T.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Pw{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.C0T.assertAndGetBroadcastShape(e,t),a.C0T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(a.C0T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(a.C0T.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Ww={kernelName:a.i5R,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:o,scale:u}=e;a.ZSL.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.ZSL.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.ZSL.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,s,i];let d=null;null!=o&&(d=o.shape,c.push(o));let h=null;null!=u&&(h=u.shape,c.push(u));const p=(0,a._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Pw(r.shape,s.shape,i.shape,d,h,l):new zw(r.shape,s.shape,i.shape,d,h,l);return t.runWebGLProgram(p,c,c[0].dtype)}};class Bw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Fb(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Uw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Uw[t]} = start[${t}] + coords.${Uw[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Uw=["x","y","z","w","u","v"];class Vw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Fb(this.rank),n=Qy("coords",this.rank),r=Qy("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Gw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:o}=r,[u,l]=a.Kro.parseSliceParams(s,i,o);if(a.Kro.assertParamsValid(s,u,l),0===a.ZSL.sizeFromShape(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=Dy(e.values,u,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),d=a.Kro.isSliceContinous(s.shape,u,l);if(c||!d){const e=(0,a._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vw(l):new Bw(l),t=[u];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=a.Kro.computeFlatOffset(t,a.ZSL.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),o.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),i}(s,u,l,n)}const Zw={kernelName:a.JiE,backendName:"webgl",kernelFunc:Gw},Hw={kernelName:a.Ik2,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:o}=r;a.ZSL.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=a.C0T.getReshaped(s.shape,i,u),c=a.C0T.getPermuted(l.length,i.length),d=a.C0T.getReshapedPermuted(s.shape,i,u),h=a.C0T.getSliceBeginCoords(o,i.length),p=a.C0T.getSliceSize(d,o,i.length),f=[],m=zx({inputs:{x:s},backend:n,attrs:{shape:l}}),g=jx({inputs:{x:m},backend:n,attrs:{perm:c}}),b=zx({inputs:{x:g},backend:n,attrs:{shape:d}}),y=Gw({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Kw={kernelName:a.N4F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=ty(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},jw={kernelName:a.HNs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=(0,a._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,a._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=ry(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let u;return u=i?new yx("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new gx("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(u,[r,s],r.dtype)}},qw={kernelName:a.vj7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=a.C0T.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},Qw=Ex({opSnippet:"return float(a != b);",cpuKernelImpl:Iy,dtype:"bool"}),Yw={kernelName:a.ylV,backendName:"webgl",kernelFunc:Qw};function Xw(e){const{inputs:t,backend:n}=e,{input:r}=t;return xx({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Jw={kernelName:a.LRy,backendName:"webgl",kernelFunc:Xw},ev={kernelName:a.KXH,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return xx({inputs:{x:i},backend:r});const t=a.Ul9(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=vx({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=Xw({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!a.ZSL.hasEncodingLoss(i.dtype,o)){const e=xx({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,a]=ay(e,i.shape,i.dtype,o);return r.makeTensorInfo(t,n,a)}if("int32"===o)return function(e,t){const n=new rx(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",a.ZSL.getTypedArrayFromDType("bool",1)),t=Qw({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},tv="return ceil(x);",nv=_x({opSnippet:tv,packedOpSnippet:tv,cpuKernelImpl:sy}),rv={kernelName:a.QDP,backendName:"webgl",kernelFunc:nv};class av{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class sv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const iv={kernelName:a.vaV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:o}=r;let u;u=(0,a._K2)().getBool("WEBGL_PACK_CLIP")?new sv(s.shape):new av(s.shape);const l=[[i],[o]];return n.runWebGLProgram(u,[s],s.dtype,l)}};class ov{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function uv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const lv={kernelName:a.$zE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new ov(r.shape),i=[uv(r,a.complexTensorInfos.real),uv(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class cv{constructor(e){this.outputShape=[],this.outputShape=a.C0T.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class dv{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.C0T.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=Fb(r),i=Qy("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=o[t],c=o.slice(-2),d=o.join();let h=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];h+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${hv(o,l,t)}),\n            vec2(${hv(c,l,t)}));\n        }`}const p=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${p}(${hv(o,l,f)}),\n          vec2(${hv(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function hv(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function pv(e){const{inputs:t,backend:n}=e,{input:r}=t;return xx({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const fv={kernelName:a.dv8,backendName:"webgl",kernelFunc:pv};function mv(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Xw({inputs:{input:e},backend:n}))),a=e.map((e=>pv({inputs:{input:e},backend:n}))),s=mv(r,t,n),i=mv(a,t,n),o=vx({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=a.ZSL.sizeFromShape(e.shape.slice(t));return zx({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=a.C0T.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],l=iy(i,o,r,u),c=a.C0T.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const i=e.filter((e=>a.ZSL.sizeFromShape(e.shape)>0)),o=(0,a._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=o?new rx(e[0].shape,ux):new lx(e[0].shape,ux);return n.runWebGLProgram(t,e,r)}const u=(0,a._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>u){const e=[];for(let r=0;r<i.length;r+=u){const a=i.slice(r,r+u);e.push(mv(a,t,n))}const r=mv(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new dv(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:l,outShape:c}=function(e,t,n){const r=a.C0T.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>zx({inputs:{x:e},attrs:{shape:[-1,a.ZSL.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(i,t,n),d=new cv(l.map((e=>e.shape))),h=n.runWebGLProgram(d,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=zx({inputs:{x:h},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(h),p}function gv(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=a.ZSL.parseAxisParam(s,t[0].shape)[0],o=t.map((e=>e.shape));a.C0T.assertParamsConsistent(o,i);const u=a.C0T.computeOutShape(t.map((e=>e.shape)),i);if(0===a.ZSL.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>a.ZSL.sizeFromShape(e.shape)>0));return 1===l.length?xx({inputs:{x:l[0]},backend:n}):mv(l,i,n)}const bv={kernelName:a.$dB,backendName:"webgl",kernelFunc:gv};class yv{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class xv{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wv{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pb(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<c;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(d+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*u};\n           `,1===o){if(n<c&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===u&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<c)){const e=i%2==0?a.ZSL.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<c&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<c&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<c&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<c&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<c&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class vv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Pb(this.outputShape.length);const{dataFormat:n}=t,r=yb(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function kv(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Sv({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),d=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat,m=!1;let g;const b=[];if(null!=i){const e=kv(i.shape,f);null!=e&&(i=zx({inputs:{x:i},backend:r,attrs:{shape:e}}),b.push(i))}if(null!=s){const e=kv(s.shape,f);null!=e&&(s=zx({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if((1!==h&&1!==p||!(d>1e3))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&a.ZSL.arraysEqual(c.shape.slice(-3),l.slice(-3))){const d=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,a.ZSL.assert(cb(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const f=zx({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(f);const y=Qx({a:h,b:f,backend:r,transposeA:!1,transposeB:m,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),x=r.texData.get(y.dataId);a.ZSL.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,x.shape=n.outShape,g=xx({inputs:{x:y},backend:r}),g.shape=n.outShape,b.push(y)}else{const a=n.outHeight*n.outWidth,l=zx({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,a,n.inChannels]:[n.batchSize,n.inChannels,a]}}),c=zx({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Qx({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:m,backend:r,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o});g=zx({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),b.push(l),b.push(c),b.push(d)}for(const e of b)r.disposeIntermediateTensorInfo(e);return g}function Iv({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=l*c*d,b=p*h,y=[n.batchSize,g,b],x=[];if(null!=i){const e=kv(i.shape,m);null!=e&&(i=zx({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}if(null!=s){const e=kv(s.shape,m);null!=e&&(s=zx({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const w=zx({inputs:{x:t},backend:r,attrs:{shape:[1,g,a.ZSL.sizeFromShape(t.shape)/g]}});x.push(w);const v=new vv(y,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(v,[e],"float32",k),I=zx({inputs:{x:S},backend:r,attrs:{shape:y}});x.push(S),x.push(I);const T=null!=s,C=null!=i,N="leakyrelu"===u,A=u?Rx(u,!0):null,$=new Fx(m?I.shape:w.shape,m?w.shape:I.shape,m?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,T,A,C,N),_=m?[I,w]:[w,I];if(s&&_.push(s),C&&_.push(i),N){const e=r.makeTensorInfo([],"float32",a.ZSL.createScalarValue(o,"float32"));_.push(e),x.push(e)}const E=r.runWebGLProgram($,_,"float32"),R=zx({inputs:{x:E},backend:r,attrs:{shape:n.outShape}});x.push(E);for(const e of x)r.disposeIntermediateTensorInfo(e);return R}const Tv={kernelName:a.p2J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:d}=r,h=a.C0T.convertConv2DDataFormat(l),p=a.C0T.computeConv2DInfo(s.shape,i.shape,o,c,u,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,a._K2)().getBool("WEBGL_EXP_CONV")){const e=new wv(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[s,i],"float32",t)}else if((0,a._K2)().getBool("WEBGL_CONV_IM2COL"))f=Iv({x:s,filter:i,convInfo:p,backend:n});else{const e=new yv(p);f=n.runWebGLProgram(e,[s,i],"float32")}else f=Sv({x:s,filter:i,convInfo:p,backend:n});const m=zx({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Cv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Av{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $v{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const _v={kernelName:a.rFm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:d}=r,h=a.C0T.convertConv2DDataFormat(l),p=a.C0T.computeConv2DInfo(s.shape,d,o,1,u,c,!1,h),f=new Cv(p);return n.runWebGLProgram(f,[s,i],"float32")}};class Ev{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Pb(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const Rv={kernelName:a.jfg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:d}=r,h=a.C0T.convertConv2DDataFormat(c),p=a.C0T.computeConv2DInfo(o,i.shape,u,1,l,d,!1,h);if((0,a._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new Ev(p);return n.runWebGLProgram(t,[s,i],"float32",e)}{const e=new Nv(p);return n.runWebGLProgram(e,[s,i],"float32")}}},Fv={kernelName:a.A1h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l}=r,c=a.C0T.computeConv3DInfo(s.shape,i.shape,o,l,u),d=new xv(c);return n.runWebGLProgram(d,[s,i],"float32")}},Dv={kernelName:a.iGz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:u,filterShape:l}=r,c=a.C0T.computeConv3DInfo(s.shape,l,o,1,u),d=new Av(c);return n.runWebGLProgram(d,[s,i],"float32")}},Lv={kernelName:a.gC7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:o,strides:u,inputShape:l}=r,c=a.C0T.computeConv3DInfo(l,i.shape,u,1,o),d=new $v(c);return n.runWebGLProgram(d,[s,i],"float32")}},Mv=_x({opSnippet:$x+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${bx}\n  return result;\n`}),Ov={kernelName:a.Mn0,backendName:"webgl",kernelFunc:Mv},zv=_x({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Pv={kernelName:a.MnK,backendName:"webgl",kernelFunc:zv};class Wv{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,w]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Bv={kernelName:a.MRQ,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new Wv(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};var Uv;!function(e){e.Prod="*",e.Sum="+"}(Uv||(Uv={}));class Vv{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===Uv.Prod?"1.0":"0.0",i=n?s:`getX(${Gv(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Fb(a)} coords = getOutputCoords();\n        int end = ${Zv(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${Zv(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Gv(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Gv(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Zv(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Hv(e,t,n,r,s,i){const o=t.shape.length,u=a.C0T.getAxesPermutation([r],o);let l=t;null!=u&&(l=jx({inputs:{x:t},backend:n,attrs:{perm:u}}));const c=a.C0T.getInnerMostAxes(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const d=l.shape[c];let h=xx({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const r=new Vv(e,l.shape,!1,i),a=[[t]],s=h;h=n.runWebGLProgram(r,[h],h.dtype,a),n.disposeIntermediateTensorInfo(s)}if(s){const t=new Vv(e,l.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=jx({inputs:{x:h},backend:n,attrs:{perm:a.C0T.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const Kv={kernelName:a.jj_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return Hv(Uv.Prod,a,n,s,i,o)}},jv={kernelName:a.nY8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return Hv(Uv.Sum,a,n,s,i,o)}},qv={kernelName:a.wNW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=ty(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=ny(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Qv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Yv={kernelName:a.TMz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new Qv("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};class Xv{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pb(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Jv{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pb(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<d;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===u){if(t<d&&(o%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){const e=o%2==0?a.ZSL.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(o%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const ek={kernelName:a.tGH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;let d=l;null==d&&(d=[1,1]),a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const h=a.C0T.computeConv2DInfo(s.shape,i.shape,o,d,u,c,!0);let p;p=(0,a._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Jv(h):new Xv(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,i],"float32",f)}};class tk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const rk={kernelName:a.X$8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:d}=r,h=a.C0T.computeConv2DInfo(s.shape,d,o,u,l,c,!0),p=new tk(h);return n.runWebGLProgram(p,[s,i],"float32")}},ak={kernelName:a.nVu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:d}=r,h=a.C0T.computeConv2DInfo(d,i.shape,o,u,l,c,!0),p=new nk(h);return n.runWebGLProgram(p,[s,i],"float32")}};class sk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ik={kernelName:a.ORI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=a.ZSL.sizeFromShape(r.shape),o=zx({inputs:{x:r},backend:n,attrs:{shape:[i]}}),u=new sk(i),l=n.runWebGLProgram(u,[o],o.dtype),c=zx({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class ok{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const uk={kernelName:a.jxD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l}=r,c=a.C0T.computeDilation2DInfo(s.shape,i.shape,o,u,"NHWC",l);let d;const h=new ok(c);d=n.runWebGLProgram(h,[s,i],"float32");const p=zx({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),p}},lk={kernelName:a.Qgm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:o,summedDims:u,idDims:l}=a.C0T.decodeEinsumEquation(s,i.length);a.C0T.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:d}=a.C0T.getEinsumComputePath(u,l),h=d.length;let p=null,f=o.length;const m=[];for(let e=0;e<h;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=a.C0T.getEinsumPermutation(f,l[t]);let s;a.C0T.isIdentityPermutation(e)?s=i[t]:(s=jx({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);a.ZSL.arraysEqual(s.shape,o)||(s=zx({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=Mx({inputs:{a:s,b:p},backend:n}),m.push(p))}e<h-1&&(c[e]>=0&&(p=Hx({inputs:{x:p},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},ck=_x({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),dk={kernelName:a.Pah,backendName:"webgl",kernelFunc:ck},hk={kernelName:a.rsH,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=(0,a._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yx("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new gx("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},pk=Ex({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:oy}),fk={kernelName:a.BRl,backendName:"webgl",kernelFunc:pk},mk=_x({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.C0T.ERF_P};\n  float a1 = ${a.C0T.ERF_A1};\n  float a2 = ${a.C0T.ERF_A2};\n  float a3 = ${a.C0T.ERF_A3};\n  float a4 = ${a.C0T.ERF_A4};\n  float a5 = ${a.C0T.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),gk={kernelName:a._s9,backendName:"webgl",kernelFunc:mk},bk=_x({opSnippet:$x+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:uy,dtype:"float32"}),yk={kernelName:a.ox3,backendName:"webgl",kernelFunc:bk};function xk(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let l=s;return s<0&&(a.ZSL.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+s+1),u.splice(l,0,1),zx({inputs:{x:i},backend:r,attrs:{shape:u}})}const wk={kernelName:a.ybN,backendName:"webgl",kernelFunc:xk},vk="return exp(x) - 1.0;",kk=_x({opSnippet:vk,packedOpSnippet:vk,cpuKernelImpl:ly}),Sk={kernelName:a.ybj,backendName:"webgl",kernelFunc:kk};class Ik{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Tk(e,t,n){const r=n.texData.get(e.dataId),s=a.ZSL.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=zx({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),u=o.shape,l=new Ik("real",u,t),c=new Ik("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=vx({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=zx({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const Ck={kernelName:a.rGP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Tk(r,!1,n)}};class Nk{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Ak(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||a.ZSL.inferDtype(s),"string"===i){const e=a.ZSL.getArrayFromDType(i,a.ZSL.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new Nk(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const $k={kernelName:a.SQl,backendName:"webgl",kernelFunc:Ak};class _k{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ek={kernelName:a.BxF,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new _k(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Rk="return floor(x);",Fk=_x({opSnippet:Rk,packedOpSnippet:Rk,cpuKernelImpl:cy}),Dk={kernelName:a.ZgB,backendName:"webgl",kernelFunc:Fk},Lk=Ex({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Mk={kernelName:a.ElG,backendName:"webgl",kernelFunc:Lk};class Ok{constructor(e){this.variableNames=["A"];const t=yb(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class zk{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=yb(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Pk={kernelName:a.awo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[c,l],h=[c,l,i];if(u||o){const e=(0,a._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Wk&&e===Bk||(Bk=e,Wk=document.createElement("canvas").getContext("2d",{willReadFrequently:Bk})),Wk.canvas.width=l,Wk.canvas.height=c,Wk.drawImage(s,0,0,l,c),s=Wk.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=Ug.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=(0,a._K2)().getBool("WEBGL_PACK")?new zk(h):new Ok(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let Wk,Bk=(0,a._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Uk={kernelName:a.aAr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=a.C0T.convertConv2DDataFormat(d),b=a.C0T.computeConv2DInfo(s.shape,i.shape,l,h,c,p,!1,g);let y;const x=[],w=null!=o,v=null!=u,k="leakyrelu"===f,S=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=zx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(w&&e.push(t(o,d)),v&&e.push(t(u,d)),k){const t=n.makeTensorInfo([],"float32",a.ZSL.createScalarValue(m,"float32"));e.push(t),x.push(t)}return e};if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(b.strideWidth<=2&&"channelsLast"===g&&(0,a._K2)().getBool("WEBGL_EXP_CONV")){const e=f?Rx(f,!0):null,t=new wv(b,w,e,v,k),r=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],a=S();y=n.runWebGLProgram(t,a,"float32",r)}else if((0,a._K2)().getBool("WEBGL_CONV_IM2COL"))y=Iv({x:s,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=f?Rx(f,!1):null,t=new yv(b,w,e,v,k),r=S();y=n.runWebGLProgram(t,r,"float32")}else y=Sv({x:s,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const I=zx({inputs:{x:y},backend:n,attrs:{shape:b.outShape}});return x.push(y),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},Vk={kernelName:a.T7M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=a.C0T.computeConv2DInfo(s.shape,i.shape,l,g,c,h,!0),y=(0,a._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=p?Rx(p,y):null,w=[s,i],v=null!=o,k=null!=u,S="leakyrelu"===p;if(v&&w.push(o),k&&w.push(u),S){const e=n.makeTensorInfo([],"float32",a.ZSL.createScalarValue(f,"float32"));w.push(e),m.push(e)}let I;I=y?new Jv(b,v,x,k,S):new Xv(b,v,x,k,S);const T=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],C=n.runWebGLProgram(I,w,"float32",T);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class Gk{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=Fb(n.length);let s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Zk={kernelName:a.O4G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,o=i[i.length-1],u=a.ZSL.sizeFromShape(r.shape),[l,c,d,h]=a.C0T.prepareAndValidate(r,s),p=zx({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),f=zx({inputs:{x:r},backend:n,attrs:{shape:[a.ZSL.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=dy(e,t,r.dtype,c,o,d,h,r.shape,u);return n.makeTensorInfo(l,r.dtype,a.values)}const m=new Gk(o,h,[c,d],r.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),b=zx({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),b}};class Hk{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Fb(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Kk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=r,l=a.ZSL.parseAxisParam(o,s.shape)[0];if((0,a._K2)().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];a.ZSL.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=a.C0T.segment_util.collectGatherOpShapeInfo(s,i,l,u),d=a.ZSL.sizeFromShape(i.shape),h=[],p=zx({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=zx({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});h.push(p),h.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=hy(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Hk(p.shape,m),b=n.runWebGLProgram(g,[p,f],p.dtype);h.push(b);const y=zx({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const jk={kernelName:a.mxL,backendName:"webgl",kernelFunc:Kk},qk=Ex({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:py,dtype:"bool"}),Qk={kernelName:a.XhZ,backendName:"webgl",kernelFunc:qk},Yk=Ex({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:fy}),Xk={kernelName:a.lLS,backendName:"webgl",kernelFunc:Yk},Jk={kernelName:a.OAQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Tk(r,!0,n)}},eS=_x({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),tS={kernelName:a.gIW,backendName:"webgl",kernelFunc:eS},nS=_x({opSnippet:"return float(isinf(x));",dtype:"bool"}),rS={kernelName:a.E3$,backendName:"webgl",kernelFunc:nS},aS=_x({opSnippet:"return float(isnan(x));",dtype:"bool"}),sS={kernelName:a.iPs,backendName:"webgl",kernelFunc:aS},iS=Ex({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:my,dtype:"bool"}),oS={kernelName:a.mIA,backendName:"webgl",kernelFunc:iS},uS=Ex({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:gy,dtype:"bool"}),lS={kernelName:a.CwD,backendName:"webgl",kernelFunc:uS},cS={kernelName:a.mnI,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=by(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},dS=_x({opSnippet:$x+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:yy}),hS={kernelName:a.tG8,backendName:"webgl",kernelFunc:dS},pS=_x({opSnippet:$x+"\n  return log(1.0 + x);\n"}),fS={kernelName:a.Cg$,backendName:"webgl",kernelFunc:pS},mS=Ex({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),gS={kernelName:a.RUm,backendName:"webgl",kernelFunc:mS},bS=_x({opSnippet:"return float(!(x >= 1.0));"}),yS={kernelName:a.nZd,backendName:"webgl",kernelFunc:bS},xS=Ex({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),wS={kernelName:a.LXA,backendName:"webgl",kernelFunc:xS};class vS{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class kS{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const SS={kernelName:a.jM4,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=r,c=(0,a._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new kS(s.shape,i,o,u,l):new vS(s.shape,i,o,u,l);return n.runWebGLProgram(c,[s],s.dtype)}};class IS{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const TS={kernelName:a.ToN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,d=new IS(a.shape,o,u,l,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function CS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=r,u=s.shape.length,l=a.ZSL.parseAxisParam(i,s.shape);let c=l;const d=a.C0T.getAxesPermutation(c,u),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];const r=Ky(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=Zx(s,d,n);c=a.C0T.getInnerMostAxes(c.length,u)}a.C0T.assertAxesAreInnerMostDims("max",c,u);const[m,g]=a.C0T.computeOutAndReduceShapes(f.shape,c);let b,y=m;if(o&&(y=a.C0T.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=xy(e,a.ZSL.sizeFromShape(g),y,s.dtype);b=n.makeTensorInfo(y,s.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const s=a.ZSL.sizeFromShape(t),i=zx({inputs:{x:e},attrs:{shape:[a.ZSL.sizeFromShape(e.shape)/s,s]},backend:r}),o=Ux(i,e.dtype,"max",r),u=zx({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}(f,g,y,n);return h&&n.disposeIntermediateTensorInfo(f),b}const NS={kernelName:a.VAI,backendName:"webgl",kernelFunc:CS},AS=Ex({opSnippet:mx+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+bx+"\n  return result;\n",cpuKernelImpl:wy}),$S={kernelName:a.LDN,backendName:"webgl",kernelFunc:AS},_S={kernelName:a.t3d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;gb(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.C0T.computePool2DInfo(s.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&a.ZSL.arraysEqual(c.inShape,c.outShape))return xx({inputs:{x:s},backend:n});const d=new $w(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}},ES={kernelName:a.ySp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=a.C0T.computePool3DInfo(s.shape,i,o,[1,1,1],u,c,l),h=new _w(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class RS{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FS{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const DS={kernelName:a.cHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=a.C0T.computePool3DInfo(o.shape,u,l,[1,1,1],c,d),p=new _w(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new FS(h),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},LS={kernelName:a.RXX,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:o}=t,u=i;gb([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:h}=r,p=a.C0T.computePool2DInfo(u.shape,l,c,1,d,h),f=new $w(p,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new RS(p),b=n.runWebGLProgram(g,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),b}},MS={kernelName:a.TL8,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;a.ZSL.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=a.C0T.computePool2DInfo(r.shape,s,i,c,o),[h,p]=function(e,t,n,r){let a=new $w(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new $w(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,d,l);return[h,p]}},OS={kernelName:a.g5A,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,o=n,u=r.shape.length,l=a.ZSL.parseAxisParam(i,r.shape);let c=l;const d=a.C0T.getAxesPermutation(c,u),h=null!=d,p=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];const n=Ky(e,r.shape,r.dtype,d,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=Zx(r,d,o);f.push(m),c=a.C0T.getInnerMostAxes(c.length,u)}a.C0T.assertAxesAreInnerMostDims("sum",c,u);const[g,b]=a.C0T.computeOutAndReduceShapes(m.shape,c);let y=g;s&&(y=a.C0T.expandShapeToKeepDim(g,l));const x=function(e,t,n,r){const s=a.ZSL.sizeFromShape(t),i=zx({inputs:{x:e},attrs:{shape:[a.ZSL.sizeFromShape(e.shape)/s,s]},backend:r}),o=Ux(i,"float32","mean",r),u=zx({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}(m,b,y,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},zS={kernelName:a.lNG,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,u=s.shape.length,l=a.ZSL.parseAxisParam(i,s.shape);let c=l;const d=a.C0T.getAxesPermutation(c,u);let h=s;null!=d&&(h=jx({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.C0T.getInnerMostAxes(c.length,s.shape.length)),a.C0T.assertAxesAreInnerMostDims("min",c,u);const[p,f]=a.C0T.computeOutAndReduceShapes(h.shape,c),m=zx({inputs:{x:h},backend:n,attrs:{shape:[-1,a.ZSL.sizeFromShape(f)]}}),g=Ux(m,m.dtype,"min",n);let b;return b=zx(o?{inputs:{x:g},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(p,l)}}:{inputs:{x:g},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),b}},PS=Ex({opSnippet:mx+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+bx+"\n  return result;\n",cpuKernelImpl:vy}),WS={kernelName:a.LG0,backendName:"webgl",kernelFunc:PS};class BS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class US{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Qy("rc",r),u=Qy("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const VS={kernelName:a.x7F,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,o=(0,a._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new US(r.shape,s,i):new BS(r.shape,s,i);return t.runWebGLProgram(o,[r],r.dtype)}},GS=Ex({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+bx+"\n  return result;\n"}),ZS={kernelName:a.BLA,backendName:"webgl",kernelFunc:GS};class HS{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const KS=Ex({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),jS={kernelName:a.sDr,backendName:"webgl",kernelFunc:KS},qS="return a - b;",QS=Ex({opSnippet:qS,packedOpSnippet:qS,supportsComplex:!0,cpuKernelImpl:Gy}),YS={kernelName:a.PbM,backendName:"webgl",kernelFunc:QS};function XS(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,o=a.ZSL.parseAxisParam([i],s.shape),u=CS({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=a.C0T.expandShapeToKeepDim(u.shape,o),c=zx({inputs:{x:u},backend:n,attrs:{shape:l}}),d=QS({inputs:{a:s,b:c},backend:n}),h=bk({inputs:{x:d},backend:n}),p=Hx({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=zx({inputs:{x:p},backend:n,attrs:{shape:l}}),m=KS({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const JS={kernelName:a.rFG,backendName:"webgl",kernelFunc:XS},eI={kernelName:a.WT3,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:XS({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new HS(l,c,s),h=[[i]],p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},tI=ax+"\n  return -x;\n",nI={kernelName:a.l0G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Sy(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let s;return s=(0,a._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lx(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new rx(r.shape,tI),n.runWebGLProgram(s,[r],r.dtype)}},rI=a.kpo.c7,aI={kernelName:a.SDM,backendName:"webgl",kernelFunc:function(e){a.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:h}=rI(c,d,o,u,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},sI=a.kpo.ZS,iI={kernelName:a.Zl4,backendName:"webgl",kernelFunc:function(e){a.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,d=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:p,validOutputs:f}=sI(d,h,o,u,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},oI=a.kpo.ut,uI={kernelName:a.e0f,backendName:"webgl",kernelFunc:function(e){a.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o,f=u,m=l,g=c,{selectedIndices:b,selectedScores:y}=oI(d,h,p,f,m,g);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class lI{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const cI={kernelName:a.urI,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:o,onValue:u,offValue:l}=r,c=a.ZSL.sizeFromShape(s.shape),d=new lI(c,o,u,l),h=zx({inputs:{x:s},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(d,[h],i);n.disposeIntermediateTensorInfo(h);const f=zx({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(p),f}};function dI(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Xw({inputs:{input:r},backend:n}),t=dI({inputs:{x:e},backend:n}),a=pv({inputs:{input:r},backend:n}),s=dI({inputs:{x:a},backend:n}),i=vx({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Ak({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const hI={kernelName:a.xJ3,backendName:"webgl",kernelFunc:dI},pI={kernelName:a.LWX,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Xw({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=pv({inputs:{input:a},backend:r}),i=dI({inputs:{x:s},backend:r}),o=vx({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Ak({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},fI={kernelName:a.mM$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return xk({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{a.ZSL.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),a.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=gv({inputs:t.map((e=>{const t=xk({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class mI{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class gI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Qy("rc",r),u=Qy("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const bI=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:o}=r;if(0===a.ZSL.sizeFromShape(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return Ak({backend:n,attrs:{shape:e,value:o,dtype:s.dtype}})}const u=(0,a._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gI(s.shape,i,o):new mI(s.shape,i,o),l=[[o]];return n.runWebGLProgram(u,[s],s.dtype,l)},yI={kernelName:a.ODT,backendName:"webgl",kernelFunc:bI},xI=Ex({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+bx+"\n  return result;\n"}),wI={kernelName:a.pyJ,backendName:"webgl",kernelFunc:xI},vI={kernelName:a.kdj,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,u=s.shape.length,l=[],c=a.ZSL.parseAxisParam(i,s.shape);let d=c;const h=a.C0T.getAxesPermutation(d,u);let p,f=s;if(null!=h&&(f=jx({inputs:{x:s},backend:n,attrs:{perm:h}}),d=a.C0T.getInnerMostAxes(d.length,u),l.push(f)),a.C0T.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Ty(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=a.C0T.computeOutAndReduceShapes(f.shape,d),r=a.ZSL.sizeFromShape(t),i=zx({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Ux(i,(0,a.chL)(s.dtype),"prod",n);p=zx({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(o){l.push(p);const e=a.C0T.expandShapeToKeepDim(p.shape,c);p=zx({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},kI={kernelName:a.oJ2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,u=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),c=n.readSync(s.dataId),d=n.readSync(i.dataId),[h,p,f]=Cy(u,l,c,s.shape,s.dtype,d,i.shape,o),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},SI={kernelName:a.CQC,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Ny(i,r.shape,r.dtype,o,a.shape,u,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},II={kernelName:a.mH5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),d=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=Ay(l,a.shape,c,s.shape,s.dtype,d,i.shape,h,p,u);return n.makeTensorInfo(f,s.dtype,m)}},TI=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=$y(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},CI={kernelName:a.Q6t,backendName:"webgl",kernelFunc:TI},NI=_x({opSnippet:"return 1.0 / x;"}),AI={kernelName:a.huO,backendName:"webgl",kernelFunc:NI},$I=_x({opSnippet:ax+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_I={kernelName:a.fUj,backendName:"webgl",kernelFunc:$I},EI=_x({opSnippet:ax+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),RI={kernelName:a.P_L,backendName:"webgl",kernelFunc:EI};class FI{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class DI{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const LI={kernelName:a.hgw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=r,[l,c]=u,d=(0,a._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DI(s.shape,l,c,i,o):new FI(s.shape,l,c,i,o);return n.runWebGLProgram(d,[s],"float32")}};class MI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const OI={kernelName:a.FCQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new MI(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class zI{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class PI{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const WI={kernelName:a.jOE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=r,[l,c]=u,d=(0,a._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new PI(s.shape,l,c,i,o):new zI(s.shape,l,c,i,o);return n.runWebGLProgram(d,[s],s.dtype)}};class BI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const UI={kernelName:a.XQy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new BI(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class VI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=Fb(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class GI{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Qy("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Fb(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const ZI={kernelName:a.D7i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,o=s.shape.length,u=a.ZSL.parseAxisParam(i,s.shape);if(0===o)return xx({inputs:{x:s},backend:n});const l=(0,a._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GI(s.shape,u):new VI(s.shape,u);return n.runWebGLProgram(l,[s],s.dtype)}};class HI{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const KI={kernelName:a.BK4,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:o}=t,u=n,l=new HI(r.shape,i),[c,d]=a.C0T.getImageCenter(o,r.shape[1],r.shape[2]),h=[[c,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(l,[r],r.dtype,h)}},jI=_x({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qI={kernelName:a.hVg,backendName:"webgl",kernelFunc:jI},QI=_x({opSnippet:"return inversesqrt(x);",cpuKernelImpl:_y}),YI={kernelName:a.TOR,backendName:"webgl",kernelFunc:QI};class XI{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const u=Fb(a.length),l=Fb(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class JI{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const u=Fb(a.length),l=Fb(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const eT={kernelName:a.pJc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=a.C0T.calculateShapes(i,s,o),p=[h/c,c];if(0===h)return n.makeTensorInfo(o,s.dtype);const f=zx({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=zx({inputs:{x:i},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let b;b=(0,a._K2)().getBool("WEBGL_PACK")?new JI(l,u,f.shape.length,m.shape.length,d,p):new XI(l,u,f.shape.length,m.shape.length,d,p);const y=n.runWebGLProgram(b,[m,f,g],m.dtype),x=zx({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),x}};class tT{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===(0,a._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const nT={kernelName:a.uWl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new tT(a.shape[0],a.shape[1],s.shape[1],i),u=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",u)}};class rT{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=Fb(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const aT={kernelName:a.l6P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,o=new rT(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,i],(0,a.TuY)(s.dtype,i.dtype))}},sT=_x({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.C0T.SELU_SCALEALPHA};\n  float scale = ${a.C0T.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),iT={kernelName:a.u$b,backendName:"webgl",kernelFunc:sT},oT=_x({opSnippet:$x+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ry}),uT={kernelName:a.vI1,backendName:"webgl",kernelFunc:oT},lT=_x({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cT={kernelName:a.YVe,backendName:"webgl",kernelFunc:lT},dT=_x({opSnippet:$x+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${bx}\n  return result;\n`}),hT={kernelName:a.hql,backendName:"webgl",kernelFunc:dT},pT=_x({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),fT={kernelName:a.J3C,backendName:"webgl",kernelFunc:pT},mT=_x({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),gT={kernelName:a.Fin,backendName:"webgl",kernelFunc:mT},bT={kernelName:a.A8B,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:o}=r;a.ZSL.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const c=[],d=bI({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=a.C0T.getReshaped(d.shape,i,u,!1),p=a.C0T.getPermuted(h.length,i.length,!1),f=a.C0T.getReshapedPermuted(d.shape,i,u,!1),m=zx({inputs:{x:d},backend:n,attrs:{shape:h}}),g=jx({inputs:{x:m},backend:n,attrs:{perm:p}}),b=zx({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},yT={kernelName:a.C8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=Ly(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},xT={kernelName:a.BoJ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=My(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},wT={kernelName:a.L6G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Oy(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},vT={kernelName:a.DvZ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Oy(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},kT={kernelName:a.jgd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=a.C0T.calculateShapes(i,s,u),f=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=a.ZSL.decodeString(n.readSync(o.dataId)[0]),m=Ey(e,t,u,p,d,c,l,h,r,f);return n.makeTensorInfo(u,m.dtype,m.values)}const m=new XI(c,l,s.shape.length,i.shape.length,h,[p,1],f),g=n.runWebGLProgram(m,[i,s,o],i.dtype),b=zx({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(g),b}},ST={kernelName:a.Blb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=r,u=a.ZSL.parseAxisParam(o,s.shape)[0],l=a.C0T.prepareSplitSize(s,i,u),c=s.shape.length,d=new Array(c).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const r=Gw({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},IT="return sqrt(x);",TT=_x({opSnippet:IT,packedOpSnippet:IT,cpuKernelImpl:zy}),CT={kernelName:a.dFH,backendName:"webgl",kernelFunc:TT},NT=_x({opSnippet:"return x * x;"}),AT={kernelName:a.M6A,backendName:"webgl",kernelFunc:NT},$T="return (a - b) * (a - b);",_T=Ex({opSnippet:$T,packedOpSnippet:$T}),ET={kernelName:a.Ddj,backendName:"webgl",kernelFunc:_T},RT={kernelName:a.GZp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(s.dataId),o=a.C0T.fromUint8ToStringArray(i),u=Py(o,"string",r);return n.makeTensorInfo(s.shape,"string",u)}},FT={kernelName:a.pnw,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=ax+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new rx(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class DT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Fb(n.length),s=Fb(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const LT={kernelName:a.UcO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:w,strides:v}=a.Kro.sliceInfo(s.shape,i,o,u,l,c,d,h,p);let k;if(g)k=zx({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||y){a.ZSL.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=a.Kro.computeOutShape(x,w,v),t=Gw({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=zx({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,a.ra8)(s.shape,s.dtype,e),r=Wy(f,t,v,x);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new DT(x,v,f);k=n.runWebGLProgram(e,[s],s.dtype)}const S=zx({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}},MT={kernelName:a.YAb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=By(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},OT={kernelName:a.iW0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=Uy(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},zT={kernelName:a.$jE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=Vy(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},PT=_x({opSnippet:"return tan(x);"}),WT={kernelName:a.oFs,backendName:"webgl",kernelFunc:PT},BT=_x({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),UT={kernelName:a.iuW,backendName:"webgl",kernelFunc:BT},VT={kernelName:a.X4r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:i,updates:o}=t,{}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=a.C0T.calculateShapes(o,i,s.shape),p=[h/c,c];if(0===h)return n.makeTensorInfo(s.shape,i.dtype);const f=zx({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=zx({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),g=zx({inputs:{x:s},backend:n,attrs:{shape:p}}),b=new XI(l,u,f.shape.length,m.shape.length,d,p,!1,!0),y=n.runWebGLProgram(b,[m,f,g],g.dtype),x=zx({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),x}};class GT{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Fb(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function ZT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>a.ZSL.decodeString(e))):e,r=(0,a.ra8)(s.shape,s.dtype,t),o=Zy(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new GT(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const HT={kernelName:a.FAs,backendName:"webgl",kernelFunc:ZT};class KT{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class jT{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function qT(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function QT(e){let t=1;for(;t<e;)t*=2;return t}const YT={kernelName:a.TBb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:o}=r,u=(0,a._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,a._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([s])||d<u||i>l){const e=n.readSync(s.dataId),[t,r]=Hy(e,c,s.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[s,Ak({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(s):s,m=a.ZSL.sizeFromShape(c)/d,g=zx({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&qT(n,f);const b=QT(i),y=QT(d);let x=null;const w=()=>null===x?[g,g]:[g,x],v=(e,t,r)=>{const a=w(),s=new KT(r),i=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,a,"int32",i),qT(n,o)};for(let e=1;e<b;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[m,y])}for(let e=y;e>b;e/=2){const t=w(),r=new jT([m,e/2]),a=[[d],[null===x?1:0],[b]],s=x;x=n.runWebGLProgram(r,t,"int32",a),qT(n,s);const i=b/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,x.shape)}let k=x;x=Gw({inputs:{x},backend:n,attrs:{begin:0,size:[m,i]}}),qT(n,k);let S=Kk({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});qT(n,g);const I=c.slice(0,-1);I.push(i),k=x,x=zx({inputs:{x},attrs:{shape:I},backend:n}),qT(n,k);const T=S;return S=zx({inputs:{x:S},attrs:{shape:I},backend:n}),qT(n,T),[S,x]}};class XT{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const JT={kernelName:a.dLy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=new XT(d,h,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[a,s],"float32")}},eC={kernelName:a.EwU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;gb(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=jy(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},tC={kernelName:a.dXR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=Gw({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=zx({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class nC{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const rC=[Yx,Jx,tw,rw,iw,lw,cw,dw,bw,yw,ww,kw,Iw,Cw,Aw,Ew,Rw,Lw,Mw,Ow,Ww,Hw,Kw,jw,qw,ev,rv,iv,kx,lv,bv,Tv,_v,Rv,Fv,Dv,Lv,Ov,Pv,Bv,Kv,jv,qv,Yv,ek,rk,ak,ik,uk,lk,dk,hk,fk,gk,yk,wk,Sk,Ck,$k,Ek,Dk,Mk,Pk,Uk,Vk,Zk,jk,Qk,Xk,wx,Jk,fv,tS,rS,sS,Tx,oS,lS,cS,hS,fS,gS,yS,wS,SS,TS,NS,$S,_S,ES,DS,LS,MS,OS,zS,WS,VS,ZS,eI,Ox,nI,aI,iI,uI,Yw,cI,pI,fI,yI,wI,Ax,vI,kI,SI,II,CI,Jw,jS,AI,_I,RI,Px,LI,OI,WI,UI,ZI,KI,qI,YI,eT,nT,aT,iT,uT,cT,hT,fT,Zw,JS,gT,bT,yT,xT,wT,vT,kT,ST,CT,AT,ET,RT,FT,LT,MT,OT,zT,YS,Kx,WT,UT,VT,HT,YT,JT,qx,eC,tC,{kernelName:a.pPe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:o}=r,u=s.shape.length,l=[];let c=0;const d=a.C0T.getAxesPermutation([c],u);let h=s;null!=d&&(h=jx({inputs:{x:s},backend:n,attrs:{perm:d}}),l.push(h),c=a.C0T.getInnerMostAxes(1,u)[0]);const p=a.C0T.segment_util.computeOutShape(h.shape,c,o),f=a.ZSL.sizeFromShape([h.shape[c]]),m=zx({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,a.chL)(s.dtype),b=(e,t,r,s,i)=>{const o=e.shape[0],u=e.shape[1],c=a.C0T.segment_util.segOpComputeOptimalWindowSize(u,i),d=new nC({windowSize:c,inSize:u,batchSize:o,numSegments:i},t),h=n.compileAndRun(d,[e,r],s);if(l.push(h),h.shape[1]===i)return h;const p=TI({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=ZT({inputs:{x:p},backend:n,attrs:{reps:[u/c]}});return l.push(p),l.push(f),b(h,t,f,s,i)},y=zx({inputs:{x:b(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:p}});let x=y;if(null!=d){l.push(y);const e=a.C0T.getUndoAxesPermutation(d);x=jx({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},hI];for(const e of rC)(0,a.tAK)(e);a.bgA},4394:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({prelu_:function(e,t){const n={x:(0,s.YT)(e,"x","prelu"),alpha:(0,s.YT)(t,"alpha","prelu")};return r.T2.runKernel(a.Ncv,n)}})},4530:()=>{},4711:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(929),u=n(2302);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,s.YT)(e,"images","resizeBilinear");i.vA(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.vA(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.vA(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,d=!1;3===l.rank&&(d=!0,c=(0,u.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.T2.runKernel(a.hgw,h,p);return d?(0,u.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},4801:function(e,t,n){var r;!function(a,s,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),d=2*c,h=255;function p(e,t,n){var r=[],h=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,h,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),s),e.exports){e.exports=p;try{o=n(1234)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},4826:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(5119);const o=(0,n(929).op)({tile_:function(e,t){const n=(0,s.YT)(e,"x","tile","string_or_numeric");i.vA(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.T2.runKernel(a.FAs,o,u)}})},4888:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({abs_:function(e){const t=(0,s.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.T2.runKernel(a.$zE,e)}{const e={x:t};return r.T2.runKernel(a.ljI,e)}}})},4969:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>i,computeFlatOffset:()=>x,computeOutShape:()=>u,getNormalizedAxes:()=>h,isSliceContinous:()=>y,maskToAxes:()=>o,parseSliceParams:()=>w,sliceInfo:()=>v,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>b,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var r=n(5119);const a=-2,s=-1;function i(e,t,n){const a=e.shape.length;r.vA(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.vA(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.vA(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function o(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function u(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function l(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function c(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function h(e,t,n,r,a,s,i,o,u){const c=e.length;let d=new Array(c),h=new Array(c),y=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;d=p(i,u,c,r,e),h=f(o,u,c,a,e),y=l(s,u,c,e)}else for(let t=0;t<c;t++)d[t]=g(i,r,s,e,t,u),h[t]=b(o,a,s,e,t,u),y[t]=m(s,t,u);return{begin:d,end:h,strides:y}}function p(e,t,n,r,a){const s=[...a],i=d(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=c(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function f(e,t,n,a,s){const i=[...s],o=d(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=c(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=r.qE(0,i[e],s[e])}return i}function m(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return o<0&&(o+=l),o=r.qE(0,o,l-1),o}function b(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return o<0&&(o+=l),o=u>0?r.qE(0,o,l):r.qE(-1,o,l-1),o}function y(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function x(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function w(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.vA(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,i]}function v(e,t,n,r,i,o,u,l,c){let d;if(null==r?(d=new Array(t.length),d.fill(1)):d=r,null!=u&&u&u-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:i,endMask:o,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:c};for(let e=0;e<p.dims;e++)h&&1<<e&l&&p.numAddAxisAfterEllipsis++,1<<e&u&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,f);let m=!0,g=!0,b=!0;const y=[],x=[];for(let t=0;t<e.length;++t){if(0===f.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(f.shrinkAxisMask&1<<t),r=e[t];if(-1===r){y.push(n?1:-1);continue}const a=[f.beginMask&1<<t,f.endMask&1<<t],s=[f.strides[t]>0?0:-1,f.strides[t]>0?r:r-1];if(n&&f.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&1===f.strides[t];const i=!!(f.beginMask&1<<t&&f.endMask&1<<t);if(f.beginValid&&f.endValid){if(n){const e=f.begin[t]<0?r+f.begin[t]:f.begin[t];if(f.begin[t]=e,f.end[t]=f.begin[t]+1,e<0||e>=r)throw Error(`slice index ${f.begin[t]} of dimension ${t} out of bounds.`)}else f.begin[t]=k(f.begin[t],0,f.strides[t],r,a,s),f.end[t]=k(f.end[t],1,f.strides[t],r,a,s);const e=1===f.strides[t]&&0===f.begin[t]&&f.end[t]===r;m=m&&e,g=g&&(0===t&&1===f.strides[t]||e)}else m=m&&1===f.strides[t]&&i,g=g&&(0===t&&1===f.strides[t]||i);let o,u=!1;if(f.beginValid&&f.endValid?(o=f.end[t]-f.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=f.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=f.strides[t]<0?0:Math.trunc(o/f.strides[t])+(o%f.strides[t]!=0?1:0),y.push(e)}else y.push(-1)}for(let e=0;e<f.finalShapeGatherIndices.length;++e){const t=f.finalShapeGatherIndices[e];t>=0?x.push(y[t]):t===a&&x.push(1)}return{finalShapeSparse:x.filter(((e,t)=>f.finalShapeGatherIndices[t]!==a)),finalShape:x,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},5030:(e,t,n)=>{"use strict";n.d(t,{x:()=>u});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(125);const u=(0,n(929).op)({concat_:function(e,t=0){(0,i.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.o)(n[0]);const u=n,l={axis:t};return r.T2.runKernel(a.$dB,u,l)}})},5040:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({imag_:function(e){const t={input:(0,s.YT)(e,"input","imag")};return r.T2.runKernel(a.dv8,t)}})},5119:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){d(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=e=>0,n,r){return new Promise(((a,s)=>{let i=0;const o=()=>{if(e())return void a();i++;const u=t(i);null!=n&&i>=n?s():null!=r?r(o,u):setTimeout(o,u)};o()}))}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function T(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function C(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:T(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){return A(e,t)}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function E(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function D(e){return"string"==typeof e||e instanceof String}function L(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function O(e){return Array.isArray(e)?O(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":D(e)?"string":L(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function B(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=B(e+t*o,i,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return B(0,e,t,n)}function V(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=Z(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function K(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function j(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function q(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{Ab:()=>A,BE:()=>E,E6:()=>y,Et:()=>M,FZ:()=>G,HO:()=>p,Kg:()=>D,Lm:()=>L,O3:()=>h,P8:()=>v,SA:()=>K,SL:()=>F,Sf:()=>m,Tn:()=>z,Ty:()=>Z,Ur:()=>W,X$:()=>O,XT:()=>I,Y6:()=>T,Ze:()=>f,_k:()=>q,_q:()=>S,a0:()=>a,av:()=>k,c7:()=>H,ce:()=>N,cz:()=>u,eV:()=>i,e_:()=>g,gS:()=>w,gx:()=>C,jv:()=>R,k4:()=>r,lK:()=>P,nd:()=>$,o2:()=>V,oO:()=>c,qE:()=>s,r1:()=>b,sX:()=>j,so:()=>l,vA:()=>d,wg:()=>o,xn:()=>_,yL:()=>Q,ym:()=>x,yw:()=>U})},5149:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>r,uI:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},5207:(e,t,n)=>{"use strict";n.d(t,{Y:()=>u});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(9809);const u=(0,n(929).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");i.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.w)(t,"float32"));const n={x:t};return r.T2.runKernel(a._s9,n)}})},5248:(e,t,n)=>{"use strict";n.d(t,{H:()=>l});var r=n(1585),a=n(5441),s=n(5119),i=n(7195),o=n(929),u=n(2302);const l=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,l,c="NHWC",d){let h=e;3===e.rank&&(h=(0,u.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,u.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),s.vA(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),s.vA(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?h.shape[3]:h.shape[1],m="NHWC"===c?p.shape[3]:p.shape[1];s.vA(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),s.vA(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.s_("conv2dDerFilter",l,d);const g={x:h,dy:p},b={strides:o,pad:l,dataFormat:c,dimRoundingMode:d,filterShape:n};return r.T2.runKernel(a.rFm,g,b)}})},5281:()=>{},5287:(e,t,n)=>{"use strict";n.d(t,{AS:()=>c,DZ:()=>l,Gc:()=>p,Hi:()=>o,Hs:()=>g,aC:()=>d,gJ:()=>m,jh:()=>h,jz:()=>f,m1:()=>u});var r=n(1585),a=n(6574),s=n(259),i=n(565);function o(){return r.T2}function u(){return r.T2.memory()}function l(e,t){return r.T2.tidy(e,t)}function c(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function d(e){return r.T2.keep(e)}function h(e){return r.T2.setBackend(e)}function p(){return r.T2.ready()}function f(){return r.T2.backendName}function m(e,t,n=1){return r.T2.registerBackend(e,t,n)}function g(){return r.T2.backend}(0,s.B4)((function(e){(0,a._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},5441:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>R,$jE:()=>Jt,$zE:()=>E,A1h:()=>M,A8B:()=>Pt,BK4:()=>fn,BLA:()=>qe,BRl:()=>se,Blb:()=>Wt,BoJ:()=>Vt,BxF:()=>de,C8s:()=>Ut,CQC:()=>dt,Cg$:()=>_e,CwD:()=>Ne,D7i:()=>St,Ddj:()=>Kt,Dr:()=>mn,DvZ:()=>Zt,E3$:()=>Se,EkD:()=>o,ElG:()=>pe,EwU:()=>un,FAs:()=>rn,FCQ:()=>vt,FSt:()=>l,Fin:()=>Mt,GZp:()=>qt,HNs:()=>I,Ik2:()=>k,J3C:()=>Ft,JiE:()=>Et,Jp_:()=>c,KXH:()=>N,L6G:()=>Gt,LB5:()=>T,LDN:()=>Pe,LG0:()=>Ke,LRy:()=>ft,LWX:()=>rt,LXA:()=>Fe,M6A:()=>jt,MRQ:()=>V,Mn0:()=>P,MnK:()=>W,N4F:()=>S,Ncv:()=>ut,O4G:()=>ge,OAQ:()=>we,ODT:()=>it,OMN:()=>i,ORI:()=>q,PH8:()=>s,P_L:()=>kt,Pah:()=>ne,PbM:()=>en,Q6t:()=>pt,QDP:()=>A,QKF:()=>h,Qgm:()=>te,R23:()=>bt,RUm:()=>Ee,RW8:()=>De,RXX:()=>Be,SDM:()=>et,SQl:()=>ce,T7M:()=>bn,TBb:()=>an,TL8:()=>Ge,TMz:()=>Z,TOR:()=>Tt,ToN:()=>Oe,TyE:()=>f,UcO:()=>Qt,VAI:()=>ze,VCH:()=>y,Vvy:()=>a,WT3:()=>Qe,WuN:()=>zt,X$8:()=>K,X0$:()=>Te,X4r:()=>Nt,XQy:()=>xt,XhZ:()=>be,XmO:()=>J,YAb:()=>Yt,YVe:()=>Dt,ZgB:()=>he,Zl4:()=>tt,_s9:()=>ae,aAr:()=>gn,awo:()=>pn,bP9:()=>Y,cHb:()=>Ve,cS:()=>x,dFH:()=>Ot,dLy:()=>sn,dXR:()=>ln,dv8:()=>ve,e0f:()=>nt,epO:()=>p,fUj:()=>gt,g5A:()=>Ze,gC7:()=>z,gIW:()=>ke,hVg:()=>It,hgw:()=>wt,ho8:()=>b,hql:()=>Rt,huO:()=>mt,i5R:()=>fe,iGz:()=>O,iPs:()=>Ie,iW0:()=>Xt,iuW:()=>nn,jAQ:()=>v,jM4:()=>Me,jOE:()=>yt,jfg:()=>L,jgd:()=>Ht,jj_:()=>B,jxD:()=>Q,kdj:()=>lt,l0G:()=>Xe,l6P:()=>$t,lLS:()=>ye,lNG:()=>He,ljI:()=>r,lxb:()=>g,lzr:()=>xe,mH5:()=>ht,mIA:()=>Ce,mM$:()=>st,mnI:()=>Ae,mxL:()=>me,nVu:()=>j,nY8:()=>U,nZd:()=>Re,oFs:()=>tn,oJ2:()=>ct,ox3:()=>ie,p2J:()=>F,pJc:()=>Ct,pPe:()=>cn,p_m:()=>d,pk0:()=>X,pnw:()=>hn,pr3:()=>_,pyJ:()=>ot,rFG:()=>Bt,rFm:()=>D,rGP:()=>le,rsH:()=>re,sDr:()=>ee,t3d:()=>We,tG8:()=>$e,tGH:()=>H,u$b:()=>_t,u8Z:()=>u,uWl:()=>At,urI:()=>at,vI1:()=>Lt,vaV:()=>$,vj7:()=>C,wNW:()=>G,wwC:()=>w,wx0:()=>on,x7F:()=>je,xJ3:()=>dn,xu7:()=>Ye,ySp:()=>Ue,ybN:()=>oe,ybj:()=>ue,ylV:()=>Je,zP9:()=>m,zfU:()=>Le});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",b="AvgPool",y="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",S="Bincount",I="BitwiseAnd",T="BroadcastTo",C="BroadcastArgs",N="Cast",A="Ceil",$="ClipByValue",_="Complex",E="ComplexAbs",R="Concat",F="Conv2D",D="Conv2DBackpropFilter",L="Conv2DBackpropInput",M="Conv3D",O="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",P="Cos",W="Cosh",B="Cumprod",U="Cumsum",V="CropAndResize",G="DenseBincount",Z="DepthToSpace",H="DepthwiseConv2dNative",K="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",q="Diag",Q="Dilation2D",Y="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",ae="Erf",se="Equal",ie="Exp",oe="ExpandDims",ue="Expm1",le="FFT",ce="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",be="Greater",ye="GreaterEqual",xe="Identity",we="IFFT",ve="Imag",ke="IsFinite",Se="IsInf",Ie="IsNan",Te="LeakyRelu",Ce="Less",Ne="LessEqual",Ae="LinSpace",$e="Log",_e="Log1p",Ee="LogicalAnd",Re="LogicalNot",Fe="LogicalOr",De="LogicalXor",Le="LogSoftmax",Me="LRN",Oe="LRNGrad",ze="Max",Pe="Maximum",We="MaxPool",Be="MaxPoolGrad",Ue="MaxPool3D",Ve="MaxPool3DGrad",Ge="MaxPoolWithArgmax",Ze="Mean",He="Min",Ke="Minimum",je="MirrorPad",qe="Mod",Qe="Multinomial",Ye="Multiply",Xe="Neg",Je="NotEqual",et="NonMaxSuppressionV3",tt="NonMaxSuppressionV4",nt="NonMaxSuppressionV5",rt="OnesLike",at="OneHot",st="Pack",it="PadV2",ot="Pow",ut="Prelu",lt="Prod",ct="RaggedGather",dt="RaggedRange",ht="RaggedTensorToTensor",pt="Range",ft="Real",mt="Reciprocal",gt="Relu",bt="Reshape",yt="ResizeNearestNeighbor",xt="ResizeNearestNeighborGrad",wt="ResizeBilinear",vt="ResizeBilinearGrad",kt="Relu6",St="Reverse",It="Round",Tt="Rsqrt",Ct="ScatterNd",Nt="TensorScatterUpdate",At="SearchSorted",$t="Select",_t="Selu",Et="Slice",Rt="Sin",Ft="Sinh",Dt="Sign",Lt="Sigmoid",Mt="Softplus",Ot="Sqrt",zt="Sum",Pt="SpaceToBatchND",Wt="SplitV",Bt="Softmax",Ut="SparseFillEmptyRows",Vt="SparseReshape",Gt="SparseSegmentMean",Zt="SparseSegmentSum",Ht="SparseToDense",Kt="SquaredDifference",jt="Square",qt="StaticRegexReplace",Qt="StridedSlice",Yt="StringNGrams",Xt="StringSplit",Jt="StringToHashBucketFast",en="Sub",tn="Tan",nn="Tanh",rn="Tile",an="TopK",sn="Transform",on="Transpose",un="Unique",ln="Unpack",cn="UnsortedSegmentSum",dn="ZerosLike",hn="Step",pn="FromPixels",fn="RotateWithOffset",mn="_FusedMatMul",gn="FusedConv2D",bn="FusedDepthwiseConv2D"},5535:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var r=n(3347);function a(e,t){const n=r.ZSL.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.ZSL.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},5537:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({zerosLike_:function(e){const t={x:(0,s.YT)(e,"x","zerosLike")};return r.T2.runKernel(a.xJ3,t)}})},5606:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({floor_:function(e){const t={x:(0,s.YT)(e,"x","floor","float32")};return r.T2.runKernel(a.ZgB,t)}})},5661:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({pad_:function(e,t,n=0){const i=(0,s.YT)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.T2.runKernel(a.ODT,u,o)}})},5685:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},5702:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var r=n(3879),a=n(9171);function s(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.Q)(e,[],[],t)}},5703:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(1585),a=n(5441),s=n(565),i=n(8189);const o=(0,n(929).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i.YT)(e,"a","matMul"),l=(0,i.YT)(t,"b","matMul");[u,l]=(0,s.makeTypesMatch)(u,l);const c={a:u,b:l},d={transposeA:n,transposeB:o};return r.T2.runKernel(a.jAQ,c,d)}})},5793:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var r=n(1585),a=n(8189);const s=(0,n(929).op)({square_:function(e){const t=(0,a.YT)(e,"x","square");return r.T2.runKernel("Square",{x:t},{})}})},5817:()=>{},5912:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({round_:function(e){const t={x:(0,s.YT)(e,"x","round")};return r.T2.runKernel(a.hVg,t)}})},5932:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(8189),a=n(5119),s=n(929),i=n(2302);const o=(0,s.op)({squeeze_:function(e,t){const n=(0,r.YT)(e,"x","squeeze","string_or_numeric");return(0,i.t)(n,(0,a.gx)(n.shape,t).newShape)}})},6030:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({softplus_:function(e){const t={x:(0,s.YT)(e,"x","softplus")};return r.T2.runKernel(a.Fin,t)}})},6111:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(1585),a=n(5441),s=n(5119);function i(e,t,n){(0,s.SA)(e);const i={shape:e,value:t,dtype:n=n||(0,s.X$)(t)};return r.T2.runKernel(a.SQl,{},i)}},6325:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({selu_:function(e){const t={x:(0,s.YT)(e,"x","selu")};return r.T2.runKernel(a.u$b,t)}})},6346:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({softmax_:function(e,t=-1){const n=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.T2.runKernel(a.rFG,i,o)}})},6448:(e,t,n)=>{"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>r})},6508:(e,t,n)=>{"use strict";n.d(t,{I:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(2198);const u=(0,n(929).op)({lessEqual_:function(e,t){let n=(0,i.YT)(e,"a","lessEqual","string_or_numeric"),u=(0,i.YT)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.T2.runKernel(a.CwD,l)}})},6512:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({split_:function(e,t,n=0){const i={x:(0,s.YT)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.T2.runKernel(a.Blb,i,o)}})},6522:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({neg_:function(e){const t={x:(0,s.YT)(e,"x","neg")};return r.T2.runKernel(a.l0G,t)}})},6554:(e,t,n)=>{"use strict";n.d(t,{zj:()=>pa});var r,a,s=n(3347);let i;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(r||(r={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(a||(a={}));const o={kernelName:s.Dr,backendName:"wasm",setupFunc:function(e){i=e.wasm.cwrap(s.Dr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:o,b:u,bias:l,preluActivationWeights:c}=t;if("float32"!==o.dtype||"float32"!==u.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:d,transposeB:h,activation:p,leakyreluAlpha:f}=r,m=n.dataIdMap.get(o.dataId).id,g=n.dataIdMap.get(u.dataId).id;let b=0;if(null!=l){const e=n.dataIdMap.get(l.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);b=e.id}const y=null==c?0:n.dataIdMap.get(c.dataId).id,x=a[p];if(null==x)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const w=d?o.shape[2]:o.shape[1],v=h?u.shape[1]:u.shape[2],k=s.ZEY.assertAndGetBroadcastShape(o.shape.slice(0,-2),u.shape.slice(0,-2)),S=n.makeOutput([...k,w,v],o.dtype),I=n.dataIdMap.get(S.dataId).id,T=new Uint8Array(new Int32Array(o.shape).buffer),C=new Uint8Array(new Int32Array(u.shape).buffer);return i(m,T,o.shape.length,g,C,u.shape.length,d,h,x,b,y,f||0,I),S}};function u(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:{x:i}}=e,o=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,t||i.dtype),l=a.dataIdMap.get(u.dataId).id;return 0===s.ZSL.sizeFromShape(u.shape)||n(o,r[i.dtype],l),u}}}const l=u(s.ljI),c=u(s.Vvy),d=u(s.PH8);function h(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:i}=e,{a:o,b:u}=i,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=null!=n?n:o.dtype,h=s.C0T.assertAndGetBroadcastShape(o.shape,u.shape),p=t.makeOutput(h,d);if(0===s.ZSL.sizeFromShape(h))return p;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=t.dataIdMap.get(p.dataId).id;return a(l,f,o.shape.length,c,m,u.shape.length,r[o.dtype],g),p}}}const p=h(s.OMN);let f;const m={kernelName:s.EkD,backendName:"wasm",setupFunc:function(e){f=e.wasm.cwrap(s.EkD,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===s.ZSL.sizeFromShape(a.shape))return a;const i=t.map((e=>n.dataIdMap.get(e.dataId).id)),o=new Uint8Array(new Int32Array(i).buffer),u=n.dataIdMap.get(a.dataId).id;return f(o,i.length,r[a.dtype],u),a}};function g(e){const{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return(0,s.OEK)(n.readSync(t.dataId),t.shape,t.dtype);const r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const b={kernelName:s.lzr,backendName:"wasm",kernelFunc:g};let y;function x(e){const{inputs:t,backend:n,attrs:a}=e,[s,i]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,a.perm);let o=!0;for(let e=0;e<i.length;e++)i[e]!==e&&(o=!1);const u=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){const e=g({inputs:t,backend:n});return e.shape=u,e}const c=n.makeOutput(u,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),f=new Uint8Array(new Int32Array(l.shape).buffer);return y(d,f,l.shape.length,r[l.dtype],h,p,i.length),c}const w={kernelName:s.wx0,backendName:"wasm",kernelFunc:x,setupFunc:function(e){y=e.wasm.cwrap(s.wx0,null,["number","array","number","number","number","array","number"])}};function v(e,t,n){const r=e.shape,a=e.shape.length,i=s.ZSL.parseAxisParam(t,r);let o=i;const u=s.C0T.getAxesPermutation(o,a);let l=null,c=!1;if(null!=u){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[u[e]];o=s.C0T.getInnerMostAxes(o.length,a),l=x({inputs:{x:e},attrs:{perm:u},backend:n});const i=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==i&&(c=!0)}return{transposed:l,originalAxes:i,axes:o,inputWasTransposed:c}}let k;const S={kernelName:s.u8Z,backendName:"wasm",setupFunc:function(e){k=e.wasm.cwrap(s.u8Z,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=v(o,a,t);p&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.C0T.assertAxesAreInnerMostDims("all",d,f);const[m,g]=s.C0T.computeOutAndReduceShapes(l.shape,d),b=s.ZSL.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(0!==s.ZSL.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;k(u,b,e)}if(p&&t.disposeData(c.dataId),i){const e=s.C0T.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};let I;const T={kernelName:s.FSt,backendName:"wasm",setupFunc:function(e){I=e.wasm.cwrap(s.FSt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=v(o,a,t);p&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.C0T.assertAxesAreInnerMostDims("any",d,f);const[m,g]=s.C0T.computeOutAndReduceShapes(l.shape,d),b=s.ZSL.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(0!==s.ZSL.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;I(u,b,e)}if(p&&t.disposeData(c.dataId),i){const e=s.C0T.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};function C(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){const{backend:n,inputs:a,attrs:i}=e,{axis:o}=i,{x:u}=a,l=n.dataIdMap.get(u.dataId).id;let c=l,d=u;const{transposed:h,axes:p,inputWasTransposed:f}=v(u,o,n);if(f){const e=n.dataIdMap.get(h.dataId).id;e!==l&&(d=h,c=e)}const m=d.shape.slice(0,-1),g=n.makeOutput(m,"int32"),b=n.dataIdMap.get(g.dataId).id,y=s.ZSL.sizeFromShape(g.shape),x=d.shape[p[0]];return t(c,r[d.dtype],y,x,b),f&&n.disposeData(h.dataId),g}}}const N=C(s.Jp_),A=C(s.p_m),$=u(s.QKF),_=u(s.epO),E=u(s.TyE),R=h(s.lxb),F=u(s.zP9);let D;const L={kernelName:s.ho8,backendName:"wasm",setupFunc:function(e){D=e.wasm.cwrap(s.ho8,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,d=s.C0T.computePool2DInfo(a.shape,o,u,1,l,c),h=d.filterHeight,p=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,g=d.padInfo.bottom,b=d.padInfo.left,y=d.strideHeight,x=d.strideWidth,w=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const v=r.makeOutput(d.outShape,"float32"),k=r.dataIdMap.get(v.dataId).id;return D(i,a.shape[0],a.shape[1],a.shape[2],h,p,f,m,g,b,y,x,w,k),v}};let M;const O={kernelName:s.cS,backendName:"wasm",setupFunc:function(e){M=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r,d=s.C0T.computePool3DInfo(a.shape,i,o,1,u,l,c),h=n.makeOutput(d.outShape,a.dtype);return M(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}};let z;const P={kernelName:s.wwC,backendName:"wasm",setupFunc:function(e){z=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=s.C0T.computePool3DInfo(i.shape,o,u,1,l,c),h=n.makeOutput(i.shape,i.dtype);return z(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),h}};let W;const B={kernelName:s.VCH,backendName:"wasm",setupFunc:function(e){W=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l}=r,c=s.C0T.computePool2DInfo(i.shape,o,u,1,l),d=n.makeOutput(i.shape,i.dtype);return W(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left,c.filterHeight,c.filterWidth),d}};function U(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,i=s.ZSL.sizeFromShape(r.shape),o=s.ZSL.inferFromImplicitShape(a,i);return s.ZSL.assert(i===s.ZSL.sizeFromShape(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const V={kernelName:s.R23,backendName:"wasm",kernelFunc:U};let G;const Z={kernelName:s.jAQ,backendName:"wasm",setupFunc:function(e){G=e.wasm.cwrap(s.jAQ,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i}=t,{transposeA:o,transposeB:u}=r;if("float32"!==a.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=a.shape.length,c=i.shape.length,d=o?a.shape[l-2]:a.shape[l-1],h=u?i.shape[c-1]:i.shape[c-2],p=o?a.shape[l-1]:a.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),b=s.ZSL.sizeFromShape(m),y=s.ZSL.sizeFromShape(g),x=s.ZEY.assertAndGetBroadcastShape(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,f]);s.ZSL.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const w=u?[y,f,h]:[y,h,f],v=U({inputs:{x:a},backend:n,attrs:{shape:o?[b,d,p]:[b,p,d]}}),k=U({inputs:{x:i},backend:n,attrs:{shape:w}}),S=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(k.dataId).id,T=o?v.shape[2]:v.shape[1],C=u?k.shape[1]:k.shape[2],N=Math.max(b,y),A=n.makeOutput([N,T,C],v.dtype),$=n.dataIdMap.get(A.dataId).id,_=new Uint8Array(new Int32Array(v.shape).buffer),E=new Uint8Array(new Int32Array(k.shape).buffer);return G(S,_,v.shape.length,I,E,k.shape.length,o,u,$),n.disposeData(v.dataId),n.disposeData(k.dataId),A.shape=x,A}};var H=n(7906);function K(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[i,o]=s.Kro.parseSliceParams(t,n,r),u=s.Kro.isSliceContinous(t.shape,i,o),l=a.readSync(t.dataId),c=a.makeOutput(o,t.dtype),d=s.ZSL.computeStrides(t.shape),h=a.dataIdMap.get(c.dataId);if(u){const e=s.Kro.computeFlatOffset(i,d);return"string"===t.dtype?h.stringBytes=l.slice(e,e+s.ZSL.sizeFromShape(o)):a.typedArrayFromHeap(c).set(l.subarray(e,e+s.ZSL.sizeFromShape(o))),c}if("string"===t.dtype){const e=(0,H.HS)(l,i,o,t.shape,t.dtype);return h.stringBytes=e,c}const p=a.typedArrayFromHeap(c),f=t.shape.length;if(2===f)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,d[0],p,i,o);else if(3===f)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(l,d[0],d[1],p,i,o);else if(4===f)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],h=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<h;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],p,i,o);else{const e=(0,H.HS)(l,i,o,t.shape,t.dtype);p.set(e)}return c}const j={kernelName:s.JiE,backendName:"wasm",kernelFunc:K},q={kernelName:s.Ik2,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r,u=i.reduce(((e,t)=>e*t)),l=s.C0T.getReshaped(a.shape,i,u),c=s.C0T.getPermuted(l.length,i.length),d=s.C0T.getReshapedPermuted(a.shape,i,u),h=s.C0T.getSliceBeginCoords(o,i.length),p=s.C0T.getSliceSize(d,o,i.length),f=U({inputs:{x:a},backend:n,attrs:{shape:l}}),m=x({inputs:{x:f},backend:n,attrs:{perm:c}}),g=U({inputs:{x:m},backend:n,attrs:{shape:d}}),b=K({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(g.dataId),b}};let Q;const Y={kernelName:s.N4F,backendName:"wasm",setupFunc:function(e){Q=e.wasm.cwrap(s.N4F,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:s,weights:i}=n,{size:o}=a,u=0!==i.shape.reduce(((e,t)=>e*t),1),l=1===s.shape.length?[o]:[s.shape[0],o],c=t.makeOutput(l,i.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return Q(d(s),o,u,d(i),r[i.dtype],d(c)),c}},X=h(s.HNs),J={kernelName:s.vj7,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.typedArrayFromHeap(r),o=n.typedArrayFromHeap(a),u=s.C0T.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeOutput([u.length],"int32",void 0,new Int32Array(u))}};function ee(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const te={kernelName:s.KXH,backendName:"wasm",kernelFunc:ee},ne=u(s.QDP);let re;const ae={kernelName:s.vaV,backendName:"wasm",setupFunc:function(e){re=e.wasm.cwrap(s.vaV,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return re(o,s,i,l),u}};var se=n(7763);function ie(e){const{inputs:t,backend:n}=e,r=s.ZSL.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map((e=>e.shape));s.C0T.assertParamsConsistent(a,r);let i=s.C0T.computeOutShape(t.map((e=>e.shape)),r);const o=t.filter((e=>s.ZSL.sizeFromShape(e.shape)>0));if(1===o.length)return g({inputs:{x:o[0]},backend:n});const u=n.makeOutput(i,t[0].dtype);if(0===s.ZSL.sizeFromShape(i))return u;if("string"===o[0].dtype){const e=o.map((e=>{const t=s.ZSL.sizeFromShape(e.shape.slice(r));return U({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));i=s.C0T.computeOutShape(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],c=(0,se.h)(a,i,t[0].dtype,l),d=s.C0T.computeOutShape(o.map((e=>e.shape)),r);return u.shape=d,n.dataIdMap.get(u.dataId).stringBytes=s.C0T.fromStringArrayToUint8(c),e.forEach((e=>n.disposeData(e.dataId))),u}const l=s.ZSL.sizeFromShape(o[0].shape.slice(0,r));let c=0;const d=o.map((e=>{const t=s.ZSL.sizeFromShape(e.shape.slice(r));return c+=t,t})),h=o.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(u);for(let e=0;e<l;e++){let t=e*c;for(let n=0;n<h.length;n++){const r=d[n],a=e*r,s=h[n].subarray(a,a+r);p.set(s,t),t+=r}}return u}const oe={kernelName:s.$dB,backendName:"wasm",kernelFunc:ie};let ue;const le={kernelName:s.p2J,backendName:"wasm",setupFunc:function(e){ue=e.wasm.cwrap(s.p2J,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:l,dilations:c,pad:d,dimRoundingMode:h,dataFormat:p}=n,f=s.C0T.convertConv2DDataFormat(p),m=s.C0T.computeConv2DInfo(a.shape,i.shape,l,c,d,h,!1,f),g=m.filterHeight,b=m.filterWidth,y=m.padInfo.top,x=m.padInfo.right,w=m.padInfo.bottom,v=m.padInfo.left,k=m.dilationHeight,S=m.dilationWidth,I=m.strideHeight,T=m.strideWidth,C=m.inChannels,N=m.outChannels,A="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(m.outShape,"float32"),_=r.dataIdMap.get($.dataId).id;return ue(o,a.shape[0],a.shape[1],a.shape[2],u,g,b,y,x,w,v,A,k,S,I,T,C,N,_),$}};let ce;const de={kernelName:s.jfg,backendName:"wasm",setupFunc:function(e){ce=e.wasm.cwrap(s.jfg,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:i}=n,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:d}=r,h=s.C0T.convertConv2DDataFormat(l),p=s.C0T.computeConv2DInfo(d,i.shape,o,1,u,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:S,strideWidth:I}=p,T=m-1-p.padInfo.top,C=g-1-p.padInfo.left,N="channelsLast"===p.dataFormat,A=s.ZSL.computeStrides(p.inShape),$=s.ZSL.computeStrides(a.shape),[_,E,R]=s.ZSL.computeStrides(i.shape),F=A[0],D=N?A[1]:A[2],L=N?A[2]:1,M=N?1:A[1],O=$[0],z=N?$[1]:$[2],P=N?$[2]:1,W=N?1:$[1],B=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(i.dataId).id;return ce(V,G,f,m,g,y,x,b,v,k,w,S,I,T,C,_,E,R,F,D,L,M,O,z,P,W,U),B}};let he;const pe={kernelName:s.A1h,backendName:"wasm",setupFunc:function(e){he=e.wasm.cwrap(s.A1h,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);const c=s.C0T.computeConv3DInfo(a.shape,i.shape,o,l,u),d=n.makeOutput(c.outShape,a.dtype);return he(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),d}};let fe;const me={kernelName:s.iGz,backendName:"wasm",setupFunc:function(e){fe=e.wasm.cwrap(s.iGz,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:u,filterShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);const c=s.C0T.computeConv3DInfo(a.shape,l,o,1,u),d=n.makeOutput(c.filterShape,i.dtype);return fe(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),d}};let ge;const be={kernelName:s.gC7,backendName:"wasm",setupFunc:function(e){ge=e.wasm.cwrap(s.gC7,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:o,strides:u,inputShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);const c=s.C0T.computeConv3DInfo(l,i.shape,u,1,o),d=n.makeOutput(c.inShape,a.dtype);return ge(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),d}},ye=u(s.Mn0),xe=u(s.MnK);var we;let ve;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(we||(we={}));const ke={kernelName:s.MRQ,backendName:"wasm",setupFunc:function(e){ve=e.wasm.cwrap(s.MRQ,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,h]=i,p=[c,d,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=ee({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,b=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return ve(g,b,y,c,v,d,h,we[a],s,w),null!=f&&t.disposeData(f.dataId),x}};let Se;const Ie={kernelName:s.jj_,backendName:"wasm",setupFunc:function(e){Se=e.wasm.cwrap(s.jj_,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,exclusive:u,reverse:l}=a,c=i.shape.length;s.ZSL.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumprod does not support ${i.dtype} tensors in the WASM backend`));const d=s.C0T.getAxesPermutation([o],c);let h=i;null!==d&&(h=x({inputs:{x:i},attrs:{perm:d},backend:n}));const p=s.C0T.getInnerMostAxes(1,c)[0];s.C0T.assertAxesAreInnerMostDims("cumprod",[p],c);const f=n.makeOutput(h.shape,h.dtype),m=h.shape[p],g=n.dataIdMap.get(h.dataId).id,b=n.dataIdMap.get(f.dataId).id;Se(g,u?1:0,l?1:0,m,b,r[i.dtype]);let y=f;return null!==d&&(y=x({inputs:{x:f},attrs:{perm:s.C0T.getUndoAxesPermutation(d)},backend:n}),n.disposeData(h.dataId),n.disposeData(f.dataId)),y}};let Te;const Ce={kernelName:s.nY8,backendName:"wasm",setupFunc:function(e){Te=e.wasm.cwrap(s.nY8,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,exclusive:u,reverse:l}=a,c=i.shape.length;s.ZSL.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumsum does not support ${i.dtype} tensors in the WASM backend`));const d=s.C0T.getAxesPermutation([o],c);let h=i;null!==d&&(h=x({inputs:{x:i},attrs:{perm:d},backend:n}));const p=s.C0T.getInnerMostAxes(1,c)[0];s.C0T.assertAxesAreInnerMostDims("cumsum",[p],c);const f=n.makeOutput(h.shape,h.dtype),m=h.shape[p],g=n.dataIdMap.get(h.dataId).id,b=n.dataIdMap.get(f.dataId).id;Te(g,u?1:0,l?1:0,m,b,r[i.dtype]);let y=f;return null!==d&&(y=x({inputs:{x:f},attrs:{perm:s.C0T.getUndoAxesPermutation(d)},backend:n}),n.disposeData(h.dataId),n.disposeData(f.dataId)),y}};let Ne;const Ae={kernelName:s.wNW,backendName:"wasm",setupFunc:function(e){Ne=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:s,weights:i}=n,{size:o,binaryOutput:u}=a,l=0!==i.shape.reduce(((e,t)=>e*t),1),c=1===s.shape.length?[o]:[s.shape[0],o],d=t.makeOutput(c,i.dtype);function h(e){return t.dataIdMap.get(e.dataId).id}return Ne(h(s),new Uint8Array(new Int32Array(s.shape).buffer),s.shape.length,o,l,h(i),r[i.dtype],u,h(d)),d}};let $e;const _e={kernelName:s.TMz,backendName:"wasm",setupFunc:function(e){$e=e.wasm.cwrap(s.TMz,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:i,dataFormat:o}=r,u=a.shape[0],l=("NHWC"===o?a.shape[1]:a.shape[2])*i,c=("NHWC"===o?a.shape[2]:a.shape[3])*i,d=("NHWC"===o?a.shape[3]:a.shape[1])/(i*i),h="NHWC"===o?[u,l,c,d]:[u,d,l,c],p=t.makeOutput(h,"float32"),f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(s.ZSL.computeStrides(a.shape)).buffer),g=new Uint8Array(new Int32Array(h).buffer),b=new Uint8Array(new Int32Array(s.ZSL.computeStrides(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return $e(f,i,"NHWC"===o?1:0,m,a.shape.length-1,g,b,h.length,y),p}};let Ee;const Re={kernelName:s.tGH,backendName:"wasm",setupFunc:function(e){Ee=e.wasm.cwrap(s.tGH,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:l,dilations:c,pad:d,dimRoundingMode:h}=n,p=null==c?[1,1]:c,f=s.C0T.computeConv2DInfo(a.shape,i.shape,l,p,d,h,!0),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,S=f.strideHeight,I=f.strideWidth,T=f.inChannels,C=f.outChannels,N="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const A=r.makeOutput(f.outShape,"float32"),$=r.dataIdMap.get(A.dataId).id;return Ee(o,a.shape[0],a.shape[1],a.shape[2],u,m,g,b,y,x,w,N,v,k,S,I,T,C,$),A}};let Fe;const De={kernelName:s.ORI,backendName:"wasm",setupFunc:function(e){Fe=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,i=s.ZSL.sizeFromShape(a.shape),o=n.makeOutput([...a.shape,...a.shape],a.dtype);return Fe(n.dataIdMap.get(a.dataId).id,r[a.dtype],i,n.dataIdMap.get(o.dataId).id),o}};let Le;const Me={kernelName:s.jxD,backendName:"wasm",setupFunc:function(e){Le=e.wasm.cwrap(s.jxD,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:o}=t,{strides:u,pad:l,dilations:c}=a;if(i.dtype!==o.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${i.dtype} and ${o.dtype}`);const d=s.C0T.computeDilation2DInfo(i.shape,o.shape,u,l,"NHWC",c),h=n.makeOutput(d.outShape,i.dtype);return Le(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(h.dataId).id,r[i.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}};let Oe;const ze={kernelName:s.pk0,backendName:"wasm",setupFunc:function(e){Oe=e.wasm.cwrap(s.pk0,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:o,dy:u}=t,{strides:l,pad:c,dilations:d}=a;if(i.dtype!==o.dtype||i.dtype!==u.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${i.dtype}, ${o.dtype}, and ${u.dtype}`);const h=s.C0T.computeDilation2DInfo(i.shape,o.shape,l,c,"NHWC",d),p=n.makeOutput(o.shape,o.dtype);return Oe(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(u.dataId).id,n.dataIdMap.get(p.dataId).id,r[i.dtype],h.batchSize,h.inChannels,h.inHeight,h.inWidth,h.outHeight,h.outWidth,h.strideHeight,h.strideWidth,h.dilationHeight,h.dilationWidth,h.filterHeight,h.filterWidth,h.padInfo.top,h.padInfo.left),p}};let Pe;const We={kernelName:s.bP9,backendName:"wasm",setupFunc:function(e){Pe=e.wasm.cwrap(s.bP9,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:o,dy:u}=t,{strides:l,pad:c,dilations:d}=a;if(i.dtype!==o.dtype||i.dtype!==u.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${i.dtype}, ${o.dtype}, and ${u.dtype}`);const h=s.C0T.computeDilation2DInfo(i.shape,o.shape,l,c,"NHWC",d),p=n.makeOutput(i.shape,i.dtype);return Pe(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(u.dataId).id,n.dataIdMap.get(p.dataId).id,r[i.dtype],h.batchSize,h.inChannels,h.inHeight,h.inWidth,h.outHeight,h.outWidth,h.strideHeight,h.strideWidth,h.dilationHeight,h.dilationWidth,h.filterHeight,h.filterWidth,h.padInfo.top,h.padInfo.left),p}},Be=u(s.Pah);let Ue;const Ve={kernelName:s.rsH,backendName:"wasm",setupFunc:function(e){Ue=e.wasm.cwrap(s.rsH,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=e=>n.dataIdMap.get(e.dataId).id;return Ue(i(a),i(r),i(s)),s}},Ge=h(s.BRl,0,"bool"),Ze=u(s._s9),He=u(s.ox3,"float32");function Ke(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:i}=n,o=a.shape.length,u=a.shape.slice();let l=i;return i<0&&(s.ZSL.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),U({inputs:{x:a},backend:r,attrs:{shape:u}})}const je={kernelName:s.ybN,backendName:"wasm",kernelFunc:Ke},qe=u(s.ybj,"float32");function Qe(e){const{attrs:{shape:t,value:n},backend:r}=e;let{attrs:{dtype:a}}=e;a=a||s.ZSL.inferDtype(n);const i=r.makeOutput(t,a);return r.typedArrayFromHeap(i).fill(n),i}const Ye={kernelName:s.SQl,backendName:"wasm",kernelFunc:Qe};let Xe;const Je={kernelName:s.BxF,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return Xe(s,o,u,l,c,i),a},setupFunc:function(e){Xe=e.wasm.cwrap(s.BxF,null,["number","number","number","number","number","number"])}},et=u(s.ZgB),tt=h(s.ElG);let nt;const rt={kernelName:s.i5R,backendName:"wasm",setupFunc:function(e){nt=e.wasm.cwrap(s.i5R,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:i,mean:o,variance:u,offset:l,scale:c}=n,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=c?t.dataIdMap.get(c.dataId).id:0,g=t.makeOutput(i.shape,i.dtype);if(0===s.ZSL.sizeFromShape(i.shape))return g;const b=t.dataIdMap.get(g.dataId).id;return nt(d,h,p,f,m,a,b),g}};let at;const st={kernelName:s.aAr,backendName:"wasm",setupFunc:function(e){at=e.wasm.cwrap(s.aAr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:l}=t,{strides:c,pad:d,dilations:h,dataFormat:p,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=n,b=s.C0T.computeConv2DInfo(i.shape,o.shape,c,h,d,f),y=a[m];if(null==y)throw new Error(`${m} activation not yet supported for FusedConv2D in the wasm backend.`);const x=r.dataIdMap.get(i.dataId).id,w=r.dataIdMap.get(o.dataId).id,v=b.outChannels;let k=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);k=e.id}const S=b.filterHeight,I=b.filterWidth,T=b.padInfo.top,C=b.padInfo.right,N=b.padInfo.bottom,A=b.padInfo.left,$=b.dilationHeight,_=b.dilationWidth,E=b.strideHeight,R=b.strideWidth,F=b.inChannels,D="SAME"===b.padInfo.type?1:0,L=b.batchSize,M=b.inHeight,O=b.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);const z=r.makeOutput(b.outShape,"float32"),P=r.dataIdMap.get(z.dataId).id,W=null==l?0:r.dataIdMap.get(l.dataId).id;return at(x,L,M,O,w,S,I,k,T,C,N,A,D,$,_,E,R,F,v,y,W,g||0,P),z}};let it;const ot={kernelName:s.T7M,backendName:"wasm",setupFunc:function(e){it=e.wasm.cwrap(s.T7M,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:l}=t,{strides:c,pad:d,dilations:h,dataFormat:p,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=n,b=s.C0T.computeConv2DInfo(i.shape,o.shape,c,h,d,f,!0),y=a[m];if(null==y)throw new Error(`${m} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const x=r.dataIdMap.get(i.dataId).id,w=r.dataIdMap.get(o.dataId).id,v=b.outChannels;let k=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);k=e.id}const S=b.filterHeight,I=b.filterWidth,T=b.padInfo.top,C=b.padInfo.right,N=b.padInfo.bottom,A=b.padInfo.left,$=b.dilationHeight,_=b.dilationWidth,E=b.strideHeight,R=b.strideWidth,F=b.inChannels,D="SAME"===b.padInfo.type?1:0,L=b.batchSize,M=b.inHeight,O=b.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);const z=r.makeOutput(b.outShape,"float32"),P=r.dataIdMap.get(z.dataId).id,W=null==l?0:r.dataIdMap.get(l.dataId).id;return it(x,L,M,O,w,S,I,k,T,C,N,A,D,$,_,E,R,F,v,y,W,g||0,P),z}};let ut;const lt={kernelName:s.O4G,backendName:"wasm",setupFunc:function(e){ut=e.wasm.cwrap(s.O4G,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:i}=n,[o,u,l,c]=s.FJy.prepareAndValidate(a,i),d=t.makeOutput(o,a.dtype);if(0===u)return d;const h=i.shape,p=h[h.length-1],f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(i.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),b=t.dataIdMap.get(d.dataId).id;return ut(f,r[a.dtype],m,u,p,l,g,b),d}};let ct;const dt={kernelName:s.mxL,backendName:"wasm",setupFunc:function(e){ct=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:i,indices:o}=n,{axis:u,batchDims:l}=a,c=s.ZSL.parseAxisParam(u,i.shape)[0],d=t.readSync(o.dataId),h=i.shape[c];for(let e=0;e<d.length;++e){const t=d[e];s.ZSL.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}const p=s.C0T.segment_util.collectGatherOpShapeInfo(i,o,c,l),f=U({inputs:{x:i},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),m=s.ZSL.sizeFromShape(o.shape),g=U({inputs:{x:o},attrs:{shape:[p.batchSize,m/p.batchSize]},backend:t}),b=[p.batchSize,p.outerSize,m/p.batchSize,p.sliceSize],y=t.makeOutput(b,i.dtype);if(0===s.ZSL.sizeFromShape(i.shape))return y;const x=f.shape.length-1,w=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,k=t.dataIdMap.get(y.dataId).id,S=new Uint8Array(new Int32Array(s.ZSL.computeStrides(f.shape)).buffer),I=new Uint8Array(new Int32Array(s.ZSL.computeStrides(b)).buffer);return ct(w,r[i.dtype],S,x,v,p.batchSize,I,k),t.disposeData(f.dataId),t.disposeData(g.dataId),y.shape=p.outputShape,y}},ht=h(s.XhZ,0,"bool"),pt=h(s.lLS,0,"bool"),ft=u(s.gIW,"bool"),mt=u(s.E3$,"bool"),gt=u(s.iPs,"bool");let bt;const yt={kernelName:s.X0$,backendName:"wasm",setupFunc:function(e){bt=e.wasm.cwrap(s.X0$,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(t.shape,"float32");if(0!==s.ZSL.sizeFromShape(t.shape)){const e=a.dataIdMap.get(o.dataId).id;bt(i,r[t.dtype],n,e)}return o}},xt=h(s.mIA,0,"bool"),wt=h(s.CwD,0,"bool");let vt;const kt={kernelName:s.mnI,backendName:"wasm",setupFunc:function(e){vt=e.wasm.cwrap(s.mnI,null,["number","number","number","number"])},kernelFunc:function(e){const{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return vt(n.dataIdMap.get(o.dataId).id,r,a,i),o}},St=u(s.tG8),It=u(s.Cg$),Tt=h(s.RUm,0,"bool"),Ct=u(s.nZd),Nt=h(s.LXA,0,"bool"),At=h(s.RW8,0,"bool");let $t;const _t={kernelName:s.jM4,backendName:"wasm",setupFunc:function(e){$t=e.wasm.cwrap(s.jM4,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;if("float32"!==a.dtype)throw new Error("LRN error: x must have dtype float32");const l=n.makeOutput(a.shape,a.dtype);return $t(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(l.dataId).id,a.shape[3],s,i,o,u),l}};let Et;const Rt={kernelName:s.ToN,backendName:"wasm",setupFunc:function(e){Et=e.wasm.cwrap(s.ToN,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;if("float32"!==a.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");const d=n.makeOutput(a.shape,a.dtype);return Et(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,i.shape[3],o,u,l,c),d}};let Ft;const Dt={kernelName:s.VAI,backendName:"wasm",setupFunc:function(e){Ft=e.wasm.cwrap(s.VAI,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:i,keepDims:o}=a,{x:u}=n;let l=t.dataIdMap.get(u.dataId).id,c=u;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=v(u,i,t);f&&(c=d,l=t.dataIdMap.get(d.dataId).id);const m=c.shape.length;s.C0T.assertAxesAreInnerMostDims("max",h,m);const[g,b]=s.C0T.computeOutAndReduceShapes(c.shape,h),y=s.ZSL.sizeFromShape(b),x=t.makeOutput(g,u.dtype);if(0!==s.ZSL.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;Ft(l,r[u.dtype],y,e)}if(f&&t.disposeData(d.dataId),o){const e=s.C0T.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}},Lt=h(s.LDN);let Mt;const Ot={kernelName:s.t3d,backendName:"wasm",setupFunc:function(e){Mt=e.wasm.cwrap(s.t3d,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id;s.ZSL.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,d=s.C0T.computePool2DInfo(a.shape,o,u,1,l,c),h=d.filterHeight,p=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,g=d.padInfo.bottom,b=d.padInfo.left,y=d.dilationHeight,x=d.dilationWidth,w=d.strideHeight,v=d.strideWidth,k=d.inChannels,S=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(d.outShape,"float32"),T=r.dataIdMap.get(I.dataId).id;return Mt(i,a.shape[0],a.shape[1],a.shape[2],h,p,f,m,g,b,y,x,w,v,k,S,T),I}};let zt;const Pt={kernelName:s.ySp,backendName:"wasm",setupFunc:function(e){zt=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r,d=s.C0T.computePool3DInfo(a.shape,i,o,1,u,l,c),h=n.makeOutput(d.outShape,a.dtype);return zt(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}};let Wt;const Bt={kernelName:s.cHb,backendName:"wasm",setupFunc:function(e){Wt=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=s.C0T.computePool3DInfo(i.shape,o,u,1,l,c),h=n.makeOutput(i.shape,i.dtype);return Wt(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}};let Ut;const Vt={kernelName:s.RXX,backendName:"wasm",setupFunc:function(e){Ut=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=s.C0T.computePool2DInfo(i.shape,o,u,1,l,c),h=n.makeOutput(i.shape,i.dtype);return Ut(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),h}};let Gt;const Zt={kernelName:s.TL8,backendName:"wasm",setupFunc:function(e){Gt=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{filterSize:o,strides:u,pad:l,includeBatchInIndex:c}=a;s.ZSL.assert(4===i.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.shape.length}.`));const d=[1,1];s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(u,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '${d}'`));const h=s.C0T.computePool2DInfo(i.shape,o,u,[1,1],l),p=n.makeOutput(h.outShape,i.dtype),f=n.makeOutput(h.outShape,"int32");return Gt(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(p.dataId).id,n.dataIdMap.get(f.dataId).id,r[i.dtype],c,h.batchSize,h.inChannels,h.inHeight,h.inWidth,h.outHeight,h.outWidth,h.strideHeight,h.strideWidth,h.dilationHeight,h.dilationWidth,h.effectiveFilterHeight,h.effectiveFilterWidth,h.padInfo.top,h.padInfo.left),[p,f]}};let Ht;const Kt={kernelName:s.g5A,backendName:"wasm",setupFunc:function(e){Ht=e.wasm.cwrap(s.g5A,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=v(o,a,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e,m=s.C0T.getInnerMostAxes(m.length,c.shape.length))}s.C0T.assertAxesAreInnerMostDims("mean",m,c.shape.length);const[g,b]=s.C0T.computeOutAndReduceShapes(c.shape,m),y=s.ZSL.sizeFromShape(b);let x=c;"float32"!==c.dtype&&(x=ee({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);const w=t.makeOutput(g,"float32");if(0!==s.ZSL.sizeFromShape(c.shape)){const e=t.dataIdMap.get(w.dataId).id;Ht(l,y,e)}if(f&&t.disposeData(d.dataId),i){const e=s.C0T.expandShapeToKeepDim(w.shape,p);w.shape=e}return"float32"!==c.dtype&&t.disposeData(x.dataId),w}};let jt;const qt={kernelName:s.lNG,backendName:"wasm",setupFunc:function(e){jt=e.wasm.cwrap(s.lNG,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,l=t.dataIdMap.get(u.dataId).id;let c=l,d=u;const{transposed:h,axes:p,originalAxes:f,inputWasTransposed:m}=v(u,i,t);if(m){const e=t.dataIdMap.get(h.dataId).id;e!==l&&(d=h,c=e)}const g=d.shape.length;s.C0T.assertAxesAreInnerMostDims("min",p,g);const[b,y]=s.C0T.computeOutAndReduceShapes(d.shape,p),x=s.ZSL.sizeFromShape(y),w=t.makeOutput(b,d.dtype);if(0!==s.ZSL.sizeFromShape(d.shape)){const e=t.dataIdMap.get(w.dataId).id;jt(c,r[u.dtype],x,e)}if(m&&t.disposeData(h.dataId),o){const e=s.C0T.expandShapeToKeepDim(w.shape,f);w.shape=e}return w}},Qt=h(s.LG0);var Yt;let Xt;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Yt||(Yt={}));const Jt={kernelName:s.x7F,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:s}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),o=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),h=a.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return Xt(o,c,t.shape.length,r[t.dtype],p,f,Yt[s],l),u},setupFunc:function(e){Xt=e.wasm.cwrap(s.x7F,null,["number","array","number","number","array","array","number","number"])}};let en;function tn(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(i.dataId).id,u=n.shape[r],l=s.ZSL.sizeFromShape(n.shape)/u;return 0===s.ZSL.sizeFromShape(i.shape)||en(a,o,u,l),i}const nn={kernelName:s.rFG,backendName:"wasm",setupFunc:function(e){en=e.wasm.cwrap(s.rFG,null,["number","number","number","number"])},kernelFunc:tn};let rn;const an={kernelName:s.WT3,backendName:"wasm",setupFunc:function(e){rn=e.wasm.cwrap(s.WT3,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if("float32"!==a.dtype)throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);const u=o?a:tn({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[l,c]=u.shape,d=n.makeOutput([l,s],"int32");return rn(n.dataIdMap.get(u.dataId).id,l,c,s,i,n.dataIdMap.get(d.dataId).id),o||n.disposeData(u.dataId),d}},sn=h(s.BLA),on=h(s.xu7),un=u(s.l0G);function ln(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let cn;const dn={kernelName:s.SDM,backendName:"wasm",setupFunc:function(e){cn=e.wasm.cwrap(s.SDM,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=cn(l,c,s,a,i),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=ln(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}};let hn;const pn={kernelName:s.Zl4,backendName:"wasm",setupFunc:function(e){hn=e.wasm.cwrap(s.Zl4,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=hn(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=ln(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}};let fn;const mn={kernelName:s.e0f,backendName:"wasm",setupFunc:function(e){fn=e.wasm.cwrap(s.e0f,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=fn(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=ln(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},gn=h(s.ylV,0,"bool");let bn;const yn={kernelName:s.urI,backendName:"wasm",setupFunc:function(e){bn=e.wasm.cwrap(s.urI,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=r,l=n.makeOutput([...a.shape,i],s),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return bn(d,i,o,u,c),l}},xn={kernelName:s.LWX,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},wn={kernelName:s.mM$,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Ke({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.ZSL.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=ie({inputs:t.map((e=>{const t=Ke({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeData(e.dataId))),l}};let vn;const kn={kernelName:s.ODT,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:i}}=e,o=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===s.ZSL.sizeFromShape(t.shape))return Qe({backend:n,attrs:{shape:o,value:i,dtype:t.dtype}});const u=n.dataIdMap.get(t.dataId).id,l=n.makeOutput(o,t.dtype),c=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),h=a.map((e=>e[0])),p=a.map((e=>e[1])),f=new Uint8Array(new Int32Array(h).buffer),m=new Uint8Array(new Int32Array(p).buffer);return vn(u,d,t.shape.length,r[t.dtype],f,m,i,c),l},setupFunc:function(e){vn=e.wasm.cwrap(s.ODT,null,["number","array","number","number","array","array","number","number"])}},Sn=h(s.pyJ);let In;const Tn={kernelName:s.Ncv,backendName:"wasm",setupFunc:function(e){In=e.wasm.cwrap(s.Ncv,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=ee({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(c.dataId).id;return In(o,i,d),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};let Cn;const Nn={kernelName:s.kdj,backendName:"wasm",setupFunc:function(e){Cn=e.wasm.cwrap(s.kdj,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,l=t.dataIdMap.get(u.dataId).id;let c=l,d=u;const{transposed:h,axes:p,originalAxes:f,inputWasTransposed:m}=v(u,i,t);let g=p;if(m){const e=t.dataIdMap.get(h.dataId).id;e!==l&&(d=h,c=e,g=s.C0T.getInnerMostAxes(g.length,d.shape.length))}s.C0T.assertAxesAreInnerMostDims("prod",g,d.shape.length);const[b,y]=s.C0T.computeOutAndReduceShapes(d.shape,g),x=s.ZSL.sizeFromShape(y),w=t.makeOutput(b,d.dtype);if(0!==s.ZSL.sizeFromShape(d.shape)){const e=t.dataIdMap.get(w.dataId).id;Cn(c,x,r[w.dtype],e)}if(m&&t.disposeData(h.dataId),o){const e=s.C0T.expandShapeToKeepDim(w.shape,f);w.shape=e}return w}};var An=n(2610);const $n={kernelName:s.Q6t,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=(0,An.q)(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},_n=h(s.sDr),En=u(s.huO),Rn=u(s.fUj),Fn=u(s.P_L);let Dn;const Ln={kernelName:s.hgw,backendName:"wasm",setupFunc:function(e){Dn=e.wasm.cwrap(s.hgw,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:i,halfPixelCenters:o,size:u}=r,[l,c]=u,[d,h,p,f]=a.shape,m=[d,l,c,f];let g,b=t.dataIdMap.get(a.dataId);"float32"!==b.dtype&&(g=ee({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),b=t.dataIdMap.get(g.dataId));const y=b.id,x=t.makeOutput(m,"float32");if(0===s.ZSL.sizeFromShape(a.shape))return x;const w=t.dataIdMap.get(x.dataId).id;return Dn(y,d,h,p,f,l,c,i?1:0,o?1:0,w),null!=g&&t.disposeData(g.dataId),x}};let Mn;const On={kernelName:s.FCQ,backendName:"wasm",setupFunc:function(e){Mn=e.wasm.cwrap(s.FCQ,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32");let u,l=n.dataIdMap.get(a.dataId);return"float32"!==l.dtype&&(u=ee({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),Mn(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=u&&n.disposeData(u.dataId),o}};let zn;const Pn={kernelName:s.jOE,backendName:"wasm",setupFunc:function(e){zn=e.wasm.cwrap(s.jOE,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:i,halfPixelCenters:o,size:u}=r,[l,c]=u,[d,h,p,f]=a.shape,m=[d,l,c,f],g=t.makeOutput(m,"float32");if(0===s.ZSL.sizeFromShape(a.shape))return g;let b,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(b=ee({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(b.dataId));const x=y.id,w=t.dataIdMap.get(g.dataId).id;return zn(x,d,h,p,f,l,c,i?1:0,o?1:0,w),null!=b&&t.disposeData(b.dataId),g}};let Wn;const Bn={kernelName:s.XQy,backendName:"wasm",setupFunc:function(e){Wn=e.wasm.cwrap(s.XQy,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32");let u,l=n.dataIdMap.get(a.dataId);return"float32"!==l.dtype&&(u=ee({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),Wn(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=u&&n.disposeData(u.dataId),o}};let Un;const Vn={kernelName:s.D7i,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,o=s.ZSL.parseAxisParam(i,a.shape);if(0===a.shape.length)return g({inputs:{x:a},backend:n});const u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(o).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);Un(l,d,o.length,h,a.shape.length,c);const p=U({inputs:{x:u},attrs:{shape:a.shape},backend:n});return n.disposeData(u.dataId),p},setupFunc:function(e){Un=e.wasm.cwrap(s.D7i,null,["number","array","number","array","number","number"])}};let Gn;const Zn={kernelName:s.BK4,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:i,fillValue:o,center:u}=r,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,f,m]=a.shape,[g,b]=s.C0T.getImageCenter(u,p,f),y="number"==typeof o?[o,o,o,0===o?0:255]:[...o,255],x=new Uint8Array(new Int32Array(y).buffer);return Gn(c,h,p,f,m,i,g,b,x,y.length,d),l},setupFunc:function(e){Gn=e.wasm.cwrap(s.BK4,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Hn=u(s.hVg),Kn=u(s.TOR);let jn;const qn={kernelName:s.pJc,backendName:"wasm",setupFunc:function(e){jn=e.wasm.cwrap(s.pJc,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:i,updates:o}=n,{shape:u}=a,l=t.makeOutput(u,o.dtype);if(0===s.ZSL.sizeFromShape(u))return l;const{sliceRank:c,numUpdates:d,sliceSize:h,strides:p,outputSize:f}=s.g23.calculateShapes(o,i,u),m=t.dataIdMap.get(i.dataId).id,g=t.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(l.dataId).id;return jn(m,g,r[o.dtype],c,d,h,b,f,y),l}};let Qn;const Yn={kernelName:s.uWl,backendName:"wasm",setupFunc:function(e){Qn=e.wasm.cwrap(s.uWl,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:i}=t,{side:o}=a;if(s.dtype!==i.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${s.dtype} and ${i.dtype}`);const u=n.makeOutput(i.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return Qn(l(s),l(i),s.shape[0],s.shape[1],i.shape[1],r[s.dtype],"left"===o,l(u)),u}};let Xn;const Jn={kernelName:s.l6P,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(i.dataId).id,c=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(c.dataId).id,h=r.shape.length,p=a.shape.length,f=0===h||h>1||1===p?1:s.ZSL.sizeFromShape(a.shape.slice(1));return Xn(o,u,l,f,d),c},setupFunc:function(e){Xn=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},er=u(s.u$b);let tr;const nr={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){tr=e.wasm.cwrap(s.vI1,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id;return 0===s.ZSL.sizeFromShape(a.shape)||tr(r,i),a}},rr=u(s.YVe),ar=u(s.hql),sr=u(s.J3C),ir=u(s.Fin),or={kernelName:s.A8B,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r,u=s.ZSL.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<a.shape.length;++e)l.push([0,0]);const c=kn.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=s.C0T.getReshaped(c.shape,i,u,!1),h=s.C0T.getPermuted(d.length,i.length,!1),p=s.C0T.getReshapedPermuted(c.shape,i,u,!1),f=U({inputs:{x:c},backend:n,attrs:{shape:d}}),m=x({inputs:{x:f},backend:n,attrs:{perm:h}}),g=U({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let ur;const lr={kernelName:s.C8s,backendName:"wasm",setupFunc:function(e){ur=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:a,values:i,denseShape:o,defaultValue:u}=n,l=a.shape[0],c=a.shape[1],d=t.readSync(o.dataId)[0],h=[l+d,c],p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(u.dataId).id,g=t.makeOutput(h,a.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput(h.slice(0,1),i.dtype),x=t.dataIdMap.get(y.dataId).id,w=t.makeOutput([d],"bool"),v=t.dataIdMap.get(w.dataId).id,k=t.makeOutput([l],a.dtype),S=t.dataIdMap.get(k.dataId).id,I=t.makeOutput([4],"int32"),T=t.dataIdMap.get(I.dataId).id,C=ur(p,f,r[i.dtype],l,d,c,m,b,x,v,S,T),N=t.readSync(I.dataId);let A;switch(N[0]){case 1:A=s.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:A=s.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:A=s.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:A=""}if(t.disposeData(I.dataId),A)throw t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(w.dataId),t.disposeData(k.dataId),new Error(A);let $=g,_=y;return C!==h[0]&&($=K({inputs:{x:g},attrs:{begin:0,size:[C,c]},backend:t}),_=K({inputs:{x:y},attrs:{begin:0,size:C},backend:t}),t.disposeData(g.dataId),t.disposeData(y.dataId)),[$,_,w,k]}};let cr;const dr={kernelName:s.BoJ,backendName:"wasm",setupFunc:function(e){cr=e.wasm.cwrap(s.BoJ,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:i}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(i.dataId).id,c=r.shape[0],d=s.ZSL.sizeFromShape(i.shape),h=t.makeOutput([c,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,f=t.makeOutput([d],i.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput([3],"int32"),b=t.dataIdMap.get(g.dataId).id;cr(o,u,l,c,p,m,b);const y=t.readSync(g.dataId);let x;switch(y[0]){case 0:x=s.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:x=s.C0T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:x=s.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(f.dataId));x=s.C0T.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(f.dataId));x=s.C0T.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:x=""}if(t.disposeData(g.dataId),x)throw t.disposeData(h.dataId),t.disposeData(f.dataId),new Error(x);return[h,f]}};let hr;function pr(e){hr=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function fr(e,t){const{backend:n,inputs:a}=e,{data:i,indices:o,segmentIds:u}=a,l=o.shape[0],c=n.readSync(u.dataId,l-1,l)[0],d=l>0?c+1:0;if(d<0)throw new Error(s.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=i.shape.slice();h[0]=d;const p=n.dataIdMap.get(i.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.dataIdMap.get(u.dataId).id,g=n.makeOutput(h,i.dtype),b=n.dataIdMap.get(g.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;hr(p,r[i.dtype],i.shape[0],f,m,b,x,t,0);const w=n.readSync(y.dataId);let v;switch(w[0]){case 0:v=s.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:v=s.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:v=s.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(w[1],w[2]);break;case 3:v=s.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(w[1],w[2],w[3]);break;default:v=""}if(n.disposeData(y.dataId),v)throw n.disposeData(g.dataId),new Error(v);return g}const mr={kernelName:s.L6G,backendName:"wasm",setupFunc:pr,kernelFunc:function(e){return fr(e,!0)}},gr={kernelName:s.DvZ,backendName:"wasm",setupFunc:pr,kernelFunc:function(e){return fr(e,!1)}};let br;const yr={kernelName:s.jgd,backendName:"wasm",setupFunc:function(e){br=e.wasm.cwrap(s.jgd,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{sparseIndices:i,sparseValues:o,defaultValue:u}=n,{outputShape:l}=a,c=t.makeOutput(l,u.dtype);if(0===s.ZSL.sizeFromShape(l))return c;const{sliceRank:d,numUpdates:h,sliceSize:p,strides:f,outputSize:m}=s.C0T.calculateShapes(o,i,l),g=t.dataIdMap.get(i.dataId).id,b=t.dataIdMap.get(o.dataId).id,y=t.dataIdMap.get(u.dataId).id,x=new Uint8Array(new Int32Array(f).buffer),w=t.dataIdMap.get(c.dataId).id;return br(g,b,o.shape.length,y,r[u.dtype],d,h,p,x,m,w),c}},xr={kernelName:s.Blb,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=n,u=s.ZSL.parseAxisParam(o,a.shape)[0],l=s.C0T.prepareSplitSize(a,i,u),c=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{const t=[...d];t[u]=e;const n=K({inputs:{x:a},attrs:{begin:c,size:t},backend:r});return c[u]+=e,n}))}},wr=u(s.dFH),vr=u(s.M6A),kr=h(s.Ddj);let Sr;const Ir={kernelName:s.pnw,backendName:"wasm",setupFunc:function(e){Sr=e.wasm.cwrap(s.pnw,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{alpha:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=t.makeOutput(i.shape,i.dtype),l=t.dataIdMap.get(u.dataId).id;return Sr(o,s,r[i.dtype],l),u}};let Tr;const Cr={kernelName:s.UcO,backendName:"wasm",setupFunc:function(e){Tr=e.wasm.cwrap(s.UcO,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:w,strides:v}=s.Kro.sliceInfo(a.shape,i,o,u,l,c,d,h,p);let k;if(g)k=U({inputs:{x:a},backend:t,attrs:{shape:m}});else if(b||y){s.ZSL.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=s.Kro.computeOutShape(x,w,v),n=K({inputs:{x:a},backend:t,attrs:{begin:x,size:e}});k=U({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(s.ZSL.computeStrides(a.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(f).buffer),c=new Uint8Array(new Int32Array(s.ZSL.computeStrides(f)).buffer),d=t.dataIdMap.get(e.dataId).id;Tr(n,r,a.shape.length,i,o,u,l,c,f.length,d),k=U({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return k}};var Nr=n(3514);const Ar={kernelName:s.YAb,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:u,rightPad:l,padWidth:c,preserveShortSequences:d}=r,h=t.readSync(a.dataId),p=t.readSync(s.dataId),[f,m]=(0,Nr.G)(h,p,i,o,u,l,c,d),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;const b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}};var $r=n(2948);const _r={kernelName:s.iW0,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),u=t.readSync(s.dataId),[l,c,d]=(0,$r.S)(o,u[0],i),h=c.length,p=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(p).set(l);const f=t.makeOutput([h],"string");t.dataIdMap.get(f.dataId).stringBytes=c;const m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(d),[p,f,m]}};var Er=n(5535);const Rr={kernelName:s.$jE,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=(0,Er.f)(i,s),u=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}},Fr=h(s.PbM);let Dr;const Lr={kernelName:s.WuN,backendName:"wasm",setupFunc:function(e){Dr=e.wasm.cwrap(s.WuN,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,l=t.dataIdMap.get(u.dataId).id;let c=l,d=u;const{transposed:h,axes:p,originalAxes:f,inputWasTransposed:m}=v(u,i,t);let g=p;if(m){const e=t.dataIdMap.get(h.dataId).id;e!==l&&(d=h,c=e,g=s.C0T.getInnerMostAxes(g.length,d.shape.length))}s.C0T.assertAxesAreInnerMostDims("sum",g,d.shape.length);const[b,y]=s.C0T.computeOutAndReduceShapes(d.shape,g),x=s.ZSL.sizeFromShape(y),w=t.makeOutput(b,d.dtype);if(0!==s.ZSL.sizeFromShape(d.shape)){const e=t.dataIdMap.get(w.dataId).id;Dr(c,x,r[w.dtype],e)}if(m&&t.disposeData(h.dataId),o){const e=s.C0T.expandShapeToKeepDim(w.shape,f);w.shape=e}return w}},Mr=u(s.oFs),Or=u(s.iuW);let zr;const Pr={kernelName:s.X4r,backendName:"wasm",setupFunc:function(e){zr=e.wasm.cwrap(s.X4r,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{tensor:i,indices:o,updates:u}=n,{}=a,l=t.makeOutput(i.shape,i.dtype);if(0===s.ZSL.sizeFromShape(i.shape))return l;const{sliceRank:c,numUpdates:d,sliceSize:h,strides:p,outputSize:f}=s.g23.calculateShapes(u,o,i.shape),m=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),x=t.dataIdMap.get(l.dataId).id;return zr(m,g,r[u.dtype],c,d,h,y,f,x,b),l}};let Wr;const Br={kernelName:s.FAs,backendName:"wasm",setupFunc:function(e){Wr=e.wasm.cwrap(s.FAs,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,i=n.dataIdMap.get(s.dataId).id,{reps:o}=a,u=new Array(s.shape.length);for(let e=0;e<u.length;e++)u[e]=s.shape[e]*o[e];const l=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(u).buffer),d=n.makeOutput(u,s.dtype),h=n.dataIdMap.get(d.dataId).id;return Wr(i,l,s.shape.length,c,u.length,r[d.dtype],h),d}};let Ur;const Vr={kernelName:s.TBb,backendName:"wasm",setupFunc:function(e){Ur=e.wasm.cwrap(s.TBb,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:s,sorted:i}=n,o=t.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=s;const c=t.makeOutput(l,a.dtype),d=t.dataIdMap.get(c.dataId).id,h=t.makeOutput(l,"int32"),p=t.dataIdMap.get(h.dataId).id;return Ur(o,u,a.shape.length,r[a.dtype],s,i,d,p),[c,h]}};let Gr;const Zr={kernelName:s.dLy,backendName:"wasm",setupFunc:function(e){Gr=e.wasm.cwrap(s.dLy,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:i}=n,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=r,[d,h,p,f]=a.shape,[m,g]=null!=c?c:[h,p],b=[d,m,g,f],y=new Uint8Array(new Int32Array(s.ZSL.computeStrides(a.shape)).buffer),x=new Uint8Array(new Int32Array(s.ZSL.computeStrides(b)).buffer),w=t.makeOutput(b,a.dtype),v=t.dataIdMap.get(w.dataId).id,k=t.dataIdMap.get(a.dataId).id,S=t.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;let T;switch(u){case"constant":default:T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4}return Gr(k,S,i.shape[0]>1,d,m,g,f,p,h,y,a.shape.length-1,x,b.length-1,I,T,l,v),w}};var Hr=n(2750);const Kr={kernelName:s.EwU,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:u}=(0,Hr.w)(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([u.length],"int32",void 0,u)]}},jr={kernelName:s.dXR,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=K({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},qr={kernelName:s.xJ3,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},Qr=[o,l,c,d,p,m,S,T,N,A,$,_,E,R,F,L,B,O,P,Z,q,Y,X,J,te,ne,ae,oe,le,de,pe,me,be,ye,xe,ke,Ie,Ce,Ae,_e,Re,De,Me,ze,We,Be,Ve,Ge,Ze,He,je,qe,Ye,Je,et,tt,rt,st,ot,lt,dt,ht,pt,b,ft,mt,gt,yt,xt,wt,kt,It,St,Tt,Ct,Nt,At,_t,Rt,Dt,Lt,Ot,Pt,Bt,Vt,Zt,Kt,qt,Qt,Jt,an,sn,on,un,dn,pn,mn,gn,yn,xn,wn,kn,Sn,Tn,Nn,$n,_n,En,Rn,Fn,V,Ln,On,Pn,Bn,Vn,Zn,Hn,Kn,qn,Yn,Jn,er,nr,rr,ar,sr,j,nn,ir,or,lr,dr,mr,gr,yr,xr,wr,vr,kr,Ir,Cr,Ar,_r,Rr,Fr,Lr,Mr,Or,Pr,Br,Vr,Zr,w,Kr,jr,qr];for(const e of Qr)(0,s.tAK)(e);const Yr=(0,s._K2)();Yr.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})),Yr.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Yr.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Xr=n(8417),Jr=n.n(Xr),ea=n(9593),ta=n(3805),na=n.n(ta);const ra=Jr()||Xr,aa=na()||ta;class sa extends s.uI_{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(fa),ma=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new s.GJx(this,(0,s.Hi9)())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=s.ZSL.now();return e(),{kernelMs:s.ZSL.now()-t}}move(e,t,n,r,a){const i=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:i,stringBytes:s,shape:n,dtype:r,memoryOffset:null,refCount:a})}const o=s.ZSL.sizeFromShape(n),u=o*s.ZSL.bytesPerElement(r),l=this.wasm._malloc(u)>>>0;this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(i,o,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:i,stringBytes:o}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=o.length)?o.slice(t,n):o;t=t||0,n=n||s.ZSL.sizeFromShape(i);const u=s.ZSL.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*u,r+n*u).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(null==n)a=this.write(null!=r?r:null,e,t);else{const r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});const i=s.ZSL.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),i=s.ZSL.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,i);case"int32":return new Int32Array(r,a,i);case"bool":return new Uint8Array(r,a,i);default:throw new Error(`Unknown dtype ${t}`)}}}function ia(e,t,n){if(null!=ua)return ua;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=ca&&null!=ca[r]?ca[r]:n+r}const oa=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let ua=null,la=null,ca={},da=!1,ha=!1;function pa(e,t=!1){if(da)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)la=e;else{ca=e;const t=oa.filter((e=>null==ca[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}ha=t}let fa=-1,ma=null;(0,s.gJX)("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([(0,s._K2)().getAsync("WASM_HAS_SIMD_SUPPORT"),(0,s._K2)().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var i;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=ea.$.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?ia(e,t,null!=la?la:r):r+n},ha&&(a.instantiateWasm=(i=ia(e,t,null!=la?la:""),(e,t)=>(s.ZSL.fetch(i,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${i}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let o,u=!1;a.onAbort=()=>{u||da||(da=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==ua?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+ra.toString()],{type:"text/javascript"}),o=ra(a)):o=aa(a),o.then((e=>{u=!0,da=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}();return new sa(e)}),2)},6574:(e,t,n)=>{"use strict";n.d(t,{OH:()=>s,_K:()=>o,tj:()=>l});var r=n(5119);const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.yL)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);a in e&&e[a].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},6734:(e,t,n)=>{"use strict";n.d(t,{D:()=>a});var r=n(3879);class a{static join(e){return new a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+s-n.start,o=s,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,i,u-i);if(a.set(l,o),s+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},6779:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(2302);const u=(0,n(929).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const d=(0,s.YT)(e,"x","batchNorm"),h=(0,s.YT)(t,"mean","batchNorm"),p=(0,s.YT)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s.YT)(l,"scale","batchNorm")),null!=u&&(m=(0,s.YT)(u,"offset","batchNorm")),i.vA(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.vA(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.vA(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.t)(e,[1,1,1,e.size]):2===e.rank?(0,o.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},b={varianceEpsilon:c},y=r.T2.runKernel(a.i5R,g,b);return(0,o.t)(y,d.shape)}})},6833:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},6919:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s.YT)(e,"x","leakyRelu")},i={alpha:t};return r.T2.runKernel(a.X0$,n,i)}})},6928:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(6111);const u=(0,n(929).op)({clipByValue_:function(e,t,n){const u=(0,s.YT)(e,"x","clipByValue");if(i.vA(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.G)(u.shape,t,u.dtype);const l={x:u},c={clipValueMin:t,clipValueMax:n};return r.T2.runKernel(a.vaV,l,c)}})},6999:(e,t,n)=>{"use strict";n.d(t,{j:()=>c});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(7195),u=n(929),l=n(2302);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const d=(0,s.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.vA(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.vA(o.G0(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.s_("maxPool",u,c);const f={x:h},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.T2.runKernel(a.t3d,f,m);return p?(0,l.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},7074:(e,t,n)=>{"use strict";n.d(t,{Op:()=>c,_5:()=>u,kr:()=>h,tA:()=>d,vQ:()=>l});var r=n(6574),a=n(1743),s=n(3673);const i=(0,a.m)("kernelRegistry",(()=>new Map)),o=(0,a.m)("gradRegistry",(()=>new Map));function u(e,t){const n=p(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=p(t,n);i.has(r)&&s.i(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function h(e){const{kernelName:t}=e;o.has(t)&&(0,r._K)().getBool("DEBUG")&&s.i(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){return`${t}_${e}`}},7084:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>h,Ej:()=>N,P8:()=>I,Rl:()=>C,Xf:()=>$,aG:()=>d,jf:()=>k,l3:()=>v,oR:()=>A,s5:()=>b,zV:()=>T});var r=n(7148),a=n(4027),s=n(5119),i=n(5685),o=n(6734),u=n(5287),l=n(6574);const c=4;async function d(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+c*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=c,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:y(await Promise.all(r)),specs:n}}function h(e,t){const n=new o.D(e),r={};let a=0;for(const e of t){const t=p(e,((e,t)=>n.slice(a+e,a+t)));r[e.name]=m(e,n.slice(a,a+t)),a+=t}return r}function p(e,t){const n=(0,s.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}async function f(e,t){const n=(0,s.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(await t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}function m(e,t){const n=e.name,o=e.dtype,u=e.shape,l=(0,s.Ze)(u);let d,h=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const a=i.i[r.dtype],s="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}();d=e(s)}}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${n}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*r.scale+r.min)}}h+=l*a}else if("string"===o){const n=(0,s.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+c))[0];h+=c;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=i.i[o];if("float32"===o)d=new Float32Array(t);else if("int32"===o)d=new Int32Array(t);else{if("bool"!==o){if("complex64"===o){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,a.O)(e,u,"float32"),i=(0,a.O)(n,u,"float32"),o=(0,r.f)(s,i);return s.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${o}`)}d=new Uint8Array(t)}h+=l*e}return(0,a.O)(d,u,o)}async function g(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:a}=await e.read();if(t&&null==a){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function b(e,t){const n={},r=e.getReader();let a=new ArrayBuffer(0);for(const e of t){const t=await f(e,(async(e,t)=>(a=await g(r,a,t),a.slice(e,t))));a=await g(r,a,t);const i=a.slice(0,t);a=a.slice(t);const o=m(e,i);if(n[e.name]=o,"webgpu"===(0,u.jz)()){const e=(0,u.Hs)();"uploadToGPU"in e&&(0,s.Ze)(o.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function y(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const x="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function w(e){return x?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function v(e){if(x)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function k(e){if(x){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function S(e){return o.D.join(e)}function I(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function T(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function C(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function N(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),C(e,n,r)}function A(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:w(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:w(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new o.D(e.weightData).byteLength}}function $(e){const t=[];for(const n of e)t.push(...n.weights);return t}},7126:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(1585),a=n(5441),s=n(565),i=n(8189);const o=(0,n(929).op)({sub_:function(e,t){let n=(0,i.YT)(e,"a","sub"),o=(0,i.YT)(t,"b","sub");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.T2.runKernel(a.PbM,u)}})},7148:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(5119);const o=(0,n(929).op)({complex_:function(e,t){const n=(0,s.YT)(e,"real","complex"),o=(0,s.YT)(t,"imag","complex");i.O3(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.T2.runKernel(a.pr3,u)}})},7180:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},7195:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>b,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>l,YQ:()=>a,l5:()=>i,p$:()=>u,qk:()=>g,s_:()=>y,uf:()=>o});var r=n(5119);function a(e,t,n,r,a="NHWC",s){return o(e,[...t,e[3]],n,s,r,null,null,b(a))}function s(e,t,n,r,a,s,i="channelsLast"){const[u,l]=c(t);let d;if("channelsLast"===i)d=[u,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);d=[u,l,e[1],e[1]]}return o(e,d,n,r,a,s,!1,i)}function i(e,t,n,r,a,s,i="NDHWC"){const[o,l,c]=d(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[o,l,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[o,l,c,e[1],e[1]]}return u(e,h,n,r,a,!1,p,s)}function o(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,d,f]=e}const[g,b,,y]=t,[x,w]=c(n),[v,k]=c(r),S=h(g,v),I=h(b,k),{padInfo:T,outHeight:C,outWidth:N}=function(e,t,n,r,a,s,i,o,u){let c,d,h;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=l(e,t,n));const s=e[1];return[p((e[0]-t+2*r)/n+1,a),p((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),l=e-u,p=Math.floor(o/2);c={top:u,bottom:l,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+l+f)/r+1,o),h=p((n-i+m+g)/a+1,o)}}return{padInfo:c,outHeight:d,outWidth:h}}(a,d,f,x,w,S,I,s,o),A=i?y*m:y;let $;return"channelsFirst"===o?$=[u,A,C,N]:"channelsLast"===o&&($=[u,C,N,A]),{batchSize:u,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:C,outWidth:N,outChannels:A,padInfo:T,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:b,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function u(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,c,f,m]=e}const[b,y,x,,w]=t,[v,k,S]=d(n),[I,T,C]=d(r),N=h(b,I),A=h(y,T),$=h(x,C),{padInfo:_,outDepth:E,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,i,o,u,c,d){let h,f,m,g;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const b=function(e,t,n,r,a,s){null==a&&(a=l(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(i[n]=p((e[n]-t[n]+2*a)/r[n]+1,s));return i}([t,n,r,1],[o,u,c],0,[a,s,i],e,d);f=b[0],m=b[1],g=b[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/i);const e=(f-1)*a+o-t,l=(m-1)*s+u-n,d=(g-1)*i+c-r,p=Math.floor(e/2),b=e-p,y=Math.floor(l/2),x=l-y,w=Math.floor(d/2);h={top:y,bottom:x,left:w,right:d-w,front:p,back:b,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(a,c,f,m,v,k,S,N,A,$,o),D=s?w*g:w;let L;return"channelsFirst"===i?L=[u,D,E,R,F]:"channelsLast"===i&&(L=[u,E,R,F,D]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:E,outHeight:R,outWidth:F,outChannels:D,padInfo:_,strideDepth:v,strideHeight:k,strideWidth:S,filterDepth:b,filterHeight:y,filterWidth:x,effectiveFilterDepth:N,effectiveFilterHeight:A,effectiveFilterWidth:$,dilationDepth:I,dilationHeight:T,dilationWidth:C,inShape:e,outShape:L,filterShape:t}}function l(e,t,n,r=1){const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function b(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},7244:()=>{},7261:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(5119);const o=(0,n(929).op)({unstack_:function(e,t=0){const n=(0,s.YT)(e,"x","unstack","string_or_numeric");i.vA(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.T2.runKernel(a.dXR,o,u)}})},7311:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({tanh_:function(e){const t={x:(0,s.YT)(e,"x","tanh","float32")};return r.T2.runKernel(a.iuW,t)}})},7391:(e,t,n)=>{var r=n(7180),a=n(3181),s=n(3031),i=n(9067),o=n(6833),u=n(3717),l=n(4801);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},7436:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({min_:function(e,t=null,n=!1){const i={x:(0,s.YT)(e,"x","min")},o={axis:t,keepDims:n};return r.T2.runKernel(a.lNG,i,o)}})},7523:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(1585),a=n(5441),s=n(565),i=n(8189);const o=(0,n(929).op)({add_:function(e,t){let n=(0,i.YT)(e,"a","add"),o=(0,i.YT)(t,"b","add");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.T2.runKernel(a.OMN,u)}})},7703:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var r=n(1585),a=n(5287),s=n(5441),i=n(8189),o=n(5119),u=n(7148),l=n(5040),c=n(6522),d=n(929),h=n(1902);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,i.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),o.vA(d.rank===t.length,(()=>`Error in transpose: rank of input ${d.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and "+(d.rank-1)+` but got ${t}`))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,a.DZ)((()=>{let e=(0,h.x)(d),t=(0,l.n)(d);return e=r.T2.runKernel(s.wx0,{x:e},f),t=r.T2.runKernel(s.wx0,{x:t},f),n&&(t=(0,c.H)(t)),(0,u.f)(e,t)})):r.T2.runKernel(s.wx0,p,f)}})},7763:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(3347);function a(e,t,n,a){const s=r.ZSL.getArrayFromDType(n,r.ZSL.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.ZSL.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const i="string"===n?r.C0T.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=i[o++]}a+=e.shape[1]}))}return s}},7870:(e,t,n)=>{"use strict";n.d(t,{C:()=>a});var r=n(3347);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.ZSL.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},7906:(e,t,n)=>{"use strict";n.d(t,{HS:()=>s,di:()=>i,lv:()=>o});var r=n(3347),a=n(7870);function s(e,t,n,a,s){const i=r.Kro.isSliceContinous(a,t,n),o=r.ZSL.sizeFromShape(n),u=r.ZSL.computeStrides(a);if(i){const n=r.Kro.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===s?r.C0T.fromUint8ToStringArray(e):e,c=(0,r.ra8)(a,s,l),d=(0,r.ra8)(n,s);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(c.get(...r),...n)}return"string"===s?r.C0T.fromStringArrayToUint8(d.values):d.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,a.C)(o,"slice");const[c,d]=r.Kro.parseSliceParams(o,u,l);r.Kro.assertParamsValid(o,c,d);const h=s(n.data.get(o.dataId).values,c,d,o.shape,o.dtype);return n.makeTensorInfo(d,o.dtype,h)}const o={kernelName:r.JiE,backendName:"cpu",kernelFunc:i}},7986:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({slice_:function(e,t,n){const i=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.T2.runKernel(a.JiE,o,u)}})},7991:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var r=n(1830),a=n(8189),s=n(9809),i=n(8631),o=n(4010),u=n(1938),l=n(9258),c=n(929),d=n(7126),h=n(3791);const p=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,a.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r._X)(((e,n)=>{const r=(0,u.T)(e,t,!0),a=(0,d.j)(e,r),c=(0,d.j)((0,s.w)(a,"float32"),(0,o.R)((0,h.c)((0,i.o)(a),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,i.o)(r);return(0,d.j)(e,(0,l.l)((0,h.c)(e,t,!0),a))}}}))(n)}})},8074:()=>{},8108:()=>{},8189:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>l,YT:()=>h,j1:()=>p});var r=n(1585),a=n(6574),s=n(259),i=n(2046),o=n(3879),u=n(5119);function l(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.Nw)(e))return[e.buffer.size/(null==t?4:(0,u.jv)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,u.vA)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,u.vA)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,u.vA)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)c(e[t],r,n.concat(t))}function d(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,a="numeric"){if(e instanceof(0,s.tp)())return d(a,e.dtype,t,n),e;let i=(0,u.X$)(e);if("string"!==i&&["bool","int32","float32"].indexOf(a)>=0&&(i=a),d(a,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=l(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return r.T2.makeTensor(h,c,i)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>h(e,`${t}[${a}]`,n,r)))}},8229:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,s.YT)(e,"x","gather"),indices:(0,s.YT)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.T2.runKernel(a.mxL,o,u)}})},8417:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return E.buffer!=L&&G(E.buffer),M}function a(){return E.buffer!=L&&G(E.buffer),O}function s(){return E.buffer!=L&&G(E.buffer),z}function i(){return E.buffer!=L&&G(E.buffer),P}function o(){return E.buffer!=L&&G(E.buffer),W}var u,l,c,d=void 0!==(e=e||{})?e:{};d.ready=new Promise((function(e,t){u=e,l=t})),"undefined"!=typeof process&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var h,p,f,m=Object.assign({},d),g=[],b=(e,t)=>{throw t},y="object"==typeof window,x="function"==typeof importScripts,w="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,v=d.ENVIRONMENT_IS_PTHREAD||!1,k="";function S(e){return d.locateFile?d.locateFile(e,k):k+e}if(w){var I=n(9893),T=n(5281);let e;k=x?T.dirname(k)+"/":"//",h=(e,t)=>(e=ae(e)?new URL(e):T.normalize(e),I.readFileSync(e,t?void 0:"utf8")),f=e=>{var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),t},p=(e,t,n)=>{e=ae(e)?new URL(e):T.normalize(e),I.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),g=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof oe))throw e})),process.on("unhandledRejection",(function(e){throw e})),b=(e,t)=>{if(Q())throw process.exitCode=e,t;var n;(n=t)instanceof oe||_("exiting due to exception: "+n),process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{e=n(3556)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=e.Worker}else(y||x)&&(x?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),void 0!==r&&r&&(k=r),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",w||(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&"undefined"==typeof performance&&(n.g.performance=n(7244).performance);var C=console.log.bind(console),N=console.warn.bind(console);w&&(C=e=>I.writeSync(1,e+"\n"),N=e=>I.writeSync(2,e+"\n"));var A,$=d.print||C,_=d.printErr||N;Object.assign(d,m),m=null,d.arguments&&(g=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(b=d.quit),Atomics.load,Atomics.store,Atomics.compareExchange,d.wasmBinary&&(A=d.wasmBinary);var E,R,F=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&ne("no native wasm support detected");var D,L,M,O,z,P,W,B=!1,U="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function V(e,t,n){for(var r=(t>>>=0)+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&U)return U.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function G(e){L=e,d.HEAP8=M=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=z=new Int32Array(e),d.HEAPU8=O=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=P=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=W=new Float64Array(e)}v&&(L=d.buffer);var Z,H=d.INITIAL_MEMORY||16777216;if(v)E=d.wasmMemory,L=d.buffer;else if(d.wasmMemory)E=d.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:H/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw _("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&_("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");E&&(L=E.buffer),H=L.byteLength,G(L);var K=[],j=[],q=[];function Q(){return F}function Y(){v||pe(j)}var X,J=0,ee=null,te=null;function ne(e){d.onAbort&&d.onAbort(e),_(e="Aborted("+e+")"),B=!0,D=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function re(e){return e.startsWith("data:application/octet-stream;base64,")}function ae(e){return e.startsWith("file://")}function se(e){try{if(e==X&&A)return new Uint8Array(A);if(f)return f(e);throw"both async and sync fetching of the wasm failed"}catch(e){ne(e)}}re(X="tfjs-backend-wasm-threaded-simd.wasm")||(X=S(X));var ie={};function oe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){var t=he.pthreads[e];t||ne(undefined),he.returnWorkerToPool(t)}function le(e){var t=he.getNewWorker();if(!t)return 6;he.runningWorkers.push(t),he.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{w&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function ce(e){if(v)return ve(1,1,e);D=e,Q()||(he.terminateAllThreads(),d.onExit&&d.onExit(e),B=!0),b(e,new oe(e))}var de=function(e,t){if(D=e,!t&&v)throw fe(e),"unwind";ce(e)},he={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){v?he.initWorker():he.initMainThread()},initMainThread:function(){for(var e=8;e--;)he.allocateUnusedWorker()},initWorker:function(){F=!1},setExitStatus:function(e){D=e},terminateAllThreads:function(){for(var e of Object.values(he.pthreads))he.returnWorkerToPool(e);for(var e of he.unusedWorkers)e.terminate();he.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete he.pthreads[t],he.unusedWorkers.push(e),he.runningWorkers.splice(he.runningWorkers.indexOf(e),1),e.pthread_ptr=0,w&&e.unref(),We(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){he.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r,a=n.data,s=a.cmd;if(e.pthread_ptr&&(he.currentProxiedOperationCallerThread=e.pthread_ptr),a.targetThread&&a.targetThread!=Me()){var i=he.pthreads[a.targetThread];return i?i.postMessage(a,a.transferList):_('Internal error! Worker sent a message "'+s+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(he.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===s?xe(a.queue):"spawnThread"===s?le(a):"cleanupThread"===s?ue(a.thread):"killThread"===s?function(e){var t=he.pthreads[e];delete he.pthreads[e],t.terminate(),We(e),he.runningWorkers.splice(he.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(a.thread):"cancelThread"===s?(r=a.thread,he.pthreads[r].postMessage({cmd:"cancel"})):"loaded"===s?(e.loaded=!0,w&&e.unref(),t&&t(e),e.runPthread&&e.runPthread()):"print"===s?$("Thread "+a.threadId+": "+a.text):"printErr"===s?_("Thread "+a.threadId+": "+a.text):"alert"===s?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?e.postMessage(a):"callHandler"===s?d[a.handler](...a.args):s&&_("worker sent an unknown command "+s),he.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw _("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},w&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var n=[];for(var a of["onExit","onAbort","print","printErr"])d.hasOwnProperty(a)&&n.push(a);e.postMessage({cmd:"load",handlers:n,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:E,wasmModule:R})},allocateUnusedWorker:function(){var e,t=S("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),he.unusedWorkers.push(e)},getNewWorker:function(){return 0==he.unusedWorkers.length&&(he.allocateUnusedWorker(),he.loadWasmModuleToWorker(he.unusedWorkers[0])),he.unusedWorkers.pop()}};function pe(e){for(;e.length>0;)e.shift()(d)}function fe(e){if(v)return ve(2,0,e);try{de(e)}catch(e){!function(e){if(e instanceof oe||"unwind"==e)return D;b(1,e)}(e)}}d.PThread=he,d.establishStackSpace=function(){var e=Me(),t=s()[e+52>>>2],n=s()[e+56>>>2];Ue(t,t-n),Ge(t)};var me,ge=[];function be(e,t,n,r){return v?ve(3,1,e,t,n,r):ye(e,t,n,r)}function ye(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return _("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(v&&0===a.length)return be(e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return v?(s.cmd="spawnThread",postMessage(s,a),0):le(s)}function xe(e){Atomics.store(s(),e>>2,1),Me()&&Pe(e),Atomics.compareExchange(s(),e>>2,1,0)}function we(e){we.shown||(we.shown={}),we.shown[e]||(we.shown[e]=1,w&&(e="warning: "+e),_(e))}function ve(e,t){var n,r,a=arguments.length-2,s=arguments;return n=Ve(),r=(()=>{for(var n=a,r=Ze(8*n),i=r>>3,u=0;u<a;u++){var l=s[2+u];o()[i+u>>>0]=l}return ze(e,n,r,t)})(),Ge(n),r}d.invokeEntryPoint=function(e,t){var n,r,a=((r=ge[n=e])||(n>=ge.length&&(ge.length=n+1),ge[n]=r=Z.get(n)),r)(t);Q()?he.setExitStatus(a):Be(a)},d.executeNotifiedProxyingQueue=xe,me=w?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var ke=[];function Se(e){try{return E.grow(e-L.byteLength+65535>>>16),G(E.buffer),1}catch(e){}}function Ie(e){return v?ve(4,1,e):52}function Te(e,t,n,r,a){return v?ve(5,1,e,t,n,r,a):70}var Ce=[null,[],[]];function Ne(e,t){var n=Ce[e];0===t||10===t?((1===e?$:_)(V(n,0)),n.length=0):n.push(t)}function Ae(e,t,n,r){if(v)return ve(6,1,e,t,n,r);for(var s=0,o=0;o<n;o++){var u=i()[t>>>2],l=i()[t+4>>>2];t+=8;for(var c=0;c<l;c++)Ne(e,a()[u+c>>>0]);s+=l}return i()[r>>>2]=s,0}function $e(e){return d["_"+e]}function _e(e,n,r,s,i){var o={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=(n>>>=0)+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=a)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=a)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,a(),t,n)}(e,t=Ze(n),n)}return t},array:e=>{var n=Ze(e.length);return function(e,n){t().set(e,n>>>0)}(e,n),n}},u=$e(e),l=[],c=0;if(s)for(var d=0;d<s.length;d++){var h=o[r[d]];h?(0===c&&(c=Ve()),l[d]=h(s[d])):l[d]=s[d]}var p=u.apply(null,l);return function(e){return 0!==c&&Ge(c),function(e){return"string"===n?(t=e,(t>>>=0)?V(a(),t,r):""):"boolean"===n?Boolean(e):e;var t,r}(e)}(p)}he.init();var Ee,Re,Fe,De=[null,ce,fe,be,Ie,Te,Ae],Le={__emscripten_init_main_thread_js:function(e){Oe(e,!x,1,!y),he.threadInitTLS()},__emscripten_thread_cleanup:function(e){v?postMessage({cmd:"cleanupThread",thread:e}):ue(e)},__pthread_create_js:ye,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,r){if(e==t)setTimeout((()=>xe(r)));else if(v)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=he.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){ne("")},emscripten_check_blocking_allowed:function(){w||x||we("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:me,emscripten_memcpy_big:function(e,t,n){a().copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_num_logical_cores:function(){return w?n(8074).cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){ke.length=t;for(var r=n>>3,a=0;a<t;a++)ke[a]=o()[r+a>>>0];return(e<0?ie[-e-1]:De[e]).apply(null,ke)},emscripten_resize_heap:function(e){var t=a().length;if((e>>>=0)<=t)return!1;var n,r=4294901760;if(e>r)return!1;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+100663296),Se(Math.min(r,(n=Math.max(e,i))+(65536-n%65536)%65536)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:de,fd_close:Ie,fd_seek:Te,fd_write:Ae,memory:E||d.wasmMemory},Me=(function(){var e={env:Le,wasi_snapshot_preview1:Le};function t(e,t){var n,r,a=e.exports;if(d.asm=a,n=d.asm._emscripten_tls_init,he.tlsInitFunctions.push(n),Z=d.asm.__indirect_function_table,r=d.asm.__wasm_call_ctors,j.unshift(r),R=t,!v){var s=he.unusedWorkers.length;he.unusedWorkers.forEach((function(e){he.loadWasmModuleToWorker(e,(function(){--s||function(){if(J--,d.monitorRunDependencies&&d.monitorRunDependencies(J),0==J&&(null!==ee&&(clearInterval(ee),ee=null),te)){var e=te;te=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!A&&(y||x)){if("function"==typeof fetch&&!ae(X))return fetch(X,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+X+"'";return e.arrayBuffer()})).catch((function(){return se(X)}));if(p)return new Promise((function(e,t){p(X,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return se(X)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){_("failed to asynchronously prepare wasm: "+e),ne(e)}))}if(v||(J++,d.monitorRunDependencies&&d.monitorRunDependencies(J)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(e){_("Module.instantiateWasm callback failed with error: "+e),l(e)}(A||"function"!=typeof WebAssembly.instantiateStreaming||re(X)||ae(X)||w||"function"!=typeof fetch?r(n):fetch(X,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return _("wasm streaming compile failed: "+e),_("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(Me=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),Oe=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(Oe=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),ze=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(ze=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Pe=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(Pe=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),We=d.__emscripten_thread_free_data=function(){return(We=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},Be=d.__emscripten_thread_exit=function(){return(Be=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},Ue=d._emscripten_stack_set_limits=function(){return(Ue=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Ve=d.stackSave=function(){return(Ve=d.stackSave=d.asm.stackSave).apply(null,arguments)},Ge=d.stackRestore=function(){return(Ge=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Ze=d.stackAlloc=function(){return(Ze=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};function He(e){if(e=e||g,!(J>0)){if(v)return u(d),Y(),void startWorker(d);!function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)e=d.preRun.shift(),K.unshift(e);var e;pe(K)}(),J>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Ee||(Ee=!0,d.calledRun=!0,B||(Y(),u(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!v){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)e=d.postRun.shift(),q.unshift(e);var e;pe(q)}}()))}}if(d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},d.keepRuntimeAlive=Q,d.wasmMemory=E,d.cwrap=function(e,t,n,r){var a=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&a&&!r?$e(e):function(){return _e(e,t,n,arguments)}},d.ExitStatus=oe,d.PThread=he,te=function e(){Ee||He(),Ee||(te=e)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(He(),c&&(Re={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!c.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!c.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Fe=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Fe=e}if(Re){var Ke=Fe._dispose;Fe._dispose=function(){Ke(),Re.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Re.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},8570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+u),n);if(u<8){var h=o(l(n,u));s=s.mul(h).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var y=i(1);n.ONE=y;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return!(1&~this.low)},I.isEven=function(){return!(1&this.low)},I.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(y)},I.neg=I.negate,I.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=a+l)>>>16,c+=(h+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,b=0,y=0,x=0;return y+=(x+=i*p)>>>16,b+=(y+=s*p)>>>16,y&=65535,b+=(y+=i*h)>>>16,f+=(b+=a*p)>>>16,b&=65535,f+=(b+=s*h)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+a*h+s*c+i*l,u((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;s=b}else{if(this.eq(S))return e.eq(y)||e.eq(w)?S:e.eq(S)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:w:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(S))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),h=o(n),p=h.mul(e);p.isNegative()||p.gt(a);)p=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=y),s=s.add(h),a=a.sub(p)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return u(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},8576:(e,t,n)=>{"use strict";n.d(t,{X:()=>a,j:()=>r});const r=1.7580993408473768,a=1.0507009873554805},8590:()=>{},8631:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({exp_:function(e){const t={x:(0,s.YT)(e,"x","exp")};return r.T2.runKernel(a.ox3,t)}})},8710:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(5119);const o=(0,n(929).op)({expandDims_:function(e,t=0){const n=(0,s.YT)(e,"x","expandDims","string_or_numeric");i.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.T2.runKernel(a.ybN,o,u)}})},8775:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var r=n(5119),a=n(7148),s=n(5030),i=n(5040),o=n(929),u=n(1902),l=n(2302),c=n(7986),d=n(6512),h=n(2855),p=n(5537),f=n(1361);const m=(0,o.op)({rfft_:function(e,t){(0,r.vA)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.d)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.x)([e,(0,h.U)(r)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),b=(0,l.t)((0,a.f)(m,g),[o,n]),y=(0,f.h)(b),x=Math.floor(n/2)+1,w=(0,u.x)(y),v=(0,i.n)(y),k=(0,d.l)(w,[x,n-x],w.shape.length-1),S=(0,d.l)(v,[x,n-x],v.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,(0,l.t)((0,a.f)(k[0],S[0]),I)}})},8794:(e,t,n)=>{"use strict";n.d(t,{X:()=>c});var r=n(1585),a=n(5441),s=n(8189),i=n(5119),o=n(7195),u=n(929),l=n(2302);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",d=[1,1],h){const p=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.vA(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.s_("conv2d",u,h);const b="NHWC"===c?m.shape[3]:m.shape[1];i.vA(b===f.shape[2],(()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${f.shape[2]}.`)),i.vA(o.G0(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.vA(o.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.vA(o.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h},w=r.T2.runKernel(a.p2J,y,x);return g?(0,l.t)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},8968:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({sigmoid_:function(e){const t={x:(0,s.YT)(e,"x","sigmoid","float32")};return r.T2.runKernel(a.vI1,t)}})},8990:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(1585),a=n(5441),s=n(565),i=n(8189);const o=(0,n(929).op)({pow_:function(e,t){let n=(0,i.YT)(e,"base","pow"),o=(0,i.YT)(t,"exp","pow");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.T2.runKernel(a.pyJ,u)}})},8991:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(1585),a=n(5441),s=n(565),i=n(8189);const o=(0,n(929).op)({floorDiv_:function(e,t){let n=(0,i.YT)(e,"a","floorDiv"),o=(0,i.YT)(t,"b","floorDiv");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.T2.runKernel(a.ElG,u)}})},9067:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},9160:function(e,t,n){!function(e){"use strict";function t(e){for(var t=0,n=Math.min(65536,e.length+1),r=new Uint16Array(n),a=[],s=0;;){var i=t<e.length;if(!i||s>=n-1){var o=r.subarray(0,s);if(a.push(String.fromCharCode.apply(null,o)),!i)return a.join("");e=e.subarray(t),t=0,s=0}var u=e[t++];if(128&u){if(192==(224&u)){var l=63&e[t++];r[s++]=(31&u)<<6|l}else if(224==(240&u)){l=63&e[t++];var c=63&e[t++];r[s++]=(31&u)<<12|l<<6|c}else if(240==(248&u)){var d=(7&u)<<18|(l=63&e[t++])<<12|(c=63&e[t++])<<6|63&e[t++];d>65535&&(d-=65536,r[s++]=d>>>10&1023|55296,d=56320|1023&d),r[s++]=d}}else r[s++]=u}}var n="Failed to ",r=function(e,t,r){if(e)throw new Error("".concat(n).concat(t,": the '").concat(r,"' option is unsupported."))},a="function"==typeof Buffer&&Buffer.from,s=a?function(e){return Buffer.from(e)}:function(e){for(var t=0,n=e.length,r=0,a=Math.max(32,n+(n>>>1)+7),s=new Uint8Array(a>>>3<<3);t<n;){var i=e.charCodeAt(t++);if(i>=55296&&i<=56319){if(t<n){var o=e.charCodeAt(t);56320==(64512&o)&&(++t,i=((1023&i)<<10)+(1023&o)+65536)}if(i>=55296&&i<=56319)continue}if(r+4>s.length){a+=8,a=(a*=1+t/e.length*2)>>>3<<3;var u=new Uint8Array(a);u.set(s),s=u}if(4294967168&i){if(4294965248&i)if(4294901760&i){if(4292870144&i)continue;s[r++]=i>>>18&7|240,s[r++]=i>>>12&63|128,s[r++]=i>>>6&63|128}else s[r++]=i>>>12&15|224,s[r++]=i>>>6&63|128;else s[r++]=i>>>6&31|192;s[r++]=63&i|128}else s[r++]=i}return s.slice?s.slice(0,r):s.subarray(0,r)};function i(){this.encoding="utf-8"}i.prototype.encode=function(e,t){return r(t&&t.stream,"encode","stream"),s(e)};var o=!a&&"function"==typeof Blob&&"function"==typeof URL&&"function"==typeof URL.createObjectURL,u=["utf-8","utf8","unicode-1-1-utf-8"],l=t;a?l=function(e,t){return(e instanceof Buffer?e:Buffer.from(e.buffer,e.byteOffset,e.byteLength)).toString(t)}:o&&(l=function(e){try{return function(e){var t;try{var n=new Blob([e],{type:"text/plain;charset=UTF-8"});t=URL.createObjectURL(n);var r=new XMLHttpRequest;return r.open("GET",t,!1),r.send(),r.responseText}finally{t&&URL.revokeObjectURL(t)}}(e)}catch(n){return t(e)}});var c="construct 'TextDecoder'",d="".concat(n," ").concat(c,": the ");function h(e,t){if(r(t&&t.fatal,c,"fatal"),e=e||"utf-8",!(a?Buffer.isEncoding(e):-1!==u.indexOf(e.toLowerCase())))throw new RangeError("".concat(d," encoding label provided ('").concat(e,"') is invalid."));this.encoding=e,this.fatal=!1,this.ignoreBOM=!1}h.prototype.decode=function(e,t){var n;return r(t&&t.stream,"decode","stream"),n=e instanceof Uint8Array?e:e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer):new Uint8Array(e),l(n,this.encoding)},e.TextEncoder=e.TextEncoder||i,e.TextDecoder=e.TextDecoder||h}("undefined"!=typeof window?window:void 0!==n.g?n.g:this)},9171:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(1585),a=n(2046),s=n(5119),i=n(3879);function o(e,t,n,o){if(null==o)o=(0,s.X$)(e);else if("complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,a.Nw)(e)||(0,a.Oj)(e)){if("float32"!==o&&"int32"!==o)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return r.T2.backend.createTensorFromGPUData(e,t||n,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);const e=(0,s.Ze)(t),r=(0,s.Ze)(n);(0,s.vA)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==(0,s.Ze)(t.slice(e));(0,s.vA)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),r.T2.makeTensor(e,t,o)}},9258:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(1585),a=n(5441),s=n(565),i=n(8189);const o=(0,n(929).op)({mul_:function(e,t){let n=(0,i.YT)(e,"a","mul"),o=(0,i.YT)(t,"b","mul");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.T2.runKernel(a.xu7,u)}})},9326:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({any_:function(e,t=null,n=!1){const i={x:(0,s.YT)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.T2.runKernel(a.FSt,i,o)}})},9348:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({sqrt_:function(e){const t={x:(0,s.YT)(e,"x","sqrt","float32")};return r.T2.runKernel(a.dFH,t)}})},9359:(e,t,n)=>{"use strict";n.d(t,{y:()=>u});var r=n(1585),a=n(5441),s=n(565),i=n(8189),o=n(8991);const u=(0,n(929).op)({div_:function(e,t){let n=(0,i.YT)(e,"a","div"),u=(0,i.YT)(t,"b","div");if([n,u]=(0,s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.w)(n,u);const l={a:n,b:u};return r.T2.runKernel(a.sDr,l,{})}})},9593:e=>{e.exports.$='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'},9809:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(1585),a=n(5441),s=n(8189),i=n(5119);const o=(0,n(929).op)({cast_:function(e,t){const n=(0,s.YT)(e,"x","cast");if(!i.xn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.T2.runKernel(a.KXH,o,u)}})},9885:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(1585),a=n(5441),s=n(8189);const i=(0,n(929).op)({onesLike_:function(e){const t={x:(0,s.YT)(e,"x","onesLike")};return r.T2.runKernel(a.LWX,t)}})},9893:()=>{},9986:(e,t,n)=>{"use strict";n.d(t,{w:()=>l});var r=n(8189),a=n(5119),s=n(8794),i=n(676),o=n(929),u=n(2302);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],d="NHWC"){const h=(0,r.YT)(e,"x","separableConv2d"),p=(0,r.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,r.YT)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.vA(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.vA(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),a.vA(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),a.vA(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.vA(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const b=p.shape[2],y=p.shape[3];a.vA(f.shape[2]===b*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${b*y}, but got ${f.shape[2]}.`));const x=(0,i.G)(m,p,o,l,d,c),w=(0,s.X)(x,f,1,"valid",d);return g?(0,u.t)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})}},s={};function i(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={id:e,loaded:!1,exports:{}};return a[e].call(n.exports,n,n.exports,i),n.loaded=!0,n.exports}i.amdD=function(){throw new Error("define cannot be used indirect")},i.amdO={},e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},i.a=(a,s,i)=>{var o;i&&((o=[]).d=-1);var u,l,c,d=new Set,h=a.exports,p=new Promise(((e,t)=>{c=t,l=e}));p[t]=h,p[e]=e=>(o&&e(o),d.forEach(e),p.catch((e=>{}))),a.exports=p,s((a=>{var s;u=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var s=[];s.d=0,a.then((e=>{i[t]=e,r(s)}),(e=>{i[n]=e,r(s)}));var i={};return i[e]=e=>e(s),i}}var o={};return o[e]=e=>{},o[t]=a,o})))(a);var i=()=>u.map((e=>{if(e[n])throw e[n];return e[t]})),l=new Promise((t=>{(s=()=>t(i)).r=0;var n=e=>e!==o&&!d.has(e)&&(d.add(e),e&&!e.d&&(s.r++,e.push(s)));u.map((t=>t[e](n)))}));return s.r?l:i()}),(e=>(e?c(p[n]=e):l(h),r(o)))),o&&o.d<0&&(o.d=0)},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),i(1329)})();